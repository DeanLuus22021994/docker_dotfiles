{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer","stopWordFilter","trimmer"]},"docs":[{"location":"agent/code-quality/","title":"Code quality","text":"<ul> <li>validation</li> <li>testing description: Code quality standards and validation procedures \u2014\\n# Code Quality</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/code-quality/#pre-commit-hooks-automated","title":"Pre-commit Hooks (Automated)","text":"<ul> <li>Runs as <code>cluster-pre-commit</code> container service (dev profile)</li> <li>Auto-installs hooks on devcontainer startup</li> <li>Blocks commits on errors (no warnings)</li> <li>Checks: YAML/JSON syntax, secrets detection, docker-compose validation</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/code-quality/#manual-validation","title":"Manual Validation","text":"PowerShell<pre><code># Environment variables\npython scripts/validate_env.py\n\n# Docker Compose syntax\ndocker-compose config --quiet\n\n# Nginx configs\ndocker run --rm -v \"${PWD}/.config/nginx:/etc/nginx:ro\" nginx:alpine nginx -t\n\n# All configs\npython scripts/validate_configs.py\n</code></pre>","tags":["documentation","agent","development"]},{"location":"agent/code-quality/#error-messages","title":"Error Messages","text":"<ul> <li>Explicit: Show exact file path, line number</li> <li>Actionable: Provide fix command or example</li> <li>Unambiguous: No vague errors, clear root cause</li> </ul> <p>See Docker stack guide for service management.</p>","tags":["documentation","agent","development"]},{"location":"agent/configuration/","title":"Configuration","text":"<ul> <li>configuration</li> <li>architecture description: Configuration management structure and organization guidelines \u2014\\n# Configuration Management</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/configuration/#structure","title":"Structure","text":"Text Only<pre><code>.config/\n\u251c\u2500\u2500 nginx/          # Web server configs\n\u251c\u2500\u2500 database/       # Database server configs\n\u251c\u2500\u2500 services/       # Service-specific configs\n\u251c\u2500\u2500 docker/         # Docker daemon configs\n\u251c\u2500\u2500 github/         # GitHub Actions workflows\n\u2514\u2500\u2500 monitoring/     # Prometheus, Grafana configs\n</code></pre>","tags":["documentation","agent","development"]},{"location":"agent/configuration/#rules","title":"Rules","text":"<ol> <li>All configs in <code>.config/</code> - No scattered configs</li> <li>Native formats - Preserve .conf, .json, .sh (not YAML conversion)</li> <li>Read-only mounts - Configs mounted with <code>:ro</code> flag</li> <li>Validated before use - Run validation scripts before deployment</li> </ol>","tags":["documentation","agent","development"]},{"location":"agent/configuration/#config-locations","title":"Config Locations","text":"Type Path Purpose Nginx <code>.config/nginx/</code> loadbalancer.conf, main.conf, default.conf Database <code>.config/database/</code> postgresql.conf, mariadb.conf Services <code>.config/services/</code> pgadmin-servers.json, localstack-init.sh Docker <code>.config/docker/</code> buildkitd.toml, daemon.json Monitoring <code>.config/monitoring/</code> prometheus.yml, grafana/ <p>See environment variables guide for credentials.</p>","tags":["documentation","agent","development"]},{"location":"agent/docker-stack/","title":"Docker stack","text":"<ul> <li>docker</li> <li>docker-compose</li> <li>compose description: Docker stack services and management commands \u2014\\n# Docker Stack</li> </ul>","tags":["documentation","agent","development","docker"]},{"location":"agent/docker-stack/#services-25","title":"Services (25+)","text":"<ul> <li>Databases: PostgreSQL, MariaDB, Redis</li> <li>Storage: MinIO (S3-compatible)</li> <li>Monitoring: Prometheus, Grafana, Alertmanager</li> <li>Development: Jupyter, pgAdmin, Redis Commander</li> <li>Infrastructure: nginx loadbalancer, BuildKit, LocalStack</li> <li>DevContainer: Python 3.14.0 + Node 22</li> </ul>","tags":["documentation","agent","development","docker"]},{"location":"agent/docker-stack/#profiles","title":"Profiles","text":"<ul> <li>Default: Production services (databases, monitoring, web servers)</li> <li>dev: Includes devcontainer, pre-commit, docs server</li> <li>docs: GitHub Pages Jekyll server</li> </ul>","tags":["documentation","agent","development","docker"]},{"location":"agent/docker-stack/#commands","title":"Commands","text":"PowerShell<pre><code># Production stack\ndocker-compose up -d\n\n# Development stack (includes devcontainer and pre-commit)\ndocker-compose --profile dev up -d\n\n# View logs\ndocker-compose logs -f [service]\n\n# Restart service\ndocker-compose restart [service]\n\n# Stop all\ndocker-compose down\n</code></pre> <p>See file organization guide for config locations.</p>","tags":["documentation","agent","development","docker"]},{"location":"agent/environment/","title":"Environment","text":"<ul> <li>environment</li> <li>secrets</li> <li>authentication description: Environment variables naming conventions and setup procedures \u2014\\n# Environment Variables</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/environment/#naming-convention","title":"Naming Convention","text":"<ul> <li>Prefix: All service secrets use <code>DOCKER_</code> prefix</li> <li>Examples: <code>DOCKER_POSTGRES_PASSWORD</code>, <code>DOCKER_MARIADB_ROOT_PASSWORD</code></li> <li>Source: GitHub Secrets (CI/CD) or host environment (local dev)</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/environment/#setup","title":"Setup","text":"PowerShell<pre><code># Copy template\nCopy-Item .env.example .env\n\n# Edit with credentials\ncode .env\n\n# Load variables\nGet-Content .env | ForEach-Object {\n  $var = $_.Split('=')\n  [Environment]::SetEnvironmentVariable($var[0], $var[1], 'Process')\n}\n\n# Validate\npython scripts/validate_env.py\n</code></pre>","tags":["documentation","agent","development"]},{"location":"agent/environment/#required-variables","title":"Required Variables","text":"<ul> <li><code>GITHUB_OWNER</code>, <code>GH_PAT</code></li> <li><code>DOCKER_POSTGRES_PASSWORD</code></li> <li><code>DOCKER_MARIADB_ROOT_PASSWORD</code>, <code>DOCKER_MARIADB_PASSWORD</code></li> <li><code>DOCKER_REDIS_PASSWORD</code></li> <li><code>DOCKER_MINIO_ROOT_USER</code>, <code>DOCKER_MINIO_ROOT_PASSWORD</code></li> <li><code>DOCKER_GRAFANA_ADMIN_PASSWORD</code></li> <li><code>DOCKER_JUPYTER_TOKEN</code></li> <li><code>DOCKER_PGADMIN_PASSWORD</code></li> </ul> <p>See code quality guide for validation procedures.</p>","tags":["documentation","agent","development"]},{"location":"agent/file-organization/","title":"File organization","text":"<ul> <li>architecture description: File organization patterns and volume mount strategies \u2014\\n# File Organization</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/file-organization/#volume-mounts","title":"Volume Mounts","text":"YAML<pre><code># Example: nginx loadbalancer\nvolumes:\n  - ./.config/nginx/loadbalancer.conf:/etc/nginx/nginx.conf:ro\n\n# Example: PostgreSQL\nvolumes:\n  - ./.config/database/postgresql.conf:/etc/postgresql/postgresql.conf:ro\n</code></pre>","tags":["documentation","agent","development"]},{"location":"agent/file-organization/#dockerfile-copy","title":"Dockerfile COPY","text":"Docker<pre><code># Example: MariaDB\nCOPY --chown=mysql:mysql .config/database/mariadb.conf /etc/mysql/conf.d/custom.cnf\n\n# Example: nginx\nCOPY --chown=nginx:nginx .config/nginx/main.conf /etc/nginx/nginx.conf\n</code></pre>","tags":["documentation","agent","development"]},{"location":"agent/file-organization/#vscode-configuration","title":"VSCode Configuration","text":"<p>Team Settings (Tracked): - <code>.vscode/settings.json</code> - YAML schemas, Copilot enabled - Shared across team, committed to repo</p> <p>Personal Settings (Gitignored): - <code>.vscode/settings.local.json</code> - AI model preferences - Local only, added to <code>.gitignore</code></p> <p>See security guidelines for credential management.</p>","tags":["documentation","agent","development"]},{"location":"agent/principles/","title":"Principles","text":"<ul> <li>development</li> <li>best-practices</li> <li>architecture description: Core development principles and guidelines for the Docker cluster project \u2014\\n# Development Principles</li> </ul> <p>TDD (Test-Driven Development): Write tests before implementation SRP (Single Responsibility Principle): One concern per module/file SSoT (Single Source of Truth): No duplication, one authoritative source DRY (Don\u2019t Repeat Yourself): Extract shared utilities, no code duplication Config-Driven: Behavior controlled by configuration, not code Modular: Loosely coupled, highly cohesive components</p>","tags":["documentation","agent","development"]},{"location":"agent/principles/#python-environment","title":"Python Environment","text":"<ul> <li>Python 3.14.0+ for all scripts</li> <li>UV package manager for dependency management (faster than pip)</li> <li>NOT Microsoft Store Python (causes PATH issues on Windows)</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/principles/#scripts-organization-srpdry","title":"Scripts Organization (SRP/DRY)","text":"<p>All scripts organized by task domain: - <code>python/validation/</code> - validate_env.py, validate_configs.py - <code>python/audit/</code> - Code audit scripts - <code>python/utils/</code> - Shared utilities (colors.py, logging.py) - <code>powershell/config/</code> - Configuration management - <code>powershell/docker/</code> - Docker operations - <code>bash/docker/</code> - Docker operations</p> <p>See python environment guide for setup details.</p>","tags":["documentation","agent","development"]},{"location":"agent/python-setup/","title":"Python setup","text":"<ul> <li>python</li> <li>environment</li> <li>setup description: Python 3.14 environment setup for development scripts \u2014\\n# Python Environment Setup</li> </ul>","tags":["documentation","agent","development","python"]},{"location":"agent/python-setup/#required-version","title":"Required Version","text":"<ul> <li>Python 3.14.0+ for all scripts</li> <li>UV package manager for dependency management</li> <li>NOT Microsoft Store Python (causes PATH issues)</li> </ul>","tags":["documentation","agent","development","python"]},{"location":"agent/python-setup/#setup-windows","title":"Setup (Windows)","text":"PowerShell<pre><code># 1. Install Python 3.14.0 from python.org\n# 2. Disable Windows App Execution Aliases:\n#    Settings \u2192 Apps \u2192 Advanced app settings \u2192 App execution aliases\n#    Disable: \"App Installer python.exe\" and \"python3.exe\"\n\n# 3. Verify installation\npython --version  # Should show Python 3.14.0\nwhere.exe python  # Should NOT show AppData\\Local\\Microsoft\n\n# 4. Install UV\npip install uv\n\n# 5. Install dependencies\nuv pip install -r requirements.txt\n</code></pre>","tags":["documentation","agent","development","python"]},{"location":"agent/python-setup/#shared-utilities-dry","title":"Shared Utilities (DRY)","text":"<ul> <li><code>python/utils/colors.py</code>: ANSI color codes</li> <li><code>python/utils/file_utils.py</code>: File operations</li> <li><code>python/utils/logging_utils.py</code>: Logging config</li> </ul> <p>Import from <code>scripts.python.utils</code> to avoid code duplication.</p> <p>See configuration management guide for config details.</p>","tags":["documentation","agent","development","python"]},{"location":"agent/reference/","title":"Reference","text":"<ul> <li>documentation</li> <li>commands description: Quick reference for file paths, validation commands, and common tasks \u2014\\n# Quick Reference</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/reference/#validation-commands","title":"Validation Commands","text":"PowerShell<pre><code>python scripts/python/validation/validate_env.py          # Environment\ndocker-compose config --quiet                              # Compose syntax\npython scripts/python/validation/validate_configs.py       # All configs\n</code></pre>","tags":["documentation","agent","development"]},{"location":"agent/reference/#common-tasks","title":"Common Tasks","text":"<p>Add new service: 1. Add to docker-compose.yml 2. Add environment variables to .env.example 3. Update scripts/validate_env.py 4. Add config to .config/[category]/ 5. Validate: docker-compose config \u2013quiet</p> <p>Update config: 1. Edit file in .config/[category]/ 2. Validate syntax (category-specific command) 3. Restart service: docker-compose restart [service]</p> <p>Change password: 1. Update .env file 2. Restart service: docker-compose restart [service] 3. Update GitHub Secrets (for CI/CD)</p> <p>Remember: Config-driven, SSoT, explicit paths, validate before deploy, human approves all changes.</p>","tags":["documentation","agent","development"]},{"location":"agent/security/","title":"Security","text":"<ul> <li>security</li> <li>authentication</li> <li>secrets</li> <li>best-practices description: Security guidelines and credential management procedures \u2014\\n# Security Guidelines</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/security/#never-commit","title":"Never Commit","text":"<ul> <li><code>.env</code> file (contains credentials)</li> <li><code>.vscode/*.local.json</code> (personal preferences)</li> <li>Any file with actual passwords or tokens</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/security/#always-use","title":"Always Use","text":"<ul> <li>Environment variables with <code>DOCKER_</code> prefix</li> <li><code>.env.example</code> as template (no real credentials)</li> <li>GitHub Secrets for CI/CD</li> <li>Strong passwords (16+ chars, mixed characters)</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/security/#password-rotation","title":"Password Rotation","text":"<ul> <li>Not automated (manual process)</li> <li>Update <code>.env</code> file locally</li> <li>Update GitHub Secrets in repository settings</li> <li>Restart affected services: <code>docker-compose restart [service]</code></li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/security/#best-practices","title":"Best Practices","text":"<ul> <li>Use password manager to generate and store credentials</li> <li>Rotate credentials periodically</li> <li>Never hardcode secrets in configs or code</li> <li>Use read-only mounts for sensitive configs</li> <li>Regular security updates via base images</li> </ul> <p>See AI workflow guide for development process.</p>","tags":["documentation","agent","development"]},{"location":"agent/workflow/","title":"Workflow","text":"<ul> <li>automation</li> <li>development description: AI-optimized development workflow and human-in-the-loop procedures \u2014\\n# AI-Optimized Workflow</li> </ul>","tags":["documentation","agent","development"]},{"location":"agent/workflow/#human-in-the-loop","title":"Human-in-the-Loop","text":"<ol> <li>Agent proposes changes - Clear file paths, specific edits</li> <li>Human reviews - Validation scripts provide clear errors</li> <li>Manual approval - Developer commits after verification</li> <li>Pre-commit validates - Automated checks before commit</li> <li>CI/CD validates - GitHub Actions on push</li> </ol>","tags":["documentation","agent","development"]},{"location":"agent/workflow/#example-workflow","title":"Example Workflow","text":"PowerShell<pre><code># 1. Agent makes changes (via Copilot)\n# ... file edits happen ...\n\n# 2. Validate changes\npython scripts/validate_env.py\ndocker-compose config --quiet\n\n# 3. Test locally\ndocker-compose --profile dev up -d\ndocker-compose ps\n\n# 4. Commit (pre-commit hooks run automatically)\ngit add .\ngit commit -m \"feat: migrate configs to .config/ structure\"\n\n# 5. Push (CI/CD validates)\ngit push origin main\n</code></pre> <p>See quick reference for common commands and file paths.</p>","tags":["documentation","agent","development"]},{"location":"api/overview/","title":"Overview","text":"<ul> <li>api</li> <li>overview</li> <li>documentation description: Documentation for overview in api \u2014\\n# Docker API Proxy</li> </ul> <p>Secure HTTP API for accessing Docker Engine metrics and container health information.</p>","tags":["documentation","api","reference"]},{"location":"api/overview/#features","title":"Features","text":"<ul> <li>Container Listing: Get all containers with health status</li> <li>Real-time Stats: CPU, memory, network, and disk I/O metrics</li> <li>System Info: Docker version, host information, resource totals</li> <li>Aggregated Stats: Cluster-wide resource usage summary</li> <li>Health Checks: Built-in health endpoint for monitoring</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/overview/#api-endpoints","title":"API Endpoints","text":"","tags":["documentation","api","reference"]},{"location":"api/overview/#health-check","title":"Health Check","text":"Text Only<pre><code>GET /health\n</code></pre> Returns server health status.","tags":["documentation","api","reference"]},{"location":"api/overview/#container-list","title":"Container List","text":"Text Only<pre><code>GET /api/containers\n</code></pre> Returns all containers with health status and basic info.","tags":["documentation","api","reference"]},{"location":"api/overview/#container-stats","title":"Container Stats","text":"Text Only<pre><code>GET /api/containers/:id/stats\n</code></pre> Returns real-time stats for a specific container.","tags":["documentation","api","reference"]},{"location":"api/overview/#system-info","title":"System Info","text":"Text Only<pre><code>GET /api/system/info\n</code></pre> Returns Docker system information and host details.","tags":["documentation","api","reference"]},{"location":"api/overview/#system-version","title":"System Version","text":"Text Only<pre><code>GET /api/system/version\n</code></pre> Returns Docker Engine version information.","tags":["documentation","api","reference"]},{"location":"api/overview/#aggregate-stats","title":"Aggregate Stats","text":"Text Only<pre><code>GET /api/stats/aggregate\n</code></pre> Returns aggregated stats across all running containers.","tags":["documentation","api","reference"]},{"location":"api/overview/#development","title":"Development","text":"Bash<pre><code>npm install\nnpm run dev\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/overview/#production","title":"Production","text":"Bash<pre><code>npm ci --only=production\nnpm start\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/overview/#docker","title":"Docker","text":"Bash<pre><code>docker build -t docker-api-proxy .\ndocker run -p 3001:3001 -v /var/run/docker.sock:/var/run/docker.sock docker-api-proxy\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/overview/#security-considerations","title":"Security Considerations","text":"<ul> <li>Mount Docker socket read-only in production</li> <li>Use environment variables for configuration</li> <li>Enable rate limiting for API endpoints</li> <li>Implement authentication for production use</li> <li>Run as non-root user (nodejs)</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/overview/#environment-variables","title":"Environment Variables","text":"Variable Default Description PORT 3001 Server port NODE_ENV production Environment mode","tags":["documentation","api","reference"]},{"location":"api/overview/#response-examples","title":"Response Examples","text":"","tags":["documentation","api","reference"]},{"location":"api/overview/#container-stats_1","title":"Container Stats","text":"JSON<pre><code>{\n  \"container\": \"abc123\",\n  \"timestamp\": \"2025-10-25T10:30:00.000Z\",\n  \"cpu\": {\n    \"percent\": \"2.50\",\n    \"usage\": 1234567890,\n    \"system\": 9876543210\n  },\n  \"memory\": {\n    \"usage\": 134217728,\n    \"limit\": 536870912,\n    \"percent\": \"25.00\"\n  },\n  \"network\": {\n    \"rx_bytes\": 1024000,\n    \"tx_bytes\": 512000\n  }\n}\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/overview/#aggregate-stats_1","title":"Aggregate Stats","text":"JSON<pre><code>{\n  \"timestamp\": \"2025-10-25T10:30:00.000Z\",\n  \"total_containers\": 20,\n  \"total_cpu_percent\": \"45.80\",\n  \"total_memory_bytes\": 8589934592,\n  \"containers\": [...]\n}\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/overview/#license","title":"License","text":"<p>MIT</p>","tags":["documentation","api","reference"]},{"location":"api/security/cors/","title":"Cors","text":"<ul> <li>api</li> <li>security description: CORS configuration for cross-origin requests \u2014\\n# CORS Configuration</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/cors/#environment-variable","title":"Environment Variable","text":"Bash<pre><code>CORS_ORIGIN=https://your-domain.com,https://www.your-domain.com\n</code></pre> <p>Supports comma-separated multiple origins.</p>","tags":["documentation","api","reference"]},{"location":"api/security/cors/#implementation","title":"Implementation","text":"JavaScript<pre><code>const cors = require('cors');\n\nconst corsOptions = {\n  origin: process.env.CORS_ORIGIN?.split(',') || '*',\n  credentials: true,  // Allow cookies/auth headers\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n};\n\napp.use(cors(corsOptions));\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/cors/#development-vs-production","title":"Development vs Production","text":"<p>Development: <code>CORS_ORIGIN=*</code> (allow all origins)</p> <p>Production: Specific domains only</p> Bash<pre><code>CORS_ORIGIN=https://dashboard.example.com,https://api.example.com\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/cors/#preflight-requests","title":"Preflight Requests","text":"<p>CORS automatically handles OPTIONS preflight requests:</p> HTTP<pre><code>OPTIONS /api/containers HTTP/1.1\nOrigin: https://dashboard.example.com\nAccess-Control-Request-Method: GET\n</code></pre> <p>Response includes allowed origins/methods/headers.</p>","tags":["documentation","api","reference"]},{"location":"api/security/cors/#security-considerations","title":"Security Considerations","text":"<ul> <li>Never use <code>*</code> in production with credentials</li> <li>Whitelist specific subdomains, not wildcards</li> <li>Validate Origin header on sensitive operations</li> <li>Consider CSRF tokens for state-changing requests</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/cors/#troubleshooting","title":"Troubleshooting","text":"<p>CORS error in browser: Check CORS_ORIGIN includes requesting domain.</p>","tags":["documentation","api","reference"]},{"location":"api/security/jwt-authentication/","title":"Jwt authentication","text":"<ul> <li>api</li> <li>security</li> <li>jwt</li> <li>authentication description: JWT authentication implementation and configuration \u2014\\n# JWT Authentication</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/jwt-authentication/#configuration","title":"Configuration","text":"<p>Environment variables:</p> Bash<pre><code>AUTH_ENABLED=true  # Enable/disable authentication\nJWT_SECRET=$(openssl rand -hex 32)  # 64-character secret\nJWT_EXPIRES_IN=8h  # Access token expiration\nJWT_REFRESH_EXPIRES_IN=7d  # Refresh token expiration\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/jwt-authentication/#endpoints","title":"Endpoints","text":"<p>Register - <code>POST /api/auth/register</code></p> JSON<pre><code>{\n  \"username\": \"admin\",\n  \"password\": \"secure_password\",\n  \"email\": \"admin@example.com\"\n}\n</code></pre> <p>Login - <code>POST /api/auth/login</code></p> JSON<pre><code>{\"username\": \"admin\", \"password\": \"password\"}\n</code></pre> <p>Returns: <code>{\"accessToken\": \"...\", \"refreshToken\": \"...\"}</code></p> <p>Refresh - <code>POST /api/auth/refresh</code></p> JSON<pre><code>{\"refreshToken\": \"...\"}\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/jwt-authentication/#protected-routes","title":"Protected Routes","text":"<p>Add <code>Authorization: Bearer &lt;token&gt;</code> header:</p> Bash<pre><code>curl https://api.example.com/containers \\\n  -H \"Authorization: Bearer eyJhbGc...\"\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/jwt-authentication/#token-structure","title":"Token Structure","text":"<ul> <li>Access token - Short-lived (8h), for API requests</li> <li>Refresh token - Long-lived (7d), to get new access tokens</li> <li>Payload - User ID, username, issued/expires timestamps</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/jwt-authentication/#security-best-practices","title":"Security Best Practices","text":"<ul> <li>Use strong JWT_SECRET (32+ bytes)</li> <li>Rotate secrets periodically</li> <li>Implement token blacklist for logout</li> <li>Use HTTPS only</li> <li>Store tokens securely (httpOnly cookies preferred)</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/overview/","title":"Overview","text":"<ul> <li>api</li> <li>security</li> <li>overview description: API security overview and threat mitigation \u2014\\n# API Security Overview</li> </ul> <p>Express.js API with JWT authentication, rate limiting, and Docker socket access controls.</p>","tags":["documentation","api","reference"]},{"location":"api/security/overview/#security-features","title":"Security Features","text":"<ul> <li>JWT Authentication - Token-based auth (optional, \\AUTH_ENABLED)</li> <li>Rate Limiting - 100 req/15min general, 10 req/15min stats  </li> <li>CORS - Configurable allowed origins</li> <li>Input Validation - Container ID format validation</li> <li>Error Sanitization - No sensitive data in error messages</li> <li>Docker Socket - Read-only mount with proxy recommended</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/overview/#attack-surface","title":"Attack Surface","text":"<ol> <li>Docker socket access (high risk)</li> <li>API endpoints (medium risk)</li> <li>Authentication bypass (low risk with JWT)</li> <li>DoS attacks (mitigated by rate limiting)</li> </ol>","tags":["documentation","api","reference"]},{"location":"api/security/overview/#security-layers","title":"Security Layers","text":"<ol> <li>Network layer (Traefik HTTPS, IP whitelisting)</li> <li>Application layer (JWT, rate limiting, validation)</li> <li>Docker layer (socket proxy, read-only mount)</li> <li>Monitoring layer (Prometheus alerts, audit logs)</li> </ol>","tags":["documentation","api","reference"]},{"location":"api/security/overview/#compliance","title":"Compliance","text":"<ul> <li>OWASP Top 10 coverage</li> <li>CIS Docker Benchmark alignment</li> <li>Secure by default configuration</li> </ul> <p>See subdocs for implementation details.</p>","tags":["documentation","api","reference"]},{"location":"api/security/rate-limiting/","title":"Rate limiting","text":"<ul> <li>api</li> <li>security description: Rate limiting configuration and DoS protection \u2014\\n# Rate Limiting</li> </ul>","tags":["documentation","api","reference"]},{"location":"api/security/rate-limiting/#configuration","title":"Configuration","text":"<p>General API - 100 requests per 15 minutes</p> JavaScript<pre><code>const limiter = rateLimit({\n  windowMs: 15 * 60 * 1000,  // 15 minutes\n  max: 100,                   // Max requests per window\n  message: 'Too many requests, please try again later'\n});\n</code></pre> <p>Container Stats - 10 requests per 15 minutes (expensive operation)</p> JavaScript<pre><code>const statsLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000,\n  max: 10,\n  message: 'Too many stats requests, please try again later'\n});\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/rate-limiting/#response-headers","title":"Response Headers","text":"Text Only<pre><code>X-RateLimit-Limit: 100\nX-RateLimit-Remaining: 95\nX-RateLimit-Reset: 1698765432\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/rate-limiting/#error-response","title":"Error Response","text":"<p>429 Too Many Requests:</p> JSON<pre><code>{\n  \"error\": \"Too many requests, please try again later\",\n  \"retryAfter\": 900  // seconds\n}\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/rate-limiting/#bypass-production","title":"Bypass (Production)","text":"<p>Consider IP whitelisting for trusted services:</p> JavaScript<pre><code>const limiter = rateLimit({\n  skip: (req) =&gt; trustedIPs.includes(req.ip),\n  ...\n});\n</code></pre>","tags":["documentation","api","reference"]},{"location":"api/security/rate-limiting/#monitoring","title":"Monitoring","text":"<p>Track rate limit hits in Prometheus:</p> Text Only<pre><code>http_requests_rate_limited_total{endpoint=\"/api/containers/stats\"}\n</code></pre>","tags":["documentation","api","reference"]},{"location":"config/database/","title":"Database","text":"<ul> <li>documentation description: Documentation for database in config \u2014\\n# Database Configuration</li> </ul> <p>This directory contains database server configurations for PostgreSQL and MariaDB.</p>","tags":["documentation","configuration","setup"]},{"location":"config/database/#files","title":"Files","text":"","tags":["documentation","configuration","setup"]},{"location":"config/database/#postgresqlconf","title":"<code>postgresql.conf</code>","text":"<p>Purpose: PostgreSQL server configuration optimized for cluster workloads Used by: <code>cluster-postgres</code> service in docker-compose.yml Mounts to: <code>/etc/postgresql/postgresql.conf</code> in postgres container Key settings: - Max connections: 200 - Shared buffers: 256MB - Logging: DDL statements, slow queries &gt;1s - Performance monitoring: pg_stat_statements enabled - Replication: Prepared for HA with WAL settings</p>","tags":["documentation","configuration","setup"]},{"location":"config/database/#mariadbconf","title":"<code>mariadb.conf</code>","text":"<p>Purpose: MariaDB server configuration with InnoDB optimizations Used by: <code>cluster-mariadb</code> service in docker-compose.yml Mounts to: <code>/etc/mysql/conf.d/custom.cnf</code> in mariadb container Key settings: - Character set: utf8mb4 - InnoDB buffer pool: 256MB - Binary logging enabled for replication - Slow query log: queries &gt;2s - Performance schema enabled</p>","tags":["documentation","configuration","setup"]},{"location":"config/database/#usage","title":"Usage","text":"<p>Configs are mounted as read-only volumes in docker-compose.yml: </p>YAML<pre><code>volumes:\n  - ./.config/database/postgresql.conf:/etc/postgresql/postgresql.conf:ro\n  - ./.config/database/mariadb.conf:/etc/mysql/conf.d/custom.cnf:ro\n</code></pre><p></p>","tags":["documentation","configuration","setup"]},{"location":"config/database/#tuning-guidelines","title":"Tuning Guidelines","text":"","tags":["documentation","configuration","setup"]},{"location":"config/database/#postgresql","title":"PostgreSQL","text":"<ul> <li>Adjust <code>shared_buffers</code> to 25% of available RAM</li> <li>Set <code>effective_cache_size</code> to 50-75% of available RAM</li> <li>Increase <code>max_connections</code> based on application needs</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/database/#mariadb","title":"MariaDB","text":"<ul> <li>Set <code>innodb_buffer_pool_size</code> to 70-80% of available RAM</li> <li>Adjust <code>max_connections</code> based on concurrent client count</li> <li>Monitor slow query log to optimize long-running queries</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/database/#validation","title":"Validation","text":"<p>Test configuration syntax: </p>Bash<pre><code># PostgreSQL\ndocker run --rm -v \"$(pwd)/.config/database/postgresql.conf:/tmp/postgresql.conf:ro\" postgres:16-alpine postgres --config-file=/tmp/postgresql.conf --version\n\n# MariaDB\ndocker run --rm -v \"$(pwd)/.config/database/mariadb.conf:/etc/mysql/conf.d/custom.cnf:ro\" mariadb:11 mysqld --help --verbose\n</code></pre><p></p>","tags":["documentation","configuration","setup"]},{"location":"config/docker/","title":"Docker","text":"<ul> <li>docker</li> <li>documentation description: Documentation for docker in config \u2014\\n# Docker Configuration</li> </ul> <p>This directory contains Docker-specific configuration files for local development and production deployments.</p>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#files","title":"Files","text":"","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#daemonjson","title":"<code>daemon.json</code>","text":"<p>Docker daemon configuration - for reference only.</p> <p>Location to apply: - Linux: <code>/etc/docker/daemon.json</code> - Windows (WSL2): <code>%USERPROFILE%\\.docker\\daemon.json</code> or WSL: <code>/etc/docker/daemon.json</code> - macOS: <code>~/.docker/daemon.json</code></p> <p>Key settings: - BuildKit enabled by default - JSON file logging with 30MB rotation (3\u00d710MB) - Overlay2 storage driver - Custom network pools to avoid conflicts - 20GB build cache</p> <p>Apply changes: </p>Bash<pre><code># Linux/macOS\nsudo systemctl restart docker\n\n# Windows Docker Desktop\n# Restart Docker Desktop from system tray\n</code></pre><p></p>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#buildkitdtoml","title":"<code>buildkitd.toml</code>","text":"<p>BuildKit daemon configuration for the <code>cluster-buildkit</code> service.</p> <p>Usage: Mounted into the BuildKit container via docker-compose.yml</p> <p>Key Features: - 10GB cache with 3-day retention - Multi-platform support: amd64, arm64 - OCI workers with rootless execution - Garbage collection: Automatic cleanup of old build cache - Build history: 7-day retention with max 50 records</p> <p>Cache Settings: </p>TOML<pre><code>[worker.oci]\n  max-parallelism = 4\n  \n[[worker.oci.gcpolicy]]\n  keepBytes = 10737418240  # 10GB\n  keepDuration = 259200    # 3 days\n  filters = [ \"type==source.local\", \"type==exec.cachemount\", \"type==source.git.checkout\"]\n</code></pre><p></p> <p>Platform Support: </p>TOML<pre><code>platforms = [\"linux/amd64\", \"linux/arm64\"]\n</code></pre><p></p> <p>Validation: </p>Bash<pre><code># Check if mounted correctly\ndocker exec cluster-buildkit cat /etc/buildkit/buildkitd.toml\n\n# View cache usage\ndocker exec cluster-buildkit buildctl debug workers\n</code></pre><p></p>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#composeoverrideexampleyml","title":"<code>compose.override.example.yml</code>","text":"<p>Template for local docker-compose overrides.</p> <p>Setup: </p>Bash<pre><code># Copy to root (file is gitignored)\ncp .config/docker/compose.override.example.yml docker-compose.override.yml\n\n# Edit for your local environment\n# Changes ports, volumes, environment variables, etc.\n</code></pre><p></p> <p>Usage: - Automatically loaded by <code>docker-compose</code> commands - Overrides/extends main <code>docker-compose.yml</code> - Never committed (in <code>.gitignore</code>)</p>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#quick-start-for-new-developers","title":"Quick Start for New Developers","text":"","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#1-configure-docker-daemon-optional","title":"1. Configure Docker Daemon (Optional)","text":"Bash<pre><code># Linux\nsudo cp .config/docker/daemon.json /etc/docker/daemon.json\nsudo systemctl restart docker\n\n# Windows/macOS\n# Manually copy settings to Docker Desktop preferences\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#2-set-up-buildkit-optional","title":"2. Set Up BuildKit (Optional)","text":"Bash<pre><code># BuildKit is pre-configured in the cluster-buildkit service\n# No manual setup required - just use docker-compose\n\n# To verify BuildKit service\ndocker-compose ps cluster-buildkit\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#3-create-local-overrides","title":"3. Create Local Overrides","text":"Bash<pre><code># Copy template\ncp .config/docker/compose.override.example.yml docker-compose.override.yml\n\n# Customize for your environment\n# Example: Change ports, add debug volumes, etc.\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#4-verify-configuration","title":"4. Verify Configuration","text":"Bash<pre><code># Check Docker daemon config\ndocker info | grep -i buildkit\n\n# Validate compose files\ndocker-compose config --quiet\n\n# Test build with BuildKit\ndocker-compose build cluster-docker-api\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#best-practices","title":"Best Practices","text":"","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#for-local-development","title":"For Local Development","text":"<ol> <li>Use overrides file - Keep local changes in <code>docker-compose.override.yml</code></li> <li>Port conflicts - Override ports in your local file</li> <li>Hot reload - Mount local code directories</li> <li>Debug mode - Enable verbose logging</li> <li>Resource limits - Adjust based on your machine</li> </ol>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#for-production","title":"For Production","text":"<ol> <li>Apply daemon.json - Consistent logging and limits</li> <li>Enable BuildKit - Faster builds and better caching</li> <li>No overrides - Use only main <code>docker-compose.yml</code></li> <li>Secrets - Always use Docker secrets, never env vars</li> <li>Health checks - Verify all services are healthy</li> </ol>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#troubleshooting","title":"Troubleshooting","text":"","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#buildkit-not-enabled","title":"BuildKit not enabled","text":"Bash<pre><code># Check if BuildKit is active\ndocker buildx version\n\n# Enable BuildKit\nexport DOCKER_BUILDKIT=1\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#port-conflicts","title":"Port conflicts","text":"Bash<pre><code># Check what's using ports\nnetstat -ano | findstr \":5432\"  # Windows\nlsof -i :5432                    # Linux/macOS\n\n# Override in docker-compose.override.yml\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#disk-space-issues","title":"Disk space issues","text":"Bash<pre><code># Clean up Docker\ndocker system prune -a --volumes\n\n# Check disk usage\ndocker system df\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#permission-errors-linux","title":"Permission errors (Linux)","text":"Bash<pre><code># Add user to docker group\nsudo usermod -aG docker $USER\nnewgrp docker\n\n# Fix daemon.json permissions\nsudo chmod 644 /etc/docker/daemon.json\n</code></pre>","tags":["documentation","configuration","setup","docker"]},{"location":"config/docker/#references","title":"References","text":"<ul> <li>Docker Daemon Configuration</li> <li>BuildKit Configuration</li> <li>Docker Compose Override</li> </ul>","tags":["documentation","configuration","setup","docker"]},{"location":"config/nginx/","title":"Nginx","text":"<ul> <li>documentation description: Documentation for nginx in config \u2014\\n# Nginx Configuration</li> </ul> <p>This directory contains nginx configurations organized by purpose.</p>","tags":["documentation","configuration","setup"]},{"location":"config/nginx/#files","title":"Files","text":"","tags":["documentation","configuration","setup"]},{"location":"config/nginx/#loadbalancerconf","title":"<code>loadbalancer.conf</code>","text":"<p>Purpose: Load balancer configuration for routing traffic across web server replicas Used by: <code>loadbalancer</code> service in docker-compose.yml Mounts to: <code>/etc/nginx/nginx.conf</code> in loadbalancer container Key features: - Round-robin load balancing across cluster-web1, cluster-web2, cluster-web3 - Proxy headers for client IP forwarding - Health check endpoint at <code>/health</code></p>","tags":["documentation","configuration","setup"]},{"location":"config/nginx/#mainconf","title":"<code>main.conf</code>","text":"<p>Purpose: Main nginx configuration with performance optimizations Used by: Reference configuration for nginx-based services Key features: - Auto worker processes - Gzip compression - Security headers (XSS, CSRF protection) - Rate limiting zones - Performance tuning (sendfile, tcp_nopush)</p>","tags":["documentation","configuration","setup"]},{"location":"config/nginx/#defaultconf","title":"<code>default.conf</code>","text":"<p>Purpose: Default server block for static content serving Used by: nginx.Dockerfile for static web servers Mounts to: <code>/etc/nginx/conf.d/default.conf</code> in nginx containers Key features: - Static content caching (1 year for assets) - Rate-limited API endpoints (/api/, /python/) - Health check endpoint at <code>/health</code> - Security: Blocks dotfiles - SPA fallback to index.html</p>","tags":["documentation","configuration","setup"]},{"location":"config/nginx/#usage","title":"Usage","text":"<p>Configs are mounted as read-only volumes in docker-compose.yml: </p>YAML<pre><code>volumes:\n  - ./.config/nginx/loadbalancer.conf:/etc/nginx/nginx.conf:ro\n</code></pre><p></p>","tags":["documentation","configuration","setup"]},{"location":"config/nginx/#validation","title":"Validation","text":"<p>Test nginx config syntax before deployment: </p>Bash<pre><code>docker run --rm -v \"$(pwd)/.config/nginx:/etc/nginx:ro\" nginx:alpine nginx -t\n</code></pre><p></p>","tags":["documentation","configuration","setup"]},{"location":"config/overview/","title":"Overview","text":"<ul> <li>overview</li> <li>documentation description: Documentation for overview in config \u2014\\n# .config - Single Source of Truth</li> </ul> <p>All configuration files for the Docker cluster stack, strictly organized according to Docker and GitHub standards.</p>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#directory-structure","title":"\ud83d\udcc1 Directory Structure","text":"Text Only<pre><code>.config/\n\u251c\u2500\u2500 README.md                    # This file\n\u251c\u2500\u2500 cluster/                     # Cluster configuration\n\u2502   \u2514\u2500\u2500 cluster.config.yml       # Master service definitions\n\u251c\u2500\u2500 testing/                     # Test configurations\n\u2502   \u2514\u2500\u2500 test-suite.yml           # E2E test configurations\n\u251c\u2500\u2500 jekyll/                      # Jekyll documentation site\n\u2502   \u251c\u2500\u2500 jekyll.config.yml        # Jekyll site configuration\n\u2502   \u251c\u2500\u2500 Gemfile                  # Ruby dependencies for Jekyll\n\u2502   \u2514\u2500\u2500 Gemfile.lock             # Locked Ruby versions\n\u251c\u2500\u2500 docker/                      # Docker-specific configurations\n\u2502   \u251c\u2500\u2500 README.md                # Docker config guide\n\u2502   \u251c\u2500\u2500 daemon.json              # Daemon config reference\n\u2502   \u251c\u2500\u2500 buildkit.toml            # BuildKit optimization\n\u2502   \u2514\u2500\u2500 compose.override.example.yml  # Local overrides template\n\u251c\u2500\u2500 github/                      # GitHub automation\n\u2502   \u251c\u2500\u2500 README.md                # GitHub workflows guide\n\u2502   \u251c\u2500\u2500 dependabot.yml           # Auto dependency updates\n\u2502   \u251c\u2500\u2500 labeler.yml              # PR auto-labeling\n\u2502   \u2514\u2500\u2500 workflows/\n\u2502       \u2514\u2500\u2500 labeler.yml          # Labeler action\n\u2514\u2500\u2500 monitoring/                  # Complete monitoring stack\n    \u251c\u2500\u2500 prometheus.yml           # Scrape configs\n    \u251c\u2500\u2500 alertmanager.yml         # Alert routing\n    \u251c\u2500\u2500 alerts/\n    \u2502   \u2514\u2500\u2500 rules.yml            # 25 alert rules\n    \u251c\u2500\u2500 dashboards/              # 4 Grafana dashboards\n    \u2502   \u251c\u2500\u2500 containers.json\n    \u2502   \u251c\u2500\u2500 host.json\n    \u2502   \u251c\u2500\u2500 postgresql.json\n    \u2502   \u2514\u2500\u2500 redis.json\n    \u2514\u2500\u2500 grafana/\n        \u251c\u2500\u2500 README.md\n        \u2514\u2500\u2500 provisioning/        # Auto-provisioning\n            \u251c\u2500\u2500 dashboards/\n            \u2502   \u2514\u2500\u2500 dashboards.yml\n            \u2514\u2500\u2500 datasources/\n                \u2514\u2500\u2500 prometheus.yml\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#purpose","title":"\ud83c\udfaf Purpose","text":"<p>This directory serves as the single source of truth for all configuration, following these principles:</p> <ol> <li>Centralization - All YAML configs in one location</li> <li>Standardization - Docker &amp; GitHub naming conventions</li> <li>Documentation - Comprehensive READMEs in each subdirectory</li> <li>Automation - Dependabot, PR labeling, provisioning</li> <li>Portability - Complete setup for new developers</li> <li>Validation - All configs validated before commit</li> </ol>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#core-configuration-files","title":"\ud83d\udcc4 Core Configuration Files","text":"","tags":["documentation","configuration","setup"]},{"location":"config/overview/#clusterclusterconfigyml","title":"<code>cluster/cluster.config.yml</code>","text":"<p>Master service definitions: 25+ services, ports, health checks, resources, volumes, network.</p>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#testingtest-suiteyml","title":"<code>testing/test-suite.yml</code>","text":"<p>E2E test definitions: infrastructure validation, service health checks, connectivity tests.</p>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#jekyll","title":"<code>jekyll/</code>","text":"<p>Jekyll static site configuration and Ruby dependencies: - jekyll.config.yml: Theme (Cayman), plugins, collections, navigation, build settings - Gemfile/Gemfile.lock: Ruby dependencies (github-pages, jekyll-seo-tag, jekyll-sitemap, jekyll-feed, webrick)</p>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#docker-directory","title":"<code>docker/</code> Directory","text":"<ul> <li>daemon.json: Docker Engine reference config (BuildKit, logging, storage)</li> <li>buildkit.toml: Build optimization (cache, mirrors, platforms)</li> <li>compose.override.example.yml: Local development overrides template</li> <li>README.md: Complete Docker setup guide</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#github-directory","title":"<code>github/</code> Directory","text":"<ul> <li>dependabot.yml: Weekly dependency updates (Docker, Python, npm, Actions)</li> <li>labeler.yml: Auto-label PRs by file changes (10+ labels)</li> <li>workflows/labeler.yml: GitHub Action for PR labeling</li> <li>README.md: Complete GitHub automation guide</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#monitoring-directory","title":"<code>monitoring/</code> Directory","text":"<ul> <li>prometheus.yml: 8 scrape targets, 15s intervals</li> <li>alertmanager.yml: Email routing, severity grouping, inhibition rules</li> <li>alerts/rules.yml: 25 alert rules across 4 categories</li> <li>dashboards/: 4 Grafana JSON dashboards (containers, host, PostgreSQL, Redis)</li> <li>grafana/provisioning/: Auto-provisioning for datasources and dashboards</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#configuration-hierarchy","title":"\ud83d\udd04 Configuration Hierarchy","text":"Text Only<pre><code>1. .config/*.yml \u2192 Source of truth (documented)\n2. docker-compose.yml \u2192 Implementation (references .config)\n3. docker-compose.override.yml \u2192 Local overrides (gitignored)\n4. .env \u2192 Runtime secrets (gitignored)\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#validation","title":"\u2705 Validation","text":"Bash<pre><code># Validate all configs\nmake validate-config\n\n# Validate docker-compose\ndocker-compose config --quiet\n\n# Validate YAML syntax\nyamllint .config/**/*.yml\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#new-developer-quick-start","title":"\ufffd New Developer Quick Start","text":"","tags":["documentation","configuration","setup"]},{"location":"config/overview/#1-clone-and-setup","title":"1. Clone and Setup","text":"Bash<pre><code>git clone https://github.com/DeanLuus22021994/docker_dotfiles.git\ncd docker_dotfiles\n\n# Install GitHub CLI (automated workflows)\ngh auth login\n\n# Copy local overrides template\ncp .config/docker/compose.override.example.yml docker-compose.override.yml\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#2-configure-docker-optional","title":"2. Configure Docker (Optional)","text":"Bash<pre><code># Linux: Copy daemon config\nsudo cp .config/docker/daemon.json /etc/docker/daemon.json\nsudo systemctl restart docker\n\n# Windows/macOS: Use Docker Desktop settings GUI\n\n# Enable BuildKit\nexport DOCKER_BUILDKIT=1\nexport BUILDKIT_CONFIG=$PWD/.config/docker/buildkit.toml\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#3-start-stack","title":"3. Start Stack","text":"Bash<pre><code># Generate secrets\nmake secrets\n\n# Start services\ndocker-compose up -d\n\n# Verify health\ndocker-compose ps\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#4-access-services","title":"4. Access Services","text":"<ul> <li>Documentation: http://localhost:4000 (Jekyll)</li> <li>Dashboard: http://localhost:3000</li> <li>Grafana: http://localhost:3002</li> <li>Prometheus: http://localhost:9090</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#making-changes","title":"\ufffd\ud83d\udcdd Making Changes","text":"<ol> <li>Update <code>.config</code> files (source of truth)</li> <li>Update implementation (docker-compose.yml)</li> <li>Validate: <code>make validate</code></li> <li>Test: <code>make test-all</code></li> <li>Document in commit message</li> </ol>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#security","title":"\ud83d\udd12 Security","text":"<p>Never commit: Secrets, passwords, API tokens, <code>.env</code> files Always commit: Templates, defaults, documentation</p>","tags":["documentation","configuration","setup"]},{"location":"config/overview/#standards-compliance","title":"\ud83d\udcca Standards Compliance","text":"<p>Docker: <code>cluster-&lt;service&gt;</code>, <code>cluster_&lt;volume&gt;</code>, <code>cluster-network</code> GitHub: YAML format, Dependabot, branch protection YAML: 2-space indent, comments, anchors, sorted keys</p> <p>Version: 3.0.0 | Updated: 2025-10-25 | License: MIT | Status: Production Ready</p>","tags":["documentation","configuration","setup"]},{"location":"config/services/","title":"Services","text":"<ul> <li>docker-compose</li> <li>documentation description: Documentation for services in config \u2014\\n# Services Configuration</li> </ul> <p>This directory contains configuration files for various service integrations.</p>","tags":["documentation","configuration","setup"]},{"location":"config/services/#files","title":"Files","text":"","tags":["documentation","configuration","setup"]},{"location":"config/services/#pgadmin-serversjson","title":"<code>pgadmin-servers.json</code>","text":"<p>Purpose: Pre-configured server connections for pgAdmin Used by: <code>cluster-pgadmin</code> service in docker-compose.yml Mounts to: <code>/pgadmin4/servers.json</code> in pgadmin container Servers defined: - PostgreSQL Cluster (cluster-postgres:5432) - MariaDB Cluster (cluster-mariadb:3306)</p> <p>Note: Password authentication uses PassFile mounted separately.</p>","tags":["documentation","configuration","setup"]},{"location":"config/services/#localstack-initsh","title":"<code>localstack-init.sh</code>","text":"<p>Purpose: LocalStack initialization script for AWS service mocking Used by: <code>cluster-localstack</code> service (if enabled) Creates: - S3 buckets: local-dev-bucket, local-test-bucket - DynamoDB table: local-dev-table - SQS queue: local-dev-queue - SNS topic: local-dev-topic</p> <p>Requirements: - LocalStack must be running and healthy - awslocal CLI available in container</p>","tags":["documentation","configuration","setup"]},{"location":"config/services/#usage","title":"Usage","text":"<p>Configs are mounted in docker-compose.yml: </p>YAML<pre><code>volumes:\n  - ./.config/services/pgadmin-servers.json:/pgadmin4/servers.json:ro\n  - ./.config/services/localstack-init.sh:/docker-entrypoint-initaws.d/init.sh:ro\n</code></pre><p></p>","tags":["documentation","configuration","setup"]},{"location":"config/services/#adding-new-services","title":"Adding New Services","text":"<ol> <li>Create config file in this directory</li> <li>Add volume mount in docker-compose.yml</li> <li>Document in this README</li> <li>Add validation in scripts/validate_configs.py</li> </ol>","tags":["documentation","configuration","setup"]},{"location":"config/services/#validation","title":"Validation","text":"<p>Test JSON syntax: </p>Bash<pre><code>python -m json.tool .config/services/pgadmin-servers.json\n</code></pre><p></p> <p>Test shell script syntax: </p>Bash<pre><code>bash -n .config/services/localstack-init.sh\n</code></pre><p></p>","tags":["documentation","configuration","setup"]},{"location":"config/github/branch-protection/","title":"Branch protection","text":"<ul> <li>documentation description: Branch protection rules configuration for main branch \u2014\\n# Branch Protection Configuration</li> </ul> <p>Protection rules for <code>main</code> branch to ensure code quality and review process.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/branch-protection/#configuration","title":"Configuration","text":"<p>File: <code>.config/github/branch-protection.yml</code></p> <p>Enforces:</p> <ul> <li>Required status checks (4 validation jobs)</li> <li>Required PR approvals (1 minimum)</li> <li>Conversation resolution before merge</li> <li>No force pushes or deletions</li> <li>Administrator enforcement</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/branch-protection/#apply-protection-rules","title":"Apply Protection Rules","text":"<p>Via Script:</p> PowerShell<pre><code>.\\scripts\\apply-settings.ps1 -ApplyBranchProtection\n</code></pre> <p>Via GitHub CLI:</p> Bash<pre><code>gh api repos/DeanLuus22021994/docker_dotfiles/branches/main/protection \\\n  --method PUT \\\n  --field required_status_checks='{\"strict\":true,\"contexts\":[\"validate\"]}' \\\n  --field enforce_admins=true \\\n  --field required_pull_request_reviews='{\"required_approving_review_count\":1}'\n</code></pre> <p>Via GitHub UI:</p> <ol> <li>Settings \u2192 Branches \u2192 Add rule</li> <li>Branch name pattern: <code>main</code></li> <li>Enable:    - \u2705 Require pull request before merging    - \u2705 Require status checks to pass    - \u2705 Require conversation resolution    - \u2705 Include administrators</li> </ol>","tags":["documentation","configuration","setup"]},{"location":"config/github/branch-protection/#validation-jobs","title":"Validation Jobs","text":"<p>4 required status checks before merge:</p> <ol> <li><code>validate-environment</code> - Environment configuration validation</li> <li><code>validate-configs</code> - Configuration files validation</li> <li><code>validate-docker-compose</code> - Docker Compose syntax validation</li> <li><code>validate-pre-commit</code> - Pre-commit hooks validation</li> </ol> <p>Cost: FREE</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/conventional-commits/","title":"Conventional commits","text":"<ul> <li>documentation description: Conventional commits standard for semantic commit messages \u2014\\n# Conventional Commits</li> </ul> <p>Semantic commit message format for automatic changelog generation.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/conventional-commits/#commit-types","title":"Commit Types","text":"Bash<pre><code># Features\ngit commit -m \"feat(api): add health check endpoint\"\n\n# Bug fixes\ngit commit -m \"fix(docker): correct volume mount path\"\n\n# Documentation\ngit commit -m \"docs: update deployment guide\"\n\n# Refactoring\ngit commit -m \"refactor(monitoring): restructure alert rules\"\n\n# Performance\ngit commit -m \"perf(postgres): optimize query indexes\"\n\n# Tests\ngit commit -m \"test(api): add integration tests\"\n\n# CI/CD\ngit commit -m \"ci: add automated deployment\"\n\n# Dependencies\ngit commit -m \"chore(deps): update prometheus to v2.45\"\n\n# Breaking changes\ngit commit -m \"feat(api)!: change response format\n\nBREAKING CHANGE: API now returns JSON instead of XML\"\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/conventional-commits/#format-structure","title":"Format Structure","text":"Text Only<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n[optional body]\n\n[optional footer]\n</code></pre> <p>Type: feat, fix, docs, refactor, perf, test, ci, chore Scope: Component affected (api, docker, monitoring, etc.) Subject: Short description (imperative, lowercase, no period)</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/conventional-commits/#benefits","title":"Benefits","text":"<ul> <li>Auto-generate changelogs</li> <li>Semantic versioning automation</li> <li>Clear git history</li> <li>Easy to filter by type</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/conventional-commits/#references","title":"References","text":"<ul> <li>Conventional Commits Specification</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/dependabot/","title":"Dependabot","text":"<ul> <li>automation description: Dependabot configuration for automated dependency updates \u2014\\n# Dependabot Configuration</li> </ul> <p>Automated dependency updates for Docker images, Python packages, Node.js modules, and GitHub Actions.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/dependabot/#update-schedule","title":"Update Schedule","text":"YAML<pre><code>Updates:\n- Docker images: Weekly Monday 9:00 AM\n- Python (pip): Weekly Monday 9:00 AM  \n- Node.js (npm): Weekly Monday 9:00 AM\n- GitHub Actions: Monthly\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/dependabot/#features","title":"Features","text":"<ul> <li>Max 5 open PRs per ecosystem (3 for Actions)</li> <li>Auto-labeling by dependency type</li> <li>Conventional commit messages (<code>chore(deps)</code>)</li> <li>Auto-assigns to @DeanLuus22021994</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/dependabot/#workflow","title":"Workflow","text":"<ol> <li>Dependabot scans dependencies on schedule</li> <li>Creates PRs for available updates</li> <li>Applies semantic versioning strategy</li> <li>Requires manual review and merge</li> </ol>","tags":["documentation","configuration","setup"]},{"location":"config/github/dependabot/#setup","title":"Setup","text":"Bash<pre><code># Verify configuration\ncat .config/github/dependabot.yml\n\n# Enable in GitHub settings\n# Settings \u2192 Security &amp; analysis \u2192 Enable Dependabot\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/dependabot/#pr-management","title":"PR Management","text":"PowerShell<pre><code># Review Dependabot PR\ngh pr view 123\n\n# Check tests\ngh pr checks 123\n\n# Approve and merge\ngh pr review 123 --approve\ngh pr merge 123 --squash\n</code></pre> <p>Cost: FREE</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/onboarding/","title":"Onboarding","text":"<ul> <li>setup</li> <li>quickstart description: New developer onboarding guide for GitHub configuration \u2014\\n# Developer Onboarding Guide</li> </ul> <p>Quick setup guide for new developers (~10 minutes).</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/onboarding/#setup-steps","title":"Setup Steps","text":"<p>1. Clone Repository</p> PowerShell<pre><code>git clone https://github.com/DeanLuus22021994/docker_dotfiles.git\ncd docker_dotfiles\n</code></pre> <p>2. Authenticate GitHub CLI</p> PowerShell<pre><code>gh auth login\ngh repo view DeanLuus22021994/docker_dotfiles\n</code></pre> <p>3. Apply Repository Settings</p> PowerShell<pre><code>.\\scripts\\apply-settings.ps1 -ApplyAll\n</code></pre> <p>4. Set Up Self-Hosted Runner</p> PowerShell<pre><code># See docs/config/github/runners.md for full setup\ndocker run -d --restart always --name github-runner ...\n</code></pre> <p>5. Install Dependencies</p> PowerShell<pre><code># Python\nuv sync\n\n# Node.js\nnpm install --legacy-peer-deps\n</code></pre> <p>6. Validate Environment</p> PowerShell<pre><code>python scripts\\validate_env.py\ngh workflow run validate.yml\n</code></pre> <p>7. Create Feature Branch</p> PowerShell<pre><code>git checkout -b feature/your-feature-name\n</code></pre> <p>8. Make Changes and Create PR</p> PowerShell<pre><code>git add .\ngit commit -m \"feat: your feature description\"\ngit push origin feature/your-feature-name\ngh pr create --title \"feat: your feature\" --body \"Description\"\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/onboarding/#expected-outcome","title":"Expected Outcome","text":"<ul> <li>\u2705 Auto-labeling based on changed files</li> <li>\u2705 4 validation checks on self-hosted runner</li> <li>\u2705 CODEOWNERS requests review</li> <li>\u2705 All checks must pass before merge</li> </ul> <p>Total Time: ~10 minutes</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/overview/","title":"Overview","text":"<ul> <li>overview</li> <li>automation description: GitHub configuration overview for repository automation and CI/CD \u2014\\n# GitHub Configuration Overview</li> </ul> <p>Configuration files for GitHub-specific repository automation, CI/CD, security, and development workflows. All features are FREE for public repositories.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/overview/#configuration-files","title":"Configuration Files","text":"<ul> <li><code>repository.yml</code> - Repository metadata and settings as code</li> <li><code>branch-protection.yml</code> - Branch protection rules for main branch</li> <li><code>secrets.yml</code> - Documentation for 11 required secrets</li> <li><code>actions.yml</code> - GitHub Actions permissions and runner setup</li> <li><code>code-security.yml</code> - Security scanning and dependency review</li> <li><code>dependabot.yml</code> - Automated dependency updates</li> <li><code>labeler.yml</code> - Automatic PR labeling rules</li> <li><code>workflows/labeler.yml</code> - PR labeler workflow</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/overview/#cost-breakdown","title":"Cost Breakdown","text":"<p>Total: $0/month - All features free for public repos with self-hosted runners</p> Feature Cost Actions Minutes FREE (self-hosted) Artifact Storage FREE (90-day retention) Secrets Storage FREE (unlimited) Advanced Security FREE (public repos) CodeQL/Secret Scanning FREE Dependabot FREE","tags":["documentation","configuration","setup"]},{"location":"config/github/overview/#quick-start","title":"Quick Start","text":"PowerShell<pre><code># Apply all settings\n.\\scripts\\apply-settings.ps1 -ApplyAll\n\n# Set GitHub secrets\n.\\scripts\\setup_secrets.ps1 -SetGitHubSecrets\n</code></pre> <p>Setup Time: ~5 minutes</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/runners/","title":"Runners","text":"<ul> <li>documentation description: Self-hosted GitHub Actions runners configuration \u2014\\n# Self-Hosted Runners Configuration</li> </ul> <p>Self-hosted runners for unlimited free GitHub Actions minutes.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/runners/#docker-based-runner-setup","title":"Docker-Based Runner Setup","text":"<p>Recommended approach:</p> PowerShell<pre><code>docker run -d --restart always `\n  --name github-runner `\n  -e RUNNER_NAME=\"docker-stack-runner\" `\n  -e REPO_URL=\"https://github.com/DeanLuus22021994/docker_dotfiles\" `\n  -e ACCESS_TOKEN=\"${env:GH_PAT}\" `\n  -v /var/run/docker.sock:/var/run/docker.sock `\n  myoung34/github-runner:latest\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/runners/#requirements","title":"Requirements","text":"<ul> <li>2 CPU cores minimum</li> <li>4GB RAM minimum</li> <li>20GB disk space</li> <li>Docker installed</li> <li>GitHub Personal Access Token (GH_PAT)</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/runners/#verify-registration","title":"Verify Registration","text":"PowerShell<pre><code># Check runner status\ngh api repos/DeanLuus22021994/docker_dotfiles/actions/runners\n\n# View in GitHub UI\n# Settings \u2192 Actions \u2192 Runners\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/runners/#benefits","title":"Benefits","text":"<ul> <li>Unlimited free minutes (vs $0.008/min GitHub-hosted)</li> <li>Access to local Docker daemon</li> <li>Custom environment configuration</li> <li>No queue times</li> <li>Control over hardware resources</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/runners/#troubleshooting","title":"Troubleshooting","text":"<p>Runner not starting: - Check GH_PAT token has <code>repo</code> scope - Verify REPO_URL format correct - Check Docker socket permissions</p> <p>Workflows not using self-hosted: - Ensure workflows specify <code>runs-on: self-hosted</code> - Verify runner is online in GitHub settings</p> <p>Cost: $0/month (unlimited free minutes)</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/security/","title":"Security","text":"<ul> <li>security</li> <li>secrets description: GitHub security features configuration and setup \u2014\\n# GitHub Security Configuration</li> </ul> <p>Code scanning, secret detection, and dependency review configuration.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/security/#security-features","title":"Security Features","text":"<p>File: <code>.config/github/code-security.yml</code></p> <p>Enabled features (all FREE for public repos):</p> <ul> <li>CodeQL analysis (Python, JavaScript, TypeScript)</li> <li>Secret scanning with push protection</li> <li>Dependabot alerts and security updates</li> <li>Dependency review for PRs</li> <li>Container scanning (Trivy)</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/security/#github-secrets","title":"GitHub Secrets","text":"<p>File: <code>.config/github/secrets.yml</code></p> <p>Required Secrets (11 total):</p> <ul> <li><code>GH_PAT</code> - GitHub Personal Access Token</li> <li><code>DOCKER_POSTGRES_PASSWORD</code> - PostgreSQL password</li> <li><code>DOCKER_MARIADB_ROOT_PASSWORD</code> - MariaDB root password</li> <li><code>DOCKER_MARIADB_PASSWORD</code> - MariaDB user password</li> <li><code>DOCKER_REDIS_PASSWORD</code> - Redis password</li> <li><code>DOCKER_MINIO_ROOT_USER</code> - MinIO root username</li> <li><code>DOCKER_MINIO_ROOT_PASSWORD</code> - MinIO root password</li> <li><code>DOCKER_GRAFANA_ADMIN_PASSWORD</code> - Grafana admin password</li> <li><code>DOCKER_JUPYTER_TOKEN</code> - Jupyter notebook token</li> <li><code>DOCKER_PGADMIN_PASSWORD</code> - pgAdmin password</li> <li><code>DOCKER_NGINX_HTPASSWD</code> - Nginx auth credentials</li> </ul> <p>Setup:</p> PowerShell<pre><code># Edit .env with credentials\nnotepad .env\n\n# Set all secrets\n.\\scripts\\setup_secrets.ps1 -SetGitHubSecrets\n\n# Verify\ngh secret list\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/security/#enable-security-scanning","title":"Enable Security Scanning","text":"PowerShell<pre><code># Via GitHub UI\nStart-Process \"https://github.com/DeanLuus22021994/docker_dotfiles/settings/security_analysis\"\n</code></pre> <p>Enable all features in Security &amp; analysis section.</p> <p>Cost: FREE (GitHub Advanced Security included for public repos)</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/workflows/","title":"Workflows","text":"<ul> <li>ci-cd description: GitHub Actions workflows and automation configuration \u2014\\n# GitHub Workflows</li> </ul> <p>GitHub Actions workflows for CI/CD automation with self-hosted runners.</p>","tags":["documentation","configuration","setup"]},{"location":"config/github/workflows/#actions-configuration","title":"Actions Configuration","text":"<p>File: <code>.config/github/actions.yml</code></p> <ul> <li>Unlimited free minutes (self-hosted runners)</li> <li>Workflow permissions (read-only by default)</li> <li>Fork PR workflows with approval required</li> <li>90-day artifact retention</li> </ul>","tags":["documentation","configuration","setup"]},{"location":"config/github/workflows/#pr-labeler-workflow","title":"PR Labeler Workflow","text":"<p>File: <code>.config/github/workflows/labeler.yml</code></p> <p>Auto-applies labels to PRs based on changed files:</p> <ul> <li><code>documentation</code> - Markdown, docs/ folder</li> <li><code>config</code> - Configuration files (.yml, .env)</li> <li><code>docker</code> - Dockerfiles, compose files</li> <li><code>monitoring</code> - Prometheus, Grafana configs</li> <li><code>ci-cd</code> - Workflow files, Makefile</li> <li><code>python</code>, <code>nodejs</code> - Language-specific files</li> <li><code>scripts</code> - Shell/PowerShell scripts</li> <li><code>tests</code> - Test files</li> <li><code>security</code> - Secrets, passwords</li> </ul> <p>Setup:</p> Bash<pre><code># Copy to correct location\nmkdir -p .github/workflows\ncp .config/github/workflows/labeler.yml .github/workflows/\n\n# Commit\ngit add .github/workflows/labeler.yml\ngit commit -m \"chore(ci): enable automatic PR labeling\"\ngit push\n</code></pre>","tags":["documentation","configuration","setup"]},{"location":"config/github/workflows/#test-workflows","title":"Test Workflows","text":"PowerShell<pre><code># Trigger manually\ngh workflow run validate.yml\n\n# Check status\ngh run list --workflow=validate.yml --limit 5\n</code></pre> <p>Cost: $0/month (self-hosted)</p>","tags":["documentation","configuration","setup"]},{"location":"index/architecture/","title":"Architecture","text":"<ul> <li>architecture description: Architecture and design documentation index \u2014\\n# Architecture</li> </ul> <p>System design and component documentation:</p> <ul> <li>Overview - High-level architecture</li> <li>Web Dashboard - Frontend architecture</li> <li>Features - Complete feature set</li> <li>Project Structure - Directory organization</li> <li>API Documentation - API server design</li> </ul>","tags":["documentation"]},{"location":"index/architecture/#layers","title":"Layers","text":"<p>The platform is organized into five architectural layers:</p> <ul> <li>Data Layer - PostgreSQL, MariaDB, Redis, MinIO</li> <li>Services Layer - API server, web dashboard</li> <li>Monitoring Layer - Grafana, Prometheus</li> <li>Compute Layer - Jupyter notebooks</li> <li>Network Layer - Nginx, Traefik reverse proxy</li> </ul> <p>See web architecture for details.</p>","tags":["documentation"]},{"location":"index/getting-started/","title":"Getting started","text":"<ul> <li>installation</li> <li>setup</li> <li>quickstart description: Getting started guides for new users \u2014\\n# Getting Started</li> </ul> <p>Quick links to begin using the platform:</p> <ul> <li>Project Overview - Features and introduction</li> <li>Prerequisites - System requirements</li> <li>Installation - Setup instructions</li> <li>Environment Setup - Configure credentials</li> <li>Quickstart - 5-minute guide</li> <li>Production Deployment - Production setup</li> </ul>","tags":["documentation"]},{"location":"index/getting-started/#quick-commands","title":"Quick Commands","text":"Bash<pre><code># Clone and start\ngit clone &lt;repository-url&gt;\ncd docker &amp;&amp; make build &amp;&amp; make up\n\n# Verify\ncurl http://localhost:8080/\nmake ps\n</code></pre> <p>See usage guide for all commands.</p>","tags":["documentation"]},{"location":"index/overview/","title":"Overview","text":"<ul> <li>documentation</li> <li>index</li> <li>overview description: Central documentation index overview and navigation guide \u2014\\n# Documentation Overview</li> </ul> <p>Modern Data Platform - Comprehensive Documentation Version: 4.0 Last Updated: 2025-10-26</p>","tags":["documentation"]},{"location":"index/overview/#purpose","title":"Purpose","text":"<p>This documentation provides complete guidance for developers, operators, and contributors working with the Modern Data Platform Docker cluster.</p>","tags":["documentation"]},{"location":"index/overview/#organization","title":"Organization","text":"<p>Documentation is organized into focused categories:</p> <ul> <li>Getting Started - Installation, setup, quickstart</li> <li>Architecture - System design and components</li> <li>Development - Developer guides and scripts</li> <li>Services - Individual service documentation</li> <li>Security - Security policies and guides</li> <li>Operations - Monitoring and deployment</li> <li>AI Tools - AI-powered development</li> <li>Reference - Configuration files and commands</li> </ul>","tags":["documentation"]},{"location":"index/overview/#quick-links","title":"Quick Links","text":"<ul> <li>README - Project overview</li> <li>SETUP - Installation guide</li> <li>TODO - Current roadmap</li> </ul>","tags":["documentation"]},{"location":"index/overview/#support","title":"Support","text":"<p>Need help? Check troubleshooting or create an issue.</p>","tags":["documentation"]},{"location":"production/authentication/","title":"Authentication","text":"<ul> <li>production</li> <li>authentication</li> <li>jwt</li> <li>security description: Authentication setup and user management for production \u2014\\n# Authentication Setup</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/authentication/#enable-jwt-authentication","title":"Enable JWT Authentication","text":"<p>Environment variables:</p> Bash<pre><code>AUTH_ENABLED=true\nJWT_SECRET=$(openssl rand -hex 32)  # 64 characters\nJWT_EXPIRES_IN=8h\nJWT_REFRESH_EXPIRES_IN=7d\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/authentication/#create-admin-user","title":"Create Admin User","text":"Bash<pre><code># Register first user (becomes admin)\ncurl -X POST https://your-domain.com/api/auth/register \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"admin\",\n    \"password\": \"your_secure_password\",\n    \"email\": \"admin@your-domain.com\"\n  }'\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/authentication/#login-flow","title":"Login Flow","text":"<p>1. Login:</p> Bash<pre><code>curl -X POST https://your-domain.com/api/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"admin\", \"password\": \"your_password\"}'\n\n# Returns: { \"accessToken\": \"...\", \"refreshToken\": \"...\" }\n</code></pre> <p>2. Use Access Token:</p> Bash<pre><code>curl https://your-domain.com/api/containers \\\n  -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"\n</code></pre> <p>3. Refresh Token (when expired):</p> Bash<pre><code>curl -X POST https://your-domain.com/api/auth/refresh \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"refreshToken\": \"YOUR_REFRESH_TOKEN\"}'\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/authentication/#user-management","title":"User Management","text":"<p>See <code>api/README.md</code> for full user management API.</p>","tags":["documentation","production","deployment"]},{"location":"production/deployment/","title":"Deployment","text":"<ul> <li>production</li> <li>deployment</li> <li>docker-compose</li> <li>startup description: Production deployment steps and service startup \u2014\\n# Deployment Steps</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/deployment/#1-pre-deployment-validation","title":"1. Pre-deployment Validation","text":"Bash<pre><code># Validate environment\npython scripts/python/validation/validate_env.py\n\n# Validate configs\npython scripts/python/validation/validate_configs.py\n\n# Validate Docker Compose\ndocker-compose config\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/deployment/#2-build-images","title":"2. Build Images","text":"Bash<pre><code># Build all services\ndocker-compose build\n\n# Or build specific services\ndocker-compose build api nginx\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/deployment/#3-start-services","title":"3. Start Services","text":"Bash<pre><code># Start all services\ndocker-compose up -d\n\n# Check status\ndocker-compose ps\n\n# View logs\ndocker-compose logs -f\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/deployment/#4-verify-deployment","title":"4. Verify Deployment","text":"<p>Health checks:</p> Bash<pre><code># Traefik dashboard\ncurl -I https://traefik.your-domain.com\n\n# API health\ncurl https://your-domain.com/api/health\n\n# All services\ndocker-compose ps\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/deployment/#5-post-deployment","title":"5. Post-Deployment","text":"<ul> <li>Create admin user (see authentication.md)</li> <li>Configure monitoring alerts</li> <li>Set up backup jobs</li> <li>Document service URLs</li> <li>Test all endpoints</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/deployment/#rollback","title":"Rollback","text":"Bash<pre><code># Stop services\ndocker-compose down\n\n# Restore previous version\ngit checkout previous-tag\ndocker-compose up -d\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/environment/","title":"Environment","text":"<ul> <li>production</li> <li>environment</li> <li>configuration</li> <li>secrets description: Production environment configuration and secrets management \u2014\\n# Environment Configuration</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/environment/#create-production-env","title":"Create Production .env","text":"Bash<pre><code>cp .env.example .env\nnano .env\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/environment/#required-changes","title":"Required Changes","text":"<p>Domain &amp; HTTPS:</p> Bash<pre><code>DOMAIN=your-domain.com\nACME_EMAIL=admin@your-domain.com\n</code></pre> <p>Authentication:</p> Bash<pre><code>AUTH_ENABLED=true\nJWT_SECRET=$(node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\")\nJWT_EXPIRES_IN=8h\nJWT_REFRESH_EXPIRES_IN=7d\nCORS_ORIGIN=https://your-domain.com\nNODE_ENV=production\n</code></pre> <p>Database Passwords:</p> Bash<pre><code>DOCKER_POSTGRES_PASSWORD=$(openssl rand -base64 32)\nDOCKER_MARIADB_ROOT_PASSWORD=$(openssl rand -base64 32)\nDOCKER_MARIADB_PASSWORD=$(openssl rand -base64 32)\nDOCKER_REDIS_PASSWORD=$(openssl rand -base64 32)\nDOCKER_MINIO_ROOT_PASSWORD=$(openssl rand -base64 32)\nDOCKER_GRAFANA_ADMIN_PASSWORD=$(openssl rand -base64 32)\nDOCKER_JUPYTER_TOKEN=$(openssl rand -base64 32)\nDOCKER_PGADMIN_PASSWORD=$(openssl rand -base64 32)\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/environment/#automated-setup","title":"Automated Setup","text":"Bash<pre><code># Generate all passwords automatically\npython scripts/powershell/config/setup-secrets.ps1\n</code></pre> <p>Important: Never commit .env to version control. Add to .gitignore.</p>","tags":["documentation","production","deployment"]},{"location":"production/https-setup/","title":"Https setup","text":"<ul> <li>production</li> <li>https</li> <li>traefik</li> <li>letsencrypt description: HTTPS setup with Traefik and Let\u2019s Encrypt certificates \u2014\\n# HTTPS Configuration</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/https-setup/#traefik-configuration","title":"Traefik Configuration","text":"<p>Edit <code>.config/traefik/traefik.yml</code>:</p> YAML<pre><code>certificatesResolvers:\n  letsencrypt:\n    acme:\n      email: \"admin@your-domain.com\"\n      storage: \"/letsencrypt/acme.json\"\n      caServer: \"https://acme-v02.api.letsencrypt.org/directory\"\n      httpChallenge:\n        entryPoint: web\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/https-setup/#domain-configuration","title":"Domain Configuration","text":"YAML<pre><code>entryPoints:\n  websecure:\n    address: \":443\"\n    http:\n      tls:\n        certResolver: letsencrypt\n        domains:\n          - main: \"your-domain.com\"\n            sans:\n              - \"*.your-domain.com\"\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/https-setup/#docker-compose-traefik-service","title":"Docker Compose Traefik Service","text":"YAML<pre><code>services:\n  traefik:\n    image: traefik:v2.10\n    restart: unless-stopped\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./config/traefik:/etc/traefik:ro\n      - traefik-letsencrypt:/letsencrypt\n    networks:\n      - traefik-public\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/https-setup/#verify-https","title":"Verify HTTPS","text":"Bash<pre><code>curl -I https://your-domain.com\n# Should return HTTP/2 200\n</code></pre> <p>Certificate auto-renewal: Let\u2019s Encrypt certs renew automatically every 60 days.</p>","tags":["documentation","production","deployment"]},{"location":"production/monitoring/","title":"Monitoring","text":"<ul> <li>production</li> <li>monitoring</li> <li>health-checks</li> <li>alerts description: Production monitoring and health check configuration \u2014\\n# Monitoring &amp; Health Checks</li> </ul>","tags":["documentation","production","deployment","monitoring"]},{"location":"production/monitoring/#service-health-endpoints","title":"Service Health Endpoints","text":"<p>API Server:</p> Bash<pre><code>curl https://your-domain.com/api/health\n# Returns: {\"status\": \"healthy\", \"uptime\": 12345}\n</code></pre> <p>Prometheus:</p> Bash<pre><code>curl https://prometheus.your-domain.com/-/healthy\n# Returns: Prometheus is Healthy.\n</code></pre> <p>Grafana:</p> Bash<pre><code>curl https://grafana.your-domain.com/api/health\n# Returns: {\"database\": \"ok\", \"version\": \"10.0.0\"}\n</code></pre>","tags":["documentation","production","deployment","monitoring"]},{"location":"production/monitoring/#monitoring-stack","title":"Monitoring Stack","text":"<p>Prometheus - Metrics collection Grafana - Visualization and dashboards Node Exporter - Host metrics cAdvisor - Container metrics</p>","tags":["documentation","production","deployment","monitoring"]},{"location":"production/monitoring/#key-metrics-to-monitor","title":"Key Metrics to Monitor","text":"<ul> <li>API response time (p95, p99)</li> <li>API error rate (%)</li> <li>Container CPU/memory usage</li> <li>Database connections</li> <li>Disk space usage</li> <li>Certificate expiration (Let\u2019s Encrypt)</li> </ul>","tags":["documentation","production","deployment","monitoring"]},{"location":"production/monitoring/#alerting","title":"Alerting","text":"<p>Configure Grafana alerts for:</p> <ul> <li>API downtime (&gt;1 minute)</li> <li>High error rate (&gt;5%)</li> <li>High CPU usage (&gt;80%)</li> <li>Low disk space (&lt;10%)</li> <li>Certificate expiring (&lt;30 days)</li> </ul> <p>Alert destinations: Email, Slack, PagerDuty</p>","tags":["documentation","production","deployment","monitoring"]},{"location":"production/monitoring/#log-aggregation","title":"Log Aggregation","text":"Bash<pre><code># View all logs\ndocker-compose logs -f\n\n# Filter by service\ndocker-compose logs -f api nginx\n\n# Export logs\ndocker-compose logs &gt; production.log\n</code></pre>","tags":["documentation","production","deployment","monitoring"]},{"location":"production/overview/","title":"Overview","text":"<ul> <li>production</li> <li>deployment</li> <li>overview</li> <li>guide description: Production deployment guide overview for Modern Data Platform \u2014\\n# Production Deployment Overview</li> </ul> <p>Complete guide for deploying Modern Data Platform to production with HTTPS, authentication, and security hardening.</p>","tags":["documentation","production","deployment"]},{"location":"production/overview/#prerequisites","title":"Prerequisites","text":"<p>Domain &amp; DNS: - Domain name registered - A/AAAA DNS records pointing to server IP - Optional wildcard for subdomains</p> <p>Server Requirements: - Ubuntu 22.04+ (or compatible Linux) - 8GB RAM minimum, 16GB recommended - 50GB storage minimum, 100GB+ recommended - Docker 24.0+ with Compose v2 - Ports 80/443 open in firewall</p>","tags":["documentation","production","deployment"]},{"location":"production/overview/#deployment-steps","title":"Deployment Steps","text":"<ol> <li>Clone Repository - Get latest code</li> <li>Configure Environment - Set production .env variables</li> <li>Configure Traefik - HTTPS with Let\u2019s Encrypt</li> <li>Update Docker Compose - Add Traefik service</li> <li>Enable Authentication - Secure all endpoints</li> <li>Deploy Services - Start production stack</li> <li>Verify &amp; Monitor - Health checks and monitoring</li> </ol>","tags":["documentation","production","deployment"]},{"location":"production/overview/#key-security-features","title":"Key Security Features","text":"<ul> <li>HTTPS with automatic Let\u2019s Encrypt certificates</li> <li>JWT-based authentication for API</li> <li>Secure password generation for all services</li> <li>Traefik reverse proxy with rate limiting</li> <li>Network segmentation and firewall rules</li> </ul> <p>See subdocs for detailed steps.</p>","tags":["documentation","production","deployment"]},{"location":"production/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>production</li> <li>troubleshooting</li> <li>debugging</li> <li>support description: Common production issues and troubleshooting steps \u2014\\n# Production Troubleshooting</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/troubleshooting/#certificate-issues","title":"Certificate Issues","text":"<p>Problem: HTTPS not working</p> <p>Solutions:</p> Bash<pre><code># Check certificate status\ndocker exec traefik cat /letsencrypt/acme.json\n\n# Verify DNS records\ndig your-domain.com +short\n\n# Check Traefik logs\ndocker-compose logs traefik | grep -i certificate\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/troubleshooting/#authentication-failures","title":"Authentication Failures","text":"<p>Problem: JWT tokens not working</p> <p>Solutions:</p> <ul> <li>Verify JWT_SECRET is set in .env</li> <li>Check token expiration (JWT_EXPIRES_IN)</li> <li>Confirm AUTH_ENABLED=true</li> <li>Review API logs for auth errors</li> </ul>","tags":["documentation","production","deployment"]},{"location":"production/troubleshooting/#service-not-accessible","title":"Service Not Accessible","text":"<p>Problem: Can\u2019t reach service through Traefik</p> <p>Solutions:</p> Bash<pre><code># Check service labels\ndocker inspect &lt;container&gt; | grep traefik.http\n\n# Verify network connectivity\ndocker network inspect traefik-public\n\n# Test internal access\ndocker exec traefik wget -O- http://api:3000/health\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/troubleshooting/#high-resource-usage","title":"High Resource Usage","text":"<p>Problem: Container using too much CPU/memory</p> <p>Solutions:</p> Bash<pre><code># Check resource usage\ndocker stats\n\n# Set resource limits in docker-compose.yml\nservices:\n  api:\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n</code></pre>","tags":["documentation","production","deployment"]},{"location":"production/troubleshooting/#database-connection-errors","title":"Database Connection Errors","text":"<p>Problem: Services can\u2019t connect to databases</p> <p>Solutions:</p> <ul> <li>Verify database passwords in .env match docker-compose</li> <li>Check database container health: <code>docker-compose ps</code></li> <li>Review database logs: <code>docker-compose logs postgres</code></li> </ul> <p>Need Help? Check GitHub issues or contact support.</p>","tags":["documentation","production","deployment"]},{"location":"readme/architecture/","title":"Architecture","text":"<ul> <li>architecture description: System architecture and component overview of the Docker cluster \u2014\\n# Architecture</li> </ul> Text Only<pre><code>Internet \u2192 Load Balancer (nginx:8080)\n            \u2193\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   Web1   Web2   Web3\n    \u2193       \u2193      \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Data &amp; Processing Layer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 PostgreSQL:5432             \u2502\n\u2502 MariaDB:3306                \u2502\n\u2502 Redis:6379 (Cache)          \u2502\n\u2502 MinIO:9000 (S3 Storage)     \u2502\n\u2502 Jupyter:8888 (GPU/ML)       \u2502\n\u2502 GitHub MCP (AI Context)     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   Monitoring &amp; Ops          \u2502\n\u2502 Grafana:3002 | Prometheus   \u2502\n\u2502 k9s (K8s CLI)               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/architecture/#components","title":"Components","text":"<ul> <li>Load Balancer: Nginx-based load balancer distributing traffic across web servers</li> <li>Web Servers: 3 nginx instances serving static content with round-robin distribution</li> <li>Database: PostgreSQL 16 + MariaDB 11 with persistent storage and health monitoring</li> <li>Networking: Isolated bridge network for secure internal communication</li> <li>Storage: Named volumes for database persistence and nginx caching</li> </ul> <p>See features for detailed capabilities.</p>","tags":["documentation","readme","guide"]},{"location":"readme/configuration/","title":"Configuration","text":"<ul> <li>configuration</li> <li>validation description: Configuration management and validation procedures \u2014\\n# Configuration</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/configuration/#configuration-management-ssot","title":"Configuration Management (SSoT)","text":"<p>All configurations centralized in <code>.config/</code> directory:</p> <p>Cluster Configs (<code>.config/cluster/</code>): - <code>cluster.config.yml</code> - Master service definitions for 25+ services</p> <p>Testing Configs (<code>.config/testing/</code>): - <code>test-suite.yml</code> - End-to-end test suite configurations</p> <p>Jekyll Configs (<code>.config/jekyll/</code>): - <code>jekyll.config.yml</code> - Jekyll static site configuration - <code>Gemfile</code> / <code>Gemfile.lock</code> - Ruby dependencies for documentation site</p> <p>Web Configs (<code>.config/web/</code>): - <code>nginx.conf</code> - React web dashboard nginx settings - <code>vite.config.ts</code> - Vite build configuration - <code>tsconfig.json</code> - TypeScript compiler options - <code>.eslintrc.cjs</code> - ESLint rules - <code>postcss.config.js</code> - PostCSS plugins - <code>tailwind.config.js</code> - Tailwind CSS theme</p> <p>Python Configs (<code>.config/python/</code>): - <code>pytest.ini</code> - Pytest additional settings - <code>pyrightconfig.json</code> - Pyright type checking rules</p> <p>Git Configs (<code>.config/git/</code>): - <code>.pre-commit-config.yaml</code> - Pre-commit hooks</p> <p>DevContainer (<code>.config/devcontainer/</code>): - <code>devcontainer.json</code> - VS Code DevContainer settings</p> <p>Nginx Configs (<code>.config/nginx/</code>): - <code>loadbalancer.conf</code> - Load balancer routing - <code>main.conf</code> - Worker processes, gzip, security headers - <code>default.conf</code> - Static content, API endpoints</p> <p>Database Configs (<code>.config/database/</code>): - <code>postgresql.conf</code> - max_connections: 200, shared_buffers: 256MB - <code>mariadb.conf</code> - utf8mb4, innodb_buffer_pool: 256MB</p> <p>Service Configs (<code>.config/services/</code>): - <code>pgadmin-servers.json</code> - Pre-configured connections - <code>localstack-init.sh</code> - S3 buckets, DynamoDB tables</p> <p>Docker Configs (<code>.config/docker/</code>): - <code>buildkitd.toml</code> - 10GB cache, 3-day retention</p> <p>Monitoring Configs (<code>.config/monitoring/</code>): - <code>prometheus.yml</code> - Metrics scraping configuration - <code>alertmanager.yml</code> - Alert routing and grouping - <code>alerts/rules.yml</code> - Alert rules - <code>dashboards/</code> - Grafana dashboard definitions - <code>grafana/provisioning/</code> - Auto-provisioning for datasources</p> <p>Traefik Configs (<code>.config/traefik/</code>): - <code>traefik.yml</code> - Reverse proxy configuration - <code>dynamic/middlewares.yml</code> - Dynamic middleware definitions</p> <p>GitHub Configs (<code>.config/github/</code>): - <code>dependabot.yml</code> - Automated dependency updates - <code>labeler.yml</code> - PR auto-labeling rules - <code>workflows/</code> - Reusable workflow configurations</p> <p>Note: Root-level config files (<code>.pre-commit-config.yaml</code>, <code>pytest.ini</code>, <code>pyrightconfig.json</code>, <code>.devcontainer/</code>) are symlinks or redirects to <code>.config/</code> for tool compatibility.</p>","tags":["documentation","readme","guide"]},{"location":"readme/configuration/#validation-commands","title":"Validation Commands","text":"Bash<pre><code>make validate-configs  # Validate all configs\nmake validate-env      # Validate environment variables\nmake validate          # Validate docker-compose\nmake test-all          # Run all validations\n</code></pre> <p>See pre-commit hooks guide for automated quality checks.</p>","tags":["documentation","readme","guide"]},{"location":"readme/contributing/","title":"Contributing","text":"<ul> <li>development</li> <li>best-practices description: Contribution guidelines and development workflow \u2014\\n# Contributing</li> </ul> <p>Contributions are welcome! Please follow these guidelines:</p> <ol> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Make your changes</li> <li>Test thoroughly</li> <li>Submit a pull request</li> </ol>","tags":["documentation","readme","guide"]},{"location":"readme/contributing/#license-support","title":"License &amp; Support","text":"<p>License: This project is licensed under the MIT License - see the LICENSE file for details.</p> <p>Support: - Open an issue on GitHub - Check troubleshooting documentation - Review architecture documentation</p>","tags":["documentation","readme","guide"]},{"location":"readme/contributing/#acknowledgments","title":"Acknowledgments","text":"<ul> <li>Docker and Docker Compose for containerization</li> <li>Nginx for load balancing</li> <li>PostgreSQL for database backend</li> <li>Alpine Linux for minimal base images</li> </ul> <p>Made with \u2764\ufe0f for production-ready Docker deployments</p>","tags":["documentation","readme","guide"]},{"location":"readme/environment-setup/","title":"Environment setup","text":"<ul> <li>environment</li> <li>configuration</li> <li>secrets</li> <li>authentication description: Environment variables and secrets configuration guide \u2014\\n# Environment Setup</li> </ul> <p>Required before starting the stack.</p>","tags":["documentation","readme","guide"]},{"location":"readme/environment-setup/#setup-steps","title":"Setup Steps","text":"<ol> <li> <p>Copy environment template: </p>Bash<pre><code>cp .env.example .env\n</code></pre><p></p> </li> <li> <p>Edit <code>.env</code> with credentials (use strong passwords): </p>Bash<pre><code>GITHUB_OWNER=YourUsername\nGH_PAT=ghp_xxxxxxxxxxxxxxxxxxxx\n\n# Database passwords (16+ chars, mixed case/numbers/symbols)\nDOCKER_POSTGRES_PASSWORD=your_secure_password\nDOCKER_MARIADB_ROOT_PASSWORD=your_secure_root_password\nDOCKER_MARIADB_PASSWORD=your_secure_password\n\n# Service credentials\nDOCKER_REDIS_PASSWORD=your_redis_password\nDOCKER_MINIO_ROOT_USER=minioadmin\nDOCKER_MINIO_ROOT_PASSWORD=your_minio_password\nDOCKER_GRAFANA_ADMIN_PASSWORD=your_grafana_password\nDOCKER_JUPYTER_TOKEN=your_jupyter_token\nDOCKER_PGADMIN_PASSWORD=your_pgadmin_password\n</code></pre><p></p> </li> <li> <p>Load environment variables (PowerShell): </p>PowerShell<pre><code>Get-Content .env | ForEach-Object {\n  $var = $_.Split('=')\n  [Environment]::SetEnvironmentVariable($var[0], $var[1], 'Process')\n}\n</code></pre><p></p> </li> <li> <p>Validate environment: </p>Bash<pre><code>python scripts/validate_env.py\nmake validate-env\n</code></pre><p></p> </li> </ol> <p>Security: Never commit <code>.env</code> file. Use GitHub Secrets for CI/CD. Rotate passwords regularly.</p>","tags":["documentation","readme","guide"]},{"location":"readme/features/","title":"Features","text":"<ul> <li>docker-compose</li> <li> <p>platform description: Complete feature set and capabilities of the data platform \u2014\\n# Features</p> </li> <li> <p>\u2705 GPU-Accelerated ML: Jupyter TensorFlow notebook with CUDA 12.2 support</p> </li> <li>\u2705 Dual Databases: PostgreSQL (RDBMS) + MariaDB with optimized configs</li> <li>\u2705 High Availability: Load-balanced 3x nginx web servers with Redis cache</li> <li>\u2705 S3-Compatible Storage: MinIO for object storage (9000/9001)</li> <li>\u2705 AI Integration: GitHub MCP Server for Model Context Protocol</li> <li>\u2705 Production Monitoring: Grafana dashboards + Prometheus metrics</li> <li>\u2705 K8s Management: k9s terminal UI for Kubernetes workflows</li> <li>\u2705 DevContainer Ready: VS Code integration with all services</li> <li>\u2705 Security: Non-root execution, secrets management, network isolation</li> <li>\u2705 Performance: BuildKit caching, optimized Dockerfiles, health checks</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/features/#local-development-stack","title":"Local Development Stack","text":"<ul> <li>BuildKit: Optimized Docker builds with cache</li> <li>LocalStack: Local AWS cloud emulation (S3, DynamoDB, SQS, SNS, Lambda)</li> <li>MailHog: Email testing and capture</li> <li>pgAdmin: Web-based database administration</li> <li>Redis Commander: Redis data browser and management</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/installation/","title":"Installation","text":"<ul> <li>installation</li> <li>deployment</li> <li>setup description: Installation and deployment guide for production and development \u2014\\n# Installation</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/installation/#production-deployment","title":"Production Deployment","text":"Bash<pre><code># Clone repository\ngit clone &lt;repository-url&gt;\ncd docker\n\n# Build and start\nmake build\nmake up\n\n# Verify\nmake ps\ncurl http://localhost:8080/\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/installation/#development-with-vs-code","title":"Development with VS Code","text":"<ol> <li> <p>Open in VS Code: </p>Bash<pre><code>code .\n</code></pre><p></p> </li> <li> <p>Open in DevContainer:    - Press <code>F1</code> or <code>Ctrl+Shift+P</code>    - Select \u201cDev Containers: Reopen in Container\u201d    - Wait for container build and initialization</p> </li> <li> <p>Development environment includes:    - Full cluster access (load balancer, web servers, database)    - Python 3.14.0 with UV package manager    - Node.js 22 with npm    - Docker-in-Docker for managing cluster    - VS Code extensions pre-installed</p> </li> </ol> <p>See usage guide for available commands.</p>","tags":["documentation","readme","guide"]},{"location":"readme/maintenance/","title":"Maintenance","text":"<ul> <li>documentation description: Maintenance procedures including backup, restore, and updates \u2014\\n# Maintenance</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/maintenance/#backup-database","title":"Backup Database","text":"Bash<pre><code>docker-compose exec db pg_dump -U cluster_user clusterdb &gt; backup.sql\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/maintenance/#restore-database","title":"Restore Database","text":"Bash<pre><code>docker-compose exec -T db psql -U cluster_user -d clusterdb &lt; backup.sql\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/maintenance/#update-images","title":"Update Images","text":"Bash<pre><code>make build --no-cache\nmake restart\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/maintenance/#security-performance","title":"Security &amp; Performance","text":"<p>Security Features: - Non-root user execution in all containers - Secret management for sensitive data - Read-only volumes where applicable - Network isolation with bridge networking - Regular security updates via base images - Minimal attack surface with Alpine Linux</p> <p>Performance Optimizations: - BuildKit caching for fast builds - Optimized multi-stage Dockerfiles - Named volumes for persistent data - Nginx caching for improved response times - PostgreSQL tuning for optimal performance - Resource limits and health checks</p>","tags":["documentation","readme","guide"]},{"location":"readme/overview/","title":"Overview","text":"<ul> <li>overview</li> <li>architecture description: Overview of the Modern Data Platform Docker cluster \u2014\\n# Modern Data Platform - Overview</li> </ul> <p>A turn-key modern data platform featuring GPU-accelerated Jupyter, load-balanced web services, dual databases (PostgreSQL + MariaDB), Redis cache, S3-compatible storage (MinIO), GitHub MCP integration, production-grade monitoring with Grafana/Prometheus, and complete local development stack.</p>","tags":["documentation","readme","guide"]},{"location":"readme/overview/#quick-start","title":"Quick Start","text":"Bash<pre><code># Clone and navigate\ngit clone &lt;repository-url&gt;\ncd docker\n\n# Build and start cluster\nmake build\nmake up\n\n# Verify deployment\ncurl http://localhost:8080/\nmake ps\n\n# For development with VS Code\nmake dev  # Starts cluster + devcontainer\n</code></pre> <p>See installation guide for detailed setup.</p>","tags":["documentation","readme","guide"]},{"location":"readme/pre-commit/","title":"Pre commit","text":"<ul> <li>validation</li> <li>javascript</li> <li>automation description: Pre-commit hooks for automated code quality and validation \u2014\\n# Pre-commit Hooks</li> </ul> <p>Pre-commit hooks run automatically in the <code>cluster-pre-commit</code> container service.</p>","tags":["documentation","readme","guide"]},{"location":"readme/pre-commit/#enabled-hooks","title":"Enabled Hooks","text":"<ul> <li>YAML/JSON syntax validation</li> <li>Secrets detection (detect-secrets)</li> <li>docker-compose validation</li> <li>Python formatting (Black, Ruff)</li> <li>Trailing whitespace, end-of-file fixer</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/pre-commit/#usage","title":"Usage","text":"Bash<pre><code># Pre-commit runs automatically in dev profile\nmake dev\n\n# Manual run (if needed)\ndocker-compose run --rm cluster-pre-commit\n\n# Or install locally\npre-commit install\npre-commit run --all-files\n</code></pre> <p>Configuration: See <code>.pre-commit-config.yaml</code></p>","tags":["documentation","readme","guide"]},{"location":"readme/pre-commit/#scaling","title":"Scaling","text":"<p>Scale web servers dynamically: </p>Bash<pre><code>docker-compose up -d --scale cluster-web1=5 --scale cluster-web2=5 --scale cluster-web3=5\n</code></pre><p></p> <p>See troubleshooting guide for common issues.</p>","tags":["documentation","readme","guide"]},{"location":"readme/prerequisites/","title":"Prerequisites","text":"<ul> <li> <p>setup description: System requirements and prerequisites for running the Docker cluster \u2014\\n# Prerequisites</p> </li> <li> <p>Python 3.14.0+ (see Python setup guide)</p> </li> <li>Docker Engine 24.0+ with BuildKit enabled</li> <li>Docker Compose V2</li> <li>8GB RAM minimum (16GB recommended for Jupyter GPU workloads)</li> <li>NVIDIA GPU + drivers (optional, for Jupyter CUDA acceleration)</li> <li>Ports: 8080, 5432, 3306, 6379, 8888, 9000, 9001, 3002, 9090</li> <li>Windows: WSL2 with Docker Desktop | Linux: Docker Engine | macOS: Docker Desktop</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/prerequisites/#required-ports","title":"Required Ports","text":"Port Service 8080 Load Balancer 5432 PostgreSQL 3306 MariaDB 6379 Redis 8888 Jupyter Lab 9000/9001 MinIO 3002 Grafana 9090 Prometheus <p>See environment setup for configuration details.</p>","tags":["documentation","readme","guide"]},{"location":"readme/project-structure/","title":"Project structure","text":"<ul> <li>architecture description: Project directory structure and file organization \u2014\\n# Project Structure</li> </ul> Text Only<pre><code>docker/\n\u251c\u2500\u2500 .config/                    # Centralized configuration (SSoT)\n\u2502   \u251c\u2500\u2500 web/                    # Web dashboard configs (Vite, TypeScript, ESLint, etc.)\n\u2502   \u251c\u2500\u2500 python/                 # Python tool configs (pytest, pyright)\n\u2502   \u251c\u2500\u2500 git/                    # Git tool configs (pre-commit)\n\u2502   \u251c\u2500\u2500 devcontainer/           # DevContainer configuration\n\u2502   \u251c\u2500\u2500 nginx/                  # Nginx configs\n\u2502   \u251c\u2500\u2500 database/               # PostgreSQL and MariaDB configs\n\u2502   \u251c\u2500\u2500 services/               # Service-specific configs\n\u2502   \u251c\u2500\u2500 docker/                 # Docker daemon configs\n\u2502   \u2514\u2500\u2500 monitoring/             # Prometheus, Grafana\n\u251c\u2500\u2500 .devcontainer/              # Symlink to .config/devcontainer/\n\u251c\u2500\u2500 .github/                    # GitHub configuration\n\u2502   \u251c\u2500\u2500 copilot-instructions.md # Copilot coding standards\n\u2502   \u251c\u2500\u2500 TODO.md                 # Implementation tracking\n\u2502   \u2514\u2500\u2500 workflows/              # CI/CD pipelines\n\u251c\u2500\u2500 .vscode/                    # VS Code team settings\n\u251c\u2500\u2500 dockerfile/                 # All Dockerfiles (SSoT - 20 services)\n\u2502   \u251c\u2500\u2500 web-dashboard.Dockerfile    # React monitoring dashboard\n\u2502   \u251c\u2500\u2500 devcontainer.Dockerfile     # Development container\n\u2502   \u251c\u2500\u2500 postgres.Dockerfile         # PostgreSQL database\n\u2502   \u251c\u2500\u2500 redis.Dockerfile            # Redis cache\n\u2502   \u251c\u2500\u2500 nginx.Dockerfile            # Load balancer\n\u2502   \u2514\u2500\u2500 [15 more services...]       # See complete list below\n\u251c\u2500\u2500 scripts/                    # Automation scripts\n\u2502   \u251c\u2500\u2500 orchestrator.py         # Python orchestrator\n\u2502   \u251c\u2500\u2500 powershell/             # PowerShell scripts\n\u2502   \u251c\u2500\u2500 python/                 # Python scripts\n\u2502   \u2514\u2500\u2500 bash/                   # Bash scripts\n\u251c\u2500\u2500 web-content/                # React dashboard source code\n\u251c\u2500\u2500 api/                        # Express.js API server\n\u251c\u2500\u2500 docker-compose.yml          # 26-service orchestration\n\u2514\u2500\u2500 Makefile                    # Build + test + validate\n</code></pre> <p>See configuration guide for config details.</p>","tags":["documentation","readme","guide"]},{"location":"readme/python-setup/","title":"Python setup","text":"<ul> <li>python</li> <li>setup</li> <li>installation</li> <li>troubleshooting description: Python 3.14 installation guide for validation scripts \u2014\\n# Python Setup</li> </ul> <p>Python 3.14.0+ is required for validation scripts. Windows users: Do NOT use Microsoft Store Python (causes PATH issues).</p>","tags":["documentation","readme","guide","python"]},{"location":"readme/python-setup/#windows-installation","title":"Windows Installation","text":"<ol> <li>Download Python 3.14.0 from python.org</li> <li> <p>Run installer with these options:    - \u2705 \u201cAdd Python to PATH\u201d    - \u2705 \u201cInstall for all users\u201d    - Install location: <code>C:\\Program Files\\Python313</code> (recommended)</p> </li> <li> <p>Disable Windows App Execution Aliases:    - Settings \u2192 Apps \u2192 Advanced app settings \u2192 App execution aliases    - Disable: \u201cApp Installer python.exe\u201d    - Disable: \u201cApp Installer python3.exe\u201d</p> </li> <li> <p>Verify installation: </p>PowerShell<pre><code>python --version  # Should show Python 3.14.0\nwhere.exe python  # Should show C:\\Program Files\\Python313\\python.exe\n</code></pre><p></p> </li> <li> <p>Install dependencies: </p>PowerShell<pre><code>pip install uv  # UV package manager\nuv pip install -r requirements.txt\n</code></pre><p></p> </li> </ol> <p>See troubleshooting guide for common issues.</p>","tags":["documentation","readme","guide","python"]},{"location":"readme/service-access/","title":"Service access","text":"<ul> <li>docker-compose description: Service endpoints and access credentials for all cluster services \u2014\\n# Service Access</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/service-access/#web-services","title":"Web Services","text":"<ul> <li>Load Balancer: http://localhost:8080 (Web UI)</li> <li>MailHog: http://localhost:8025 (Email testing UI, SMTP: 1025)</li> <li>pgAdmin: http://localhost:5050 (admin@example.com/admin)</li> <li>Redis Commander: http://localhost:8082 (admin/admin)</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/service-access/#databases","title":"Databases","text":"<ul> <li>PostgreSQL: localhost:5432 (User: cluster_user, DB: clusterdb)</li> <li>MariaDB: localhost:3306 (User: cluster_user, DB: clusterdb)</li> <li>Redis: localhost:6379 (Password: changeme)</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/service-access/#data-ml","title":"Data &amp; ML","text":"<ul> <li>Jupyter Lab: http://localhost:8888 (Token: changeme, GPU-enabled)</li> <li>MinIO Console: http://localhost:9001 (Admin/Admin)</li> <li>MinIO API: localhost:9000 (S3-compatible)</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/service-access/#monitoring-tools","title":"Monitoring &amp; Tools","text":"<ul> <li>Grafana: http://localhost:3002 (Admin/Admin)</li> <li>Prometheus: http://localhost:9090 (Metrics)</li> <li>BuildKit: localhost:1234 (Build daemon)</li> <li>LocalStack: http://localhost:4566 (AWS emulation)</li> <li>GitHub MCP: stdio-based (Node.js integration)</li> </ul> <p>See configuration guide for customization.</p>","tags":["documentation","readme","guide"]},{"location":"readme/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>troubleshooting</li> <li>debugging description: Common issues and troubleshooting solutions for the cluster \u2014\\n# Troubleshooting</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/troubleshooting/#port-conflicts","title":"Port Conflicts","text":"Bash<pre><code># Check if ports are in use\nnetstat -ano | findstr :8080\nnetstat -ano | findstr :5432\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/troubleshooting/#service-health-issues","title":"Service Health Issues","text":"Bash<pre><code># Check service logs\nmake logs\n\n# Inspect specific service\ndocker-compose logs [service_name]\n\n# Check health status\ndocker inspect &lt;container_id&gt; | findstr Health\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/troubleshooting/#database-connection","title":"Database Connection","text":"Bash<pre><code># Test database connectivity\ndocker-compose exec db psql -U cluster_user -d clusterdb -c \"SELECT 1;\"\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/troubleshooting/#clean-restart","title":"Clean Restart","text":"Bash<pre><code># Complete cleanup and fresh start\nmake clean\nmake build\nmake up\n</code></pre> <p>See maintenance guide for backup/restore procedures.</p>","tags":["documentation","readme","guide"]},{"location":"readme/usage/","title":"Usage","text":"<ul> <li>usage</li> <li>commands</li> <li>docker-compose description: Common commands and usage patterns for managing the cluster \u2014\\n# Usage</li> </ul>","tags":["documentation","readme","guide"]},{"location":"readme/usage/#makefile-commands","title":"Makefile Commands","text":"Bash<pre><code>make help       # Show all available commands\nmake build      # Build Docker images\nmake up         # Start the cluster\nmake down       # Stop the cluster\nmake logs       # View logs\nmake ps         # Show running services\nmake restart    # Restart the cluster\nmake validate   # Validate configuration\nmake clean      # Clean up resources\n</code></pre>","tags":["documentation","readme","guide"]},{"location":"readme/usage/#docker-compose-commands","title":"Docker Compose Commands","text":"Bash<pre><code># Start production cluster\ndocker-compose up -d loadbalancer web1 web2 web3 db\n\n# Start with devcontainer\ndocker-compose --profile dev up -d\n\n# View logs\ndocker-compose logs -f [service_name]\n\n# Check status\ndocker-compose ps\n\n# Scale web servers\nmake scale N=5\n\n# Stop services\ndocker-compose down\n\n# Clean up (including volumes)\ndocker-compose down -v\n</code></pre> <p>See service access for endpoint URLs.</p>","tags":["documentation","readme","guide"]},{"location":"reports/cleanup/2025-10-25-actions/","title":"2025 10 25 actions","text":"<ul> <li>documentation description: Completed cleanup actions and archival procedures report_type: cleanup-actions \u2014\\n# Cleanup Actions Completed</li> </ul>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-actions/#documentation-reformatting","title":"Documentation Reformatting","text":"<p>DEVELOPMENT_DEBT.md: - Complete enterprise-grade rewrite - 55 \u2192 260+ lines of structured content - Added executive summary with metrics - Created security analysis with vulnerability tables - Built phase breakdown (6 phases, 30 tasks, 87 hours) - Added risk assessment matrix - Created implementation roadmap - Matches TODO.md enterprise standards</p> <p>copilot-instructions.md: - Comprehensive expansion from 15 to 150+ lines - Complete Stack &amp; Environment section - Coding Standards (Docker Compose, Python, Node.js) - Scripts Organization structure - Common Commands documentation - Critical Guidelines (DO/DON\u2019T sections) - Documentation references - Current: Python 3.14, Docker Compose v2</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-actions/#documentation-restructuring","title":"Documentation Restructuring","text":"<p>Method: Decomposed large reports into focused dated entries </p>PowerShell<pre><code>New-Item -ItemType Directory -Force -Path \"docs/reports/{cleanup,debt,setup}\"\n# Created focused files \u2264150w with YAML front matter\n</code></pre><p></p> <p>Files Decomposed: 1. CLEANUP-SUMMARY.md \u2192 docs/reports/cleanup/ (4 files) 2. DEVELOPMENT_DEBT.md \u2192 docs/reports/debt/ (4 files) 3. PROJECT-SETUP-COMPLETE.md \u2192 docs/reports/setup/ (4 files)</p> <p>Benefits: - Scannable documentation (\u2264150w per file) - Dated entries for version tracking - YAML front matter for semantic indexing - Central docs/ structure (SSoT)</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-actions/#cross-reference-updates","title":"Cross-Reference Updates","text":"<p>TODO.md (2 updates): - Line 388: CLEANUP-REPORT \u2192 archived location - Line 544: REFACTOR-SUMMARY \u2192 \u201carchived (v2.0)\u201d</p> <p>DEVELOPMENT_DEBT.md (1 update): - Line 51: CLEANUP-REPORT \u2192 archived location</p> <p>ARCHITECTURE.md (1 update): - Removed IMPLEMENTATION.md table row</p> <p>AGENT.md (1 update): - Line 310: Updated CLEANUP-REPORT path</p> <p>Total: 6 references updated across 4 files</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-overview/","title":"2025 10 25 overview","text":"<ul> <li>documentation description: Documentation cleanup summary and metrics report_type: cleanup version: \u20183.1\u2019 \u2014\\n# Documentation Cleanup Overview</li> </ul> <p>Date: 2025-10-25 Status: \u2705 COMPLETE Version: 3.1</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-overview/#executive-summary","title":"Executive Summary","text":"<p>Successfully completed comprehensive documentation cleanup and standardization across Modern Data Platform repository, ensuring enterprise-grade quality.</p> <p>Key Metrics: - 6 files modified with enterprise-grade formatting - 3 files archived with proper versioning - 0 files remaining as bloat/temporary - 100% cross-reference validation completed</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-overview/#scope","title":"Scope","text":"<p>Documentation Reformatting: - DEVELOPMENT_DEBT.md: 55 \u2192 260+ lines (complete rewrite) - copilot-instructions.md: 15 \u2192 150+ lines (comprehensive expansion)</p> <p>Archival: - CLEANUP-REPORT.md \u2192 v3.1-20251025 - IMPLEMENTATION.md \u2192 v2.0-20251025 - REFACTOR-SUMMARY.md \u2192 v2.0-20251025</p> <p>Cross-References: - 6 references updated across 4 files - TODO.md, DEVELOPMENT_DEBT.md, ARCHITECTURE.md, AGENT.md</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-overview/#quality-standards-met","title":"Quality Standards Met","text":"<p>\u2705 Enterprise-grade tables \u2705 Proper markdown formatting \u2705 Visual hierarchy with emojis \u2705 Priority indicators (\ud83d\udd34 \ud83d\udfe0 \ud83d\udfe2) \u2705 Status indicators (\u2705 \u274c \u26a0\ufe0f) \u2705 Semantic consistency \u2705 Zero bloat/obsolete content</p> <p>See subdocs for detailed breakdown of actions, verification, and file changes.</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-structure/","title":"2025 10 25 structure","text":"<ul> <li>architecture description: Clean workspace structure after cleanup report_type: structure \u2014\\n# Repository Structure Post-Cleanup</li> </ul>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-structure/#clean-workspace","title":"Clean Workspace","text":"Text Only<pre><code>.github/\n\u251c\u2500\u2500 TODO.md                     \u2705 Enterprise v4.0, 30 tasks\n\u251c\u2500\u2500 DEVELOPMENT_DEBT.md         \u2705 Enterprise format, 6 phases\n\u251c\u2500\u2500 copilot-instructions.md     \u2705 150+ lines, current\n\u251c\u2500\u2500 CLEANUP-SUMMARY.md          \u2705 This report series\n\u2514\u2500\u2500 archive/\n    \u251c\u2500\u2500 CLEANUP-REPORT-v3.1-20251025.md\n    \u251c\u2500\u2500 IMPLEMENTATION-v2.0-20251025.md\n    \u251c\u2500\u2500 REFACTOR-SUMMARY-v2.0-20251025.md\n    \u2514\u2500\u2500 TODO-v3.1-20251025.md\n\nweb-content/\n\u251c\u2500\u2500 ARCHITECTURE.md             \u2705 Updated\n\u251c\u2500\u2500 INSTALL.md                  \u2705 Clean\n\u251c\u2500\u2500 QUICKSTART.md               \u2705 Clean\n\u2514\u2500\u2500 README.md                   \u2705 Clean\n\nRoot:\n\u251c\u2500\u2500 README.md                   \u2705 Clean\n\u251c\u2500\u2500 SETUP.md                    \u2705 Clean\n\u251c\u2500\u2500 SECURITY.md                 \u2705 Clean\n\u251c\u2500\u2500 AGENT.md                    \u2705 Updated paths\n\u2514\u2500\u2500 (no obsolete docs)          \u2705 Clean\n</code></pre>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-structure/#semantic-alignment","title":"Semantic Alignment","text":"<p>Verified Documents:</p> Document Status Checks README.md \u2705 Verified No obsolete refs TODO.md \u2705 Verified v4.0, 30 tasks, priorities DEVELOPMENT_DEBT.md \u2705 Verified Matches TODO.md, metrics copilot-instructions.md \u2705 Verified Python 3.14, Docker Compose v2 ARCHITECTURE.md \u2705 Verified IMPLEMENTATION.md removed AGENT.md \u2705 Verified Archived paths updated","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-structure/#file-changes-summary","title":"File Changes Summary","text":"<p>Modified (6): 1. .github/TODO.md - table alignment, references 2. .github/DEVELOPMENT_DEBT.md - complete rewrite 3. .github/copilot-instructions.md - comprehensive expansion 4. AGENT.md - updated paths 5. web-content/ARCHITECTURE.md - removed obsolete row 6. README.md - verified clean</p> <p>Archived (3): 1. CLEANUP-REPORT-v3.1-20251025.md (~15KB) 2. IMPLEMENTATION-v2.0-20251025.md (~2KB) 3. REFACTOR-SUMMARY-v2.0-20251025.md (~8KB)</p> <p>Created (1): 1. CLEANUP-SUMMARY.md (this report)</p> <p>Outcome: Enterprise-grade documentation with zero bloat, proper archival, consistent semantic alignment.</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-verification/","title":"2025 10 25 verification","text":"<ul> <li>documentation description: Verification results and quality assurance checks report_type: verification \u2014\\n# Cleanup Verification Results</li> </ul>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-verification/#git-status-check","title":"Git Status Check","text":"PowerShell<pre><code>git status --short\n</code></pre> <p>Results: - Modified: 4 files - Created: 4 files - Deleted: 3 files (moved to archive) - Total Changes: 11 files</p> <p>Files Changed: - M .github/TODO.md - M .github/copilot-instructions.md - M AGENT.md - M web-content/ARCHITECTURE.md - D CLEANUP-REPORT.md (decomposed to docs/reports/cleanup/) - D web-content/IMPLEMENTATION.md (obsolete) - D web-content/REFACTOR-SUMMARY.md (obsolete) - D .github/CLEANUP-SUMMARY.md (decomposed to docs/reports/cleanup/) - D .github/DEVELOPMENT_DEBT.md (decomposed to docs/reports/debt/) - D .github/PROJECT-SETUP-COMPLETE.md (decomposed to docs/reports/setup/)</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-verification/#quality-assurance-checks","title":"Quality Assurance Checks","text":"<p>Documentation Standards: \u2705 Enterprise-grade tables \u2705 Proper markdown formatting \u2705 Visual hierarchy (emojis) \u2705 Priority indicators \u2705 Status indicators \u2705 Semantic consistency \u2705 No bloat/obsolete content</p> <p>Code Quality (Python): \u2705 Black formatting: <code>black --check scripts/python</code> \u2705 Ruff linting: <code>ruff check scripts/python</code> \u2705 Mypy type checking: <code>mypy --strict scripts/python</code> \u2705 Modern type hints (PEP 585)</p>","tags":["documentation"]},{"location":"reports/cleanup/2025-10-25-verification/#workspace-verification","title":"Workspace Verification","text":"<p>No Temporary Files: </p>PowerShell<pre><code>Get-ChildItem -Recurse -Include *.tmp,*.bak,*.old | Measure-Object\n# Result: 0 files\n</code></pre><p></p> <p>No Obsolete Scripts: </p>PowerShell<pre><code>Get-ChildItem scripts\\ -File | Where-Object { \n  $_.Name -notmatch 'orchestrator' -and \n  $_.Name -ne 'README.md' -and \n  $_.Name -ne 'MIGRATION.md' \n} | Measure-Object\n# Result: 0 files\n</code></pre><p></p> <p>Reports Structure Verified: </p>PowerShell<pre><code>Test-Path docs/reports/cleanup/2025-10-25-overview.md\n# Result: True\n</code></pre><p></p> <p>All verification checks passed \u2705</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-overview/","title":"2025 10 25 overview","text":"<ul> <li>overview description: Development debt v4.0 executive summary report_type: debt-analysis version: \u20184.0\u2019 \u2014\\n# Development Debt v4.0 - Overview</li> </ul> <p>Last Updated: 2025-10-25 Status: \ud83d\ude80 READY FOR IMPLEMENTATION Version: 4.0</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-overview/#executive-summary","title":"Executive Summary","text":"<p>Total Technical Debt: 30 tasks across 6 phases Estimated Effort: 87 hours over 6 weeks Critical Path: Testing Infrastructure \u2192 Security Hardening</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-overview/#priority-breakdown","title":"Priority Breakdown","text":"Priority Tasks Hours Status \ud83d\udd34 Critical 12 31h \ud83d\udfe1 Not Started \ud83d\udfe0 High 10 29h \ud83d\udfe1 Not Started \ud83d\udfe2 Medium 8 27h \ud83d\udfe1 Not Started","tags":["documentation"]},{"location":"reports/debt/2025-10-25-overview/#phase-overview","title":"Phase Overview","text":"<ol> <li>Phase 4.1: Testing Infrastructure (Week 1, 13h) - \ud83d\udd34 CRITICAL</li> <li>Phase 4.2: Security Hardening (Week 2, 18h) - \ud83d\udd34 CRITICAL</li> <li>Phase 4.3: Planned Scripts (Week 3, 18h) - \ud83d\udfe0 HIGH</li> <li>Phase 4.4: Documentation (Week 4, 11h) - \ud83d\udfe0 HIGH</li> <li>Phase 4.5: Code Quality (Week 5, 6h) - \ud83d\udfe2 MEDIUM</li> <li>Phase 4.6: Dashboard Enhancements (Week 6, 21h) - \ud83d\udfe2 MEDIUM</li> </ol>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-overview/#critical-path","title":"Critical Path","text":"Text Only<pre><code>Week 1: Testing (BLOCKER)\n   \u2193\nWeek 2: Security (Depends on Testing)\n   \u2193\nWeek 3-6: Parallel Execution\n</code></pre> <p>Key Blocker: Testing must be complete before security work begins.</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-overview/#risk-assessment","title":"Risk Assessment","text":"Risk Probability Impact Mitigation Testing framework complexity Medium High Start with simple pytest config Authentication scope creep High Medium Use JWT for internal, defer OAuth Docker socket security issues Low High Use read-only mount + proxy <p>See subdocs for detailed security analysis, phase breakdown, and implementation roadmap.</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/","title":"2025 10 25 phases","text":"<ul> <li>documentation description: Six-phase development plan with tasks and hours report_type: phase-breakdown \u2014\\n# Phase Breakdown (6 Phases)</li> </ul>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/#phase-41-testing-critical","title":"Phase 4.1: Testing \ud83d\udd34 CRITICAL","text":"<p>Week 1 (13h): pytest setup (1h), test structure (1h), unit tests for utils/validate/audit (9h), CI/CD (2h)</p> <p>Acceptance: &gt;80% coverage, CI/CD configured, pre-commit hooks</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/#phase-42-security-critical","title":"Phase 4.2: Security \ud83d\udd34 CRITICAL","text":"<p>Week 2 (18h): Authentication (6h), rate limiting (2h), HTTPS/proxy (4h), validation (2h), CORS (1h), socket audit (3h)</p> <p>Acceptance: JWT/OAuth, rate limiting, HTTPS, validation, CORS, audit</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/#phase-43-planned-scripts-high","title":"Phase 4.3: Planned Scripts \ud83d\udfe0 HIGH","text":"<p>Timeline: Week 3 (18 hours) Priority: HIGH</p> <p>PowerShell (8h): - cleanup/remove-old-images (2h) - cleanup/clear-volumes (2h) - audit/security-scan (4h)</p> <p>Bash (10h): - docker/build-images (3h) - docker/cleanup-volumes (1h) - docs/build-docs (4h)</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/#phase-44-documentation-high","title":"Phase 4.4: Documentation \ud83d\udfe0 HIGH","text":"<p>Timeline: Week 4 (11 hours) Priority: HIGH</p> <ul> <li>Create documentation index (2h)</li> <li>Archive obsolete docs (2h)</li> <li>Consolidate web-content (3h)</li> <li>Create MkDocs site (4h)</li> </ul>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/#phase-45-code-quality-medium","title":"Phase 4.5: Code Quality \ud83d\udfe2 MEDIUM","text":"<p>Timeline: Week 5 (6 hours) Priority: MEDIUM</p> <ul> <li>Pre-commit hooks (2h)</li> <li>GitHub Actions workflow (3h)</li> <li>Dependabot configuration (1h)</li> </ul>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-phases/#phase-46-dashboard-enhancements-medium","title":"Phase 4.6: Dashboard Enhancements \ud83d\udfe2 MEDIUM","text":"<p>Timeline: Week 6 (21 hours) Priority: MEDIUM (Optional)</p> <ul> <li>Layer-specific health (3h)</li> <li>Layer metrics aggregation (4h)</li> <li>Visual layer grouping (3h)</li> <li>Layer dependencies viz (6h)</li> <li>Layer scaling controls (5h)</li> </ul>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-roadmap/","title":"2025 10 25 roadmap","text":"<ul> <li>implementation description: Six-week implementation roadmap with critical path report_type: roadmap \u2014\\n# Implementation Roadmap</li> </ul>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-roadmap/#critical-path-weeks-1-2","title":"Critical Path (Weeks 1-2)","text":"<p>Week 1: Testing (BLOCKER) - pytest setup (2h), unit tests (9h), CI/CD (2h). Must complete before security.</p> <p>Week 2: Security - Auth/rate limits (8h), HTTPS/proxy (4h), validation/CORS (3h), socket audit (3h)</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-roadmap/#high-priority-weeks-3-4","title":"High Priority (Weeks 3-4)","text":"<p>Week 3: Scripts - PowerShell cleanup/security (8h), Bash build/docs (10h)</p> <p>Week 4: Docs - Index/archival (4h), consolidation (3h), MkDocs (4h)</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-roadmap/#medium-priority-weeks-5-6","title":"Medium Priority (Weeks 5-6)","text":"<p>Week 5: Quality - Pre-commit/CI/Dependabot (6h)</p> <p>Week 6: Dashboard - Layer features (21h, optional)</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-roadmap/#velocity-targets","title":"Velocity Targets","text":"Week Phase Hours Tasks Completion % Week 1 Testing 13h 6 0% Week 2 Security 18h 6 0% Week 3 Scripts 18h 6 0% Week 4 Documentation 11h 4 0% Week 5 Code Quality 6h 3 0% Week 6 Dashboard (Optional) 21h 5 0% <p>Total: 87 hours across 6 weeks</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-roadmap/#next-steps","title":"Next Steps","text":"<ol> <li>Review debt analysis with stakeholders</li> <li>Prioritize critical security issues (Phase 4.2)</li> <li>Allocate resources for testing (Phase 4.1)</li> <li>Begin Phase 4.1 with pytest framework setup</li> <li>Track progress in TODO.md</li> </ol> <p>Status: \ud83d\ude80 Ready for implementation (2025-10-25)</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-security/","title":"2025 10 25 security","text":"<ul> <li>security description: Security vulnerabilities and risk analysis report_type: security-analysis \u2014\\n# Security Analysis (Critical)</li> </ul>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-security/#web-dashboard-vulnerabilities","title":"Web Dashboard Vulnerabilities","text":"Issue Severity Impact No authentication layer \ud83d\udd34 High Unauthorized access possible No rate limiting \ud83d\udd34 High DoS vulnerability No HTTPS enforcement \ud83d\udd34 High Data exposure risk CORS enabled for all \ud83d\udfe0 Med CSRF attacks possible Service URLs exposed in UI \ud83d\udfe1 Low Information disclosure <p>References: - <code>web-content/INSTALL.md:205</code> - Security considerations - <code>web-content/ARCHITECTURE.md:268</code> - Production recommendations</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-security/#api-endpoint-vulnerabilities","title":"API Endpoint Vulnerabilities","text":"Issue Severity Impact Docker socket mounted R/O \u26a0\ufe0f Med Potential privilege escalation No request validation \ud83d\udd34 High Injection attacks possible No API authentication \ud83d\udd34 High Unauthorized API access CORS wildcard enabled \ud83d\udfe0 Med Cross-origin request forgery No input sanitization \ud83d\udd34 High XSS/SQL injection vulnerability <p>References: - <code>api/README.md:58</code> - Security considerations - <code>SECURITY.md:116</code> - Security features</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-security/#required-mitigations","title":"Required Mitigations","text":"<p>Phase 4.2 (Week 2) - 18 hours: 1. JWT/OAuth authentication (6h) 2. Rate limiting: 100 req/15min general, 10 req/15min stats (2h) 3. Traefik reverse proxy + Let\u2019s Encrypt (4h) 4. Input validation on all endpoints (2h) 5. CORS restriction to whitelist (1h) 6. Docker socket security audit (3h)</p>","tags":["documentation"]},{"location":"reports/debt/2025-10-25-security/#acceptance-criteria","title":"Acceptance Criteria","text":"<p>\u2705 JWT/OAuth authentication implemented \u2705 Rate limiting configured \u2705 HTTPS enforced via Traefik \u2705 All inputs validated \u2705 CORS restricted \u2705 Docker socket documented</p>","tags":["documentation"]},{"location":"reports/setup/2025-10-25-config/","title":"2025 10 25 config","text":"<ul> <li>setup</li> <li>configuration</li> <li>migration description: Repository configuration and settings applied report_type: repository-config \u2014\\n# Repository Configuration</li> </ul>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-config/#settings-applied","title":"Settings Applied","text":"<p>\u2705 Description Updated: \u201cModern Data Platform v4.0 - Production-ready GPU-accelerated ML stack\u2026\u201d</p> <p>\u2705 Features Enabled: - Issues: 31 open issues - Projects: Ready for board creation - Discussions: Community collaboration - Pages: Documentation site active - Branch Protection: Main branch protected - Security: Dependabot + secret scanning</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-config/#configuration-files","title":"Configuration Files","text":"<p>New Files Created: </p>Text Only<pre><code>.github/\n\u251c\u2500\u2500 CLEANUP-SUMMARY.md              \u2705 Cleanup report\n\u251c\u2500\u2500 DEVELOPMENT_DEBT.md             \u2705 Debt analysis (260+ lines)\n\u251c\u2500\u2500 issue-templates.json            \u2705 Issue templates\n\u251c\u2500\u2500 create-issues.ps1               \u2705 Bulk creation script\n\u2514\u2500\u2500 archive/\n    \u251c\u2500\u2500 CLEANUP-REPORT-v3.1-20251025.md\n    \u251c\u2500\u2500 IMPLEMENTATION-v2.0-20251025.md\n    \u251c\u2500\u2500 REFACTOR-SUMMARY-v2.0-20251025.md\n    \u2514\u2500\u2500 TODO-v3.1-20251025.md\n\n.config/github/\n\u251c\u2500\u2500 project-v4.0.yml                \u2705 Project tracking\n\u2514\u2500\u2500 repository.yml                  \u2705 Repository config\n</code></pre><p></p> <p>Modified Files: </p>Text Only<pre><code>.github/\n\u251c\u2500\u2500 TODO.md                         \u2705 Updated refs\n\u2514\u2500\u2500 copilot-instructions.md         \u2705 Expanded 150+ lines\n\nweb-content/\n\u2514\u2500\u2500 ARCHITECTURE.md                 \u2705 Removed obsolete refs\n\nAGENT.md                            \u2705 Updated paths\n</code></pre><p></p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-config/#commit-history","title":"Commit History","text":"<p>Commit 1: <code>24f2fae</code> - Title: \u201cdocs: v4.0 documentation cleanup and standardization\u201d - Files: 10 changed (1656 insertions, 91 deletions) - Status: \u2705 Merged to main</p> <p>Commit 2: <code>5a28324</code> - Title: \u201cchore: setup v4.0 project tracking and GitHub configuration\u201d - Files: 4 changed (499 insertions, 1 deletion) - Status: \u2705 Merged to main</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-config/#documentation-structure","title":"Documentation Structure","text":"<p>Active: - .github/TODO.md - Detailed task breakdown - .github/copilot-instructions.md - Coding guidelines - README.md, SETUP.md, SECURITY.md, AGENT.md - web-content/ documentation - docs/reports/ - Historical reports (cleanup, debt, setup)</p> <p>Historical Reports: - docs/reports/cleanup/ (2025-10-25 reports) - docs/reports/debt/ (2025-10-25 analysis) - docs/reports/setup/ (2025-10-25 configuration)</p> <p>All repository configuration applied successfully \u2705</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/","title":"2025 10 25 issues","text":"<ul> <li>setup</li> <li>troubleshooting description: GitHub issues created for v4.0 project report_type: issues-created \u2014\\n# GitHub Issues Created (30 Total)</li> </ul>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#phase-41-testing-6","title":"Phase 4.1: Testing (6)","text":"<p>pytest framework, test structure, unit tests (utils/validation/audit), CI/CD pipeline</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#phase-42-security-6","title":"Phase 4.2: Security (6)","text":"<p>Authentication, rate limiting, HTTPS/proxy, API validation, CORS, socket audit</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#phase-43-scripts-6","title":"Phase 4.3: Scripts (6)","text":"<p>PowerShell: old images cleanup, volumes cleanup, security scan Bash: build images, cleanup volumes, build docs</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#phase-44-documentation-4","title":"Phase 4.4: Documentation (4)","text":"<p>Create index, archive obsolete, consolidate web-content, MkDocs site</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#phase-45-code-quality-3","title":"Phase 4.5: Code Quality (3)","text":"<p>Pre-commit hooks, GitHub Actions workflow, Dependabot</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#phase-46-dashboard-5","title":"Phase 4.6: Dashboard (5)","text":"<p>Layer health, metrics aggregation, visual grouping, dependencies viz, scaling controls</p> <p>View All Issues: https://github.com/DeanLuus22021994/docker_dotfiles/issues</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-issues/#issue-distribution","title":"Issue Distribution","text":"<ul> <li>Critical Priority: 12 issues (31 hours)</li> <li>High Priority: 10 issues (29 hours)</li> <li>Medium Priority: 8 issues (27 hours)</li> </ul> <p>Total: 30 issues, 87 hours effort</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-labels/","title":"2025 10 25 labels","text":"<ul> <li>setup</li> <li>architecture description: GitHub labels created for v4.0 project organization report_type: labels-created \u2014\\n# GitHub Labels Created (15 Total)</li> </ul>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-labels/#category-labels-6","title":"Category Labels (6)","text":"Label Color Description testing \ud83d\udfe2 0e8a16 Testing infrastructure and test coverage security \ud83d\udd34 d73a4a Security hardening and vulnerability fixes scripts \ud83d\udd35 0075ca Script development and automation documentation \ud83d\udd35 0366d6 Documentation improvements quality \ud83d\udfe1 fbca04 Code quality and automation dashboard \ud83d\udfe3 d876e3 Dashboard enhancements","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-labels/#priority-labels-3","title":"Priority Labels (3)","text":"Label Color Description critical \ud83d\udd34 b60205 Critical priority (12 tasks) high-priority \ud83d\udfe0 d93f0b High priority (10 tasks) medium-priority \ud83d\udfe1 fbca04 Medium priority (8 tasks)","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-labels/#phase-labels-6","title":"Phase Labels (6)","text":"Label Color Phase phase-4.1 \ud83d\udd35 1d76db Testing Infrastructure phase-4.2 \ud83d\udfe3 5319e7 Security Hardening phase-4.3 \ud83d\udfe2 0e8a16 Planned Scripts phase-4.4 \ud83d\udd35 0366d6 Documentation phase-4.5 \ud83d\udfe1 fbca04 Code Quality Automation phase-4.6 \ud83d\udfe3 d876e3 Dashboard Enhancements","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-labels/#label-usage","title":"Label Usage","text":"<p>By Category: - testing: 6 issues - security: 6 issues - scripts: 6 issues - documentation: 4 issues - quality: 3 issues - dashboard: 5 issues</p> <p>By Priority: - critical: 12 issues (Phases 4.1-4.2) - high-priority: 10 issues (Phases 4.3-4.4) - medium-priority: 8 issues (Phases 4.5-4.6)</p> <p>By Phase: - phase-4.1: 6 issues - phase-4.2: 6 issues - phase-4.3: 6 issues - phase-4.4: 4 issues - phase-4.5: 3 issues - phase-4.6: 5 issues</p> <p>All labels created successfully for comprehensive project organization.</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-summary/","title":"2025 10 25 summary","text":"<ul> <li>setup description: Project setup v4.0 completion summary report_type: setup-complete version: \u20184.0\u2019 \u2014\\n# Project Setup v4.0 - Complete</li> </ul> <p>Date: 2025-10-25 Status: \u2705 READY FOR DEVELOPMENT Version: 4.0</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-summary/#executive-summary","title":"Executive Summary","text":"<p>Successfully set up comprehensive project tracking infrastructure for Modern Data Platform v4.0 with 30 issues, organized labels, and complete documentation.</p> <p>Timeline: 6 weeks (Oct 28 - Dec 6, 2025) Effort: 87 hours across 6 phases Focus: Production readiness, security hardening, testing infrastructure</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-summary/#completed","title":"Completed","text":"<p>Documentation Cleanup: Commit <code>24f2fae</code> - 10 files, 1656 insertions. Reformatted DEVELOPMENT_DEBT.md, expanded copilot-instructions.md, archived 3 files.</p> <p>GitHub Structure: Commit <code>5a28324</code> - 30 issues across 6 phases, 15 labels created, repository updated.</p>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-summary/#metrics","title":"Metrics","text":"<ul> <li>Tasks: 30 (12 critical, 10 high, 8 medium)</li> <li>Effort: 87 hours over 6 weeks</li> <li>Phases: 6 (Testing, Security, Scripts, Docs, Quality, Dashboard)</li> <li>Target: Dec 6, 2025</li> </ul>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-summary/#phases","title":"Phases","text":"<ol> <li>Week 1: Testing (13h, 6 tasks) \ud83d\udd34</li> <li>Week 2: Security (18h, 6 tasks) \ud83d\udd34</li> <li>Week 3: Scripts (18h, 6 tasks) \ud83d\udfe0</li> <li>Week 4: Docs (11h, 4 tasks) \ud83d\udfe0</li> <li>Week 5: Quality (6h, 3 tasks) \ud83d\udfe2</li> <li>Week 6: Dashboard (21h, 5 tasks) \ud83d\udfe2</li> </ol>","tags":["documentation","setup","installation"]},{"location":"reports/setup/2025-10-25-summary/#next-actions","title":"Next Actions","text":"<ol> <li>\u2705 Review project setup (COMPLETE)</li> <li>\ud83d\udd35 Begin Phase 4.1.1: Setup pytest Framework</li> <li>\ud83d\udd35 Install pytest with plugins</li> <li>\ud83d\udd35 Configure pyproject.toml</li> <li>\ud83d\udd35 Create tests/ directory structure</li> </ol> <p>Status: \u2705 100% COMPLETE - READY TO START PHASE 4.1</p> <p>See subdocs for detailed issues, labels, and repository configuration.</p>","tags":["documentation","setup","installation"]},{"location":"scripts/categories/bash/","title":"Bash","text":"<ul> <li>scripts description: Bash scripts organization and usage for Linux/macOS \u2014\\n# Bash Scripts</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/bash/#categories","title":"Categories","text":"<p><code>bash/docker/</code> - Docker operations - <code>start-devcontainer.sh</code> - Start development container (Linux/macOS)</p> <p><code>bash/docs/</code> - Documentation tools - <code>serve-docs.sh</code> - Serve MkDocs documentation locally</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/bash/#usage","title":"Usage","text":"<p>Direct execution:</p> Bash<pre><code>bash scripts/bash/docker/start-devcontainer.sh\nbash scripts/bash/docs/serve-docs.sh\n</code></pre> <p>Via orchestrator:</p> Bash<pre><code>scripts/orchestrator.sh validate env\nscripts/orchestrator.sh validate configs\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/bash/#requirements","title":"Requirements","text":"<ul> <li>Bash 4.0+ (most Linux/macOS systems)</li> <li>Docker installed for docker scripts</li> <li>MkDocs for documentation scripts</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/bash/#permissions","title":"Permissions","text":"<p>Make scripts executable:</p> Bash<pre><code>chmod +x scripts/bash/**/*.sh\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/bash/#shell-compatibility","title":"Shell Compatibility","text":"<p>Scripts use <code>#!/usr/bin/env bash</code> for portability. Compatible with:</p> <ul> <li>Ubuntu/Debian bash</li> <li>macOS bash (via Homebrew or built-in)</li> <li>WSL bash on Windows</li> <li>Most POSIX-compliant shells</li> </ul> <p>See Bash README: <code>scripts/bash/README.md</code></p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/","title":"Overview","text":"<ul> <li>scripts</li> <li>overview</li> <li>architecture description: Scripts directory overview and organization \u2014\\n# Scripts Overview</li> </ul> <p>Organized scripts following SRP (Single Responsibility Principle) and DRY (Don\u2019t Repeat Yourself) principles.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#structure","title":"Structure","text":"<p>\\\\ scripts/ \u251c\u2500\u2500 orchestrator.{ps1,sh,py}  # Unified task execution \u251c\u2500\u2500 powershell/               # PowerShell scripts \u251c\u2500\u2500 python/                   # Python modules \u2514\u2500\u2500 bash/                     # Bash scripts \\\\</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#orchestrators","title":"Orchestrators","text":"<p>Unified interface across platforms:</p> <p>\\\\powershell python scripts/orchestrator.py validate env scripts/orchestrator.ps1 audit code scripts/orchestrator.sh validate configs \\\\</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#available-categories","title":"Available Categories","text":"<ul> <li>Validation - Environment and config validation</li> <li>Audit - Code quality and dependency checks</li> <li>Config - Settings and secrets management</li> <li>Docker - Container operations</li> <li>Docs - Documentation serving</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#quick-start","title":"Quick Start","text":"<p>\\\\\bash</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#list-all-tasks","title":"List all tasks","text":"<p>python scripts/orchestrator.py help</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#run-validation","title":"Run validation","text":"<p>python scripts/orchestrator.py validate env</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/overview/#run-code-audit","title":"Run code audit","text":"<p>python scripts/orchestrator.py audit code \\\\</p> <p>See \\categories/ subdocs for language-specific details and \\migration/ for v3.0.0 changes.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/powershell/","title":"Powershell","text":"<ul> <li>scripts</li> <li>setup description: PowerShell scripts organization and usage \u2014\\n# PowerShell Scripts</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/powershell/#categories","title":"Categories","text":"<p><code>powershell/config/</code> - Configuration and secrets management - <code>apply-settings.ps1</code> - Apply GitHub repository settings - <code>setup-secrets.ps1</code> - Configure GitHub secrets from .env</p> <p><code>powershell/docker/</code> - Docker operations - <code>start-devcontainer.ps1</code> - Start development container</p> <p><code>powershell/docs/</code> - Documentation tools - <code>serve-docs.ps1</code> - Serve MkDocs documentation locally</p> <p><code>powershell/audit/</code> - Testing and integration - <code>test-integration.ps1</code> - Run integration test suite</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/powershell/#usage","title":"Usage","text":"<p>Direct execution:</p> PowerShell<pre><code>.\\scripts\\powershell\\config\\apply-settings.ps1 -ApplyAll\n.\\scripts\\powershell\\docker\\start-devcontainer.ps1\n</code></pre> <p>Via orchestrator:</p> PowerShell<pre><code>scripts\\orchestrator.ps1 validate env\nscripts\\orchestrator.ps1 audit code\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/powershell/#requirements","title":"Requirements","text":"<ul> <li>PowerShell 7.0+ recommended</li> <li>Windows 10/11 or PowerShell Core on Linux/macOS</li> <li>GitHub CLI (<code>gh</code>) for config scripts</li> </ul> <p>See PowerShell README: <code>scripts/powershell/README.md</code></p>","tags":["documentation","scripts","automation"]},{"location":"scripts/categories/python/","title":"Python","text":"<ul> <li>scripts</li> <li>python description: Python scripts organization and modules \u2014\\n# Python Scripts</li> </ul>","tags":["documentation","scripts","automation","python"]},{"location":"scripts/categories/python/#modules","title":"Modules","text":"<p><code>python/validation/</code> - Environment and configuration validation - <code>validate_env.py</code> - Check required environment variables - <code>validate_configs.py</code> - Validate YAML/JSON configs</p> <p><code>python/audit/</code> - Code quality and dependency auditing - <code>code_quality.py</code> - Black, Ruff, mypy checks - <code>dependencies.py</code> - Package vulnerability scanning</p> <p><code>python/utils/</code> - Shared utilities (DRY) - <code>colors.py</code> - Terminal colors for output - <code>file_utils.py</code> - File operations (read/write JSON, ensure dir) - <code>logging_utils.py</code> - Structured logging setup</p>","tags":["documentation","scripts","automation","python"]},{"location":"scripts/categories/python/#usage","title":"Usage","text":"<p>Direct execution:</p> Bash<pre><code>python scripts/python/validation/validate_env.py\npython scripts/python/audit/code_quality.py\n</code></pre> <p>Via orchestrator (recommended):</p> Bash<pre><code>python scripts/orchestrator.py validate env\npython scripts/orchestrator.py audit code\n</code></pre>","tags":["documentation","scripts","automation","python"]},{"location":"scripts/categories/python/#python-requirements","title":"Python Requirements","text":"<ul> <li>Python 3.14+ required</li> <li>Modern type hints (PEP 585 built-in generics)</li> <li>Black formatting, Ruff linting, mypy type checking</li> </ul> <p>See module-specific READMEs: <code>python/{validation,audit,utils}/README.md</code></p>","tags":["documentation","scripts","automation","python"]},{"location":"scripts/migration/checklist/","title":"Checklist","text":"<ul> <li>scripts</li> <li>migration</li> <li>ci-cd description: Migration checklist for developers and CI/CD pipelines \u2014\\n# Migration Checklist</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/checklist/#for-developers","title":"For Developers","text":"<ul> <li> Update local scripts to use new paths</li> <li> Replace direct imports with package imports</li> <li> Use shared utilities instead of duplicating code</li> <li> Update documentation references</li> <li> Test scripts with new structure</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/checklist/#for-cicd-pipelines","title":"For CI/CD Pipelines","text":"<ul> <li> Update GitHub Actions workflow paths</li> <li> Update GitLab CI/CD script paths</li> <li> Update Jenkins pipeline scripts</li> <li> Update Azure DevOps pipeline tasks</li> <li> Update any automation scripts</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/checklist/#for-documentation","title":"For Documentation","text":"<ul> <li> Update README.md references</li> <li> Update setup guides</li> <li> Update troubleshooting docs</li> <li> Update API documentation</li> <li> Update contribution guidelines</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/checklist/#for-build-scripts","title":"For Build Scripts","text":"<ul> <li> Update Makefile targets (\u2705 Done)</li> <li> Update package.json scripts</li> <li> Update build automation</li> <li> Update deployment scripts</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/checklist/#common-updates","title":"Common Updates","text":"<p>Makefile:</p> Makefile<pre><code># Old: python scripts/validate_env.py\n# New: python scripts/python/validation/validate_env.py\n</code></pre> <p>GitHub Actions:</p> YAML<pre><code># Old: run: python scripts/validate_env.py\n# New: run: python scripts/python/validation/validate_env.py\n</code></pre> <p>Python Imports:</p> Python<pre><code># Old: from validate_env import Colors\n# New: from python.utils.colors import Colors\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/orchestrator/","title":"Orchestrator","text":"<ul> <li>scripts</li> <li>orchestrator</li> <li>usage description: Orchestrator usage guide for unified script execution \u2014\\n# Orchestrator Usage</li> </ul> <p>Unified task execution across all platforms (PowerShell, Bash, Python).</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/orchestrator/#available-orchestrators","title":"Available Orchestrators","text":"<ul> <li><code>scripts/orchestrator.py</code> - Python-based (cross-platform)</li> <li><code>scripts/orchestrator.ps1</code> - PowerShell-specific (Windows)</li> <li><code>scripts/orchestrator.sh</code> - Bash-specific (Linux/macOS)</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/orchestrator/#usage-examples","title":"Usage Examples","text":"<p>List Available Tasks:</p> PowerShell<pre><code>scripts/orchestrator.ps1 help\npython scripts/orchestrator.py help\n</code></pre> <p>Validation Tasks:</p> PowerShell<pre><code># Environment validation\npython scripts/orchestrator.py validate env\n\n# Configuration validation\npython scripts/orchestrator.py validate configs\n</code></pre> <p>Audit Tasks:</p> PowerShell<pre><code># Code quality (Black, Ruff, mypy)\npython scripts/orchestrator.py audit code\n\n# Dependency audit\npython scripts/orchestrator.py audit deps\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/orchestrator/#benefits","title":"Benefits","text":"<ul> <li>Cross-platform - Works on Windows, Linux, macOS</li> <li>Consistent interface - Same commands regardless of platform</li> <li>Path abstraction - No need to remember new paths</li> <li>Task composition - Can run multiple tasks in sequence</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/orchestrator/#example-output","title":"Example Output","text":"Text Only<pre><code>=== Running Black Format Check ===\n\u2713 Black formatting check passed\n\n=== Running Ruff Linter ===\n\u2713 Ruff linting check passed\n\n=== Running mypy Type Check ===\n\u2713 mypy type check passed\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/overview/","title":"Overview","text":"<ul> <li>scripts</li> <li>migration</li> <li>overview description: Scripts migration guide overview for v3.0.0 restructure \u2014\\n# Scripts Migration Overview</li> </ul> <p>Migration from flat scripts structure to organized SRP/DRY structure (v3.0.0, 2025-10-25).</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/overview/#what-changed","title":"What Changed","text":"<p>Old: All scripts in <code>scripts/</code> root (9 files, no organization)</p> <p>New: Organized by language and purpose:</p> Text Only<pre><code>scripts/\n\u251c\u2500\u2500 orchestrator.{ps1,sh,py}  # Unified task execution\n\u251c\u2500\u2500 powershell/               # PowerShell scripts by category\n\u2502   \u251c\u2500\u2500 config/               # apply-settings, setup-secrets\n\u2502   \u251c\u2500\u2500 docker/               # start-devcontainer\n\u2502   \u251c\u2500\u2500 docs/                 # serve-docs\n\u2502   \u2514\u2500\u2500 audit/                # test-integration\n\u251c\u2500\u2500 python/                   # Python modules\n\u2502   \u251c\u2500\u2500 validation/           # validate_env, validate_configs\n\u2502   \u251c\u2500\u2500 audit/                # code_quality, dependencies\n\u2502   \u2514\u2500\u2500 utils/                # Shared utilities (DRY)\n\u2514\u2500\u2500 bash/                     # Bash scripts by category\n    \u251c\u2500\u2500 docker/               # start-devcontainer\n    \u2514\u2500\u2500 docs/                 # serve-docs\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/overview/#migration-approaches","title":"Migration Approaches","text":"<p>Option 1: Orchestrators (Recommended)</p> PowerShell<pre><code>python scripts/orchestrator.py validate env\nscripts/orchestrator.ps1 audit code\n</code></pre> <p>Option 2: Update Paths</p> PowerShell<pre><code># Old: python scripts/validate_env.py\n# New: python scripts/python/validation/validate_env.py\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/overview/#breaking-changes","title":"Breaking Changes","text":"<ul> <li>Old paths no longer work (removed)</li> <li>Python imports need updating</li> <li>CI/CD pipelines require path updates</li> </ul> <p>No backward compatibility - clean break for better organization.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/path-mapping/","title":"Path mapping","text":"<ul> <li>scripts</li> <li>migration</li> <li>documentation description: Complete path mapping for scripts migration \u2014\\n# Scripts Path Mapping</li> </ul> <p>Complete mapping from old to new paths.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/path-mapping/#file-migrations","title":"File Migrations","text":"Old Path New Path Status <code>scripts/validate_env.py</code> <code>scripts/python/validation/validate_env.py</code> \u2705 Migrated <code>scripts/validate_configs.py</code> <code>scripts/python/validation/validate_configs.py</code> \u2705 Migrated <code>scripts/apply-settings.ps1</code> <code>scripts/powershell/config/apply-settings.ps1</code> \u2705 Migrated <code>scripts/setup_secrets.ps1</code> <code>scripts/powershell/config/setup-secrets.ps1</code> \u2705 Migrated <code>scripts/start_devcontainer.ps1</code> <code>scripts/powershell/docker/start-devcontainer.ps1</code> \u2705 Migrated <code>scripts/serve_docs.ps1</code> <code>scripts/powershell/docs/serve-docs.ps1</code> \u2705 Migrated <code>scripts/test_integration.ps1</code> <code>scripts/powershell/audit/test-integration.ps1</code> \u2705 Migrated <code>scripts/start_devcontainer.sh</code> <code>scripts/bash/docker/start-devcontainer.sh</code> \u2705 Migrated <code>scripts/serve_docs.sh</code> <code>scripts/bash/docs/serve-docs.sh</code> \u2705 Migrated","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/path-mapping/#quick-reference","title":"Quick Reference","text":"<p>Python Validation: - <code>validate_env.py</code> \u2192 <code>python/validation/validate_env.py</code> - <code>validate_configs.py</code> \u2192 <code>python/validation/validate_configs.py</code></p> <p>PowerShell Config: - <code>apply-settings.ps1</code> \u2192 <code>powershell/config/apply-settings.ps1</code> - <code>setup_secrets.ps1</code> \u2192 <code>powershell/config/setup-secrets.ps1</code></p> <p>Docker Scripts: - <code>start_devcontainer.{ps1,sh}</code> \u2192 <code>{powershell,bash}/docker/start-devcontainer.{ps1,sh}</code></p> <p>Documentation: - <code>serve_docs.{ps1,sh}</code> \u2192 <code>{powershell,bash}/docs/serve-docs.{ps1,sh}</code></p> <p>Audit: - <code>test_integration.ps1</code> \u2192 <code>powershell/audit/test-integration.ps1</code></p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/shared-utilities/","title":"Shared utilities","text":"<ul> <li>scripts</li> <li>python</li> <li>utilities description: Shared Python utilities for DRY code practices \u2014\\n# Shared Utilities (DRY)</li> </ul> <p>Shared utilities eliminate code duplication across Python scripts.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/shared-utilities/#colors-pythonutilscolorspy","title":"Colors (<code>python/utils/colors.py</code>)","text":"Python<pre><code>from python.utils.colors import success, error, warning, info\n\nprint(success(\"\u2713 Task completed\"))\nprint(error(\"\u2717 Task failed\"))\nprint(warning(\"\u26a0 Warning message\"))\nprint(info(\"\u2139 Information\"))\n</code></pre> <p>Benefits: Consistent colored output, automatic terminal detection.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/shared-utilities/#file-operations-pythonutilsfile_utilspy","title":"File Operations (<code>python/utils/file_utils.py</code>)","text":"Python<pre><code>from python.utils.file_utils import read_json, write_json, ensure_dir\n\nconfig = read_json('config.json')\nensure_dir('logs/')\nwrite_json('output.json', data)\n</code></pre> <p>Features: Error handling, path validation, atomic writes.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/shared-utilities/#logging-pythonutilslogging_utilspy","title":"Logging (<code>python/utils/logging_utils.py</code>)","text":"Python<pre><code>from python.utils.logging_utils import setup_logger\n\nlogger = setup_logger(__name__, use_colors=True)\nlogger.info(\"Processing started\")\nlogger.error(\"Task failed\")\n</code></pre> <p>Features: Colored output, file logging, structured format.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/shared-utilities/#usage-pattern","title":"Usage Pattern","text":"<p>Add parent directory to Python path:</p> Python<pre><code>import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent))\n\n# Now import utilities\nfrom python.utils.colors import success\nfrom python.utils.file_utils import read_json\n</code></pre> <p>See <code>scripts/python/utils/README.md</code> for full API documentation.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>scripts</li> <li>migration</li> <li>troubleshooting description: Common migration issues and solutions \u2014\\n# Migration Troubleshooting</li> </ul>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/#issue-module-not-found-errors","title":"Issue: \u201cModule not found\u201d errors","text":"<p>Cause: Python can\u2019t find new package structure</p> <p>Solution: Add parent directory to Python path:</p> Python<pre><code>import sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent.parent.parent))\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/#issue-file-not-found-errors","title":"Issue: \u201cFile not found\u201d errors","text":"<p>Cause: Using old script paths</p> <p>Solution: Update paths to new locations. See <code>path-mapping.md</code> for complete mapping.</p>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/#issue-import-errors-in-python-scripts","title":"Issue: Import errors in Python scripts","text":"<p>Cause: Using old import patterns</p> <p>Solution: Use package imports:</p> Python<pre><code># Old\nfrom validate_env import Colors\n\n# New\nfrom python.utils.colors import Colors\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/#issue-github-actions-failing","title":"Issue: GitHub Actions failing","text":"<p>Cause: Workflow using old paths</p> <p>Solution: Update workflow YAML:</p> YAML<pre><code># Old\nrun: python scripts/validate_env.py\n\n# New\nrun: python scripts/python/validation/validate_env.py\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/#issue-orchestrator-not-found","title":"Issue: Orchestrator not found","text":"<p>Cause: Running from wrong directory</p> <p>Solution: Run from project root or use full path:</p> PowerShell<pre><code>cd C:\\global\\docker\npython scripts/orchestrator.py validate env\n</code></pre>","tags":["documentation","scripts","automation"]},{"location":"scripts/migration/troubleshooting/#need-help","title":"Need Help?","text":"<ol> <li>Check <code>scripts/python/*/README.md</code> for module docs</li> <li>Review <code>scripts/README.md</code> for orchestrator usage</li> <li>See <code>docs/python-setup-troubleshooting.md</code> for environment issues</li> <li>Check git history for specific file migrations</li> </ol>","tags":["documentation","scripts","automation"]},{"location":"security/docker-socket/alternatives/","title":"Alternatives","text":"<ul> <li>docker</li> <li>security</li> <li>reference description: Alternative approaches to Docker socket security \u2014\\n# Docker Socket Alternatives</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/alternatives/#1-docker-api-over-tcp-with-tls","title":"1. Docker API over TCP with TLS","text":"<p>Benefits: No socket mounting, mutual TLS authentication, network-level access control</p> <p>Setup:</p> Bash<pre><code># Generate CA and certificates\nopenssl genrsa -aes256 -out ca-key.pem 4096\nopenssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem\n# ... (full cert generation in detailed docs)\n</code></pre> <p>Daemon config:</p> JSON<pre><code>{\n  \"hosts\": [\"unix:///var/run/docker.sock\", \"tcp://0.0.0.0:2376\"],\n  \"tls\": true,\n  \"tlsverify\": true,\n  \"tlscacert\": \"/root/.docker/ca.pem\",\n  \"tlscert\": \"/root/.docker/server-cert.pem\",\n  \"tlskey\": \"/root/.docker/server-key.pem\"\n}\n</code></pre>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/alternatives/#2-rootless-docker","title":"2. Rootless Docker","text":"<p>Benefits: Docker daemon runs as non-root user, reduced attack surface, container escape has limited impact</p> <p>Limitations: Some features unavailable (overlay networks, cgroup v1), performance overhead</p> Bash<pre><code>curl -fsSL https://get.docker.com/rootless | sh\nexport DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock\n</code></pre>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/alternatives/#3-read-only-operations-only","title":"3. Read-Only Operations Only","text":"<p>Use Case: Monitoring dashboards, metrics collection</p> <p>Limitation: Cannot stop/start containers or create/delete resources</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/best-practices/","title":"Best practices","text":"<ul> <li>docker</li> <li>security</li> <li>best-practices description: Docker socket security best practices and hardening guidelines \u2014\\n# Docker Socket Best Practices</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/best-practices/#do","title":"\u2705 DO","text":"<p>1. Use Socket Proxies - Whitelist allowed API endpoints - Restrict dangerous operations - Audit all socket access - Tool: <code>tecnativa/docker-socket-proxy</code></p> <p>2. Enable Authentication - Set <code>AUTH_ENABLED=true</code> in production - Use strong JWT secrets (32+ characters) - Rotate secrets regularly - Implement refresh token rotation</p> <p>3. Network Segmentation - Isolate API container in separate network - Use internal DNS for service discovery - Limit external exposure</p> <p>4. Audit Logging - Log all Docker API calls - Monitor for suspicious activity - Alert on privileged container creation - Retain logs for forensics</p> <p>5. Regular Security Scans - Scan containers with Trivy/Grype - Update dependencies weekly - Patch vulnerabilities promptly - Use Dependabot for automation</p> <p>6. Runtime Security - Use Falco or Sysdig for runtime monitoring - Detect anomalous container behavior - Alert on privilege escalation attempts</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/best-practices/#dont","title":"\u274c DON\u2019T","text":"<p>1. Never mount socket read-write </p>YAML<pre><code># DANGEROUS\nvolumes:\n  - /var/run/docker.sock:/var/run/docker.sock:rw\n</code></pre><p></p> <p>2. Don\u2019t disable authentication in production </p>Bash<pre><code>AUTH_ENABLED=false  # INSECURE\n</code></pre><p></p> <p>3. Don\u2019t expose API publicly without WAF</p> <p>4. Don\u2019t ignore security updates</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/checklist/","title":"Checklist","text":"<ul> <li>docker</li> <li>security description: Docker socket security checklist for all environments \u2014\\n# Security Checklist</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/checklist/#development-environment","title":"Development Environment","text":"<ul> <li> Socket mounted read-only (<code>:ro</code>)</li> <li> Input validation implemented</li> <li> Error messages sanitized</li> <li> Rate limiting configured</li> <li> Authentication available (can be disabled)</li> <li> Security scanning in pre-commit hooks</li> <li> Dependencies updated regularly</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/checklist/#staging-environment","title":"Staging Environment","text":"<ul> <li> Socket proxy implemented</li> <li> Authentication enabled</li> <li> Rate limiting enforced</li> <li> HTTPS/TLS configured</li> <li> Network segmentation in place</li> <li> Audit logging enabled</li> <li> Security scans automated (Trivy, npm audit)</li> <li> Secrets stored in vault (not environment)</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/checklist/#production-environment","title":"Production Environment","text":"<ul> <li> Socket proxy with whitelisted endpoints</li> <li> Authentication enforced (JWT with strong secret)</li> <li> Rate limiting (aggressive limits)</li> <li> HTTPS with HSTS headers</li> <li> WAF protecting API (Cloudflare, AWS WAF)</li> <li> IP whitelisting for API access</li> <li> Network segmentation (internal network only)</li> <li> Audit logging to external system (Splunk, ELK)</li> <li> Runtime security monitoring (Falco, Sysdig)</li> <li> Incident response plan documented</li> <li> Regular security audits scheduled</li> <li> Disaster recovery tested</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/checklist/#references","title":"References","text":"<ul> <li>Docker Security Best Practices</li> <li>CIS Docker Benchmark</li> <li>OWASP Docker Security Cheat Sheet</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/monitoring/","title":"Monitoring","text":"<ul> <li>docker</li> <li>security</li> <li>monitoring description: Docker socket security monitoring and incident response \u2014\\n# Monitoring &amp; Incident Response</li> </ul>","tags":["documentation","security","docker","monitoring"]},{"location":"security/docker-socket/monitoring/#monitoring-tools","title":"Monitoring Tools","text":"<p>1. Falco - Runtime security monitoring for anomalous container behavior 2. Sysdig - Container security platform with network traffic analysis 3. Docker Bench Security - CIS Docker Benchmark checks 4. Prometheus + Grafana - API metrics and custom alerts</p>","tags":["documentation","security","docker","monitoring"]},{"location":"security/docker-socket/monitoring/#key-indicators-of-compromise","title":"Key Indicators of Compromise","text":"<ol> <li>Privileged container creation (<code>--privileged</code> flag in logs)</li> <li>Unusual container mount points (<code>-v /:/host</code> patterns)</li> <li>High volume API calls (rate limit exceeded alerts)</li> <li>Failed authentication attempts (auth log spikes)</li> </ol>","tags":["documentation","security","docker","monitoring"]},{"location":"security/docker-socket/monitoring/#incident-response","title":"Incident Response","text":"<p>Immediate Actions:</p> <ol> <li>Isolate affected container (network disconnect)</li> <li>Snapshot container state for forensics</li> <li>Review audit logs for timeline</li> <li>Check for persistence mechanisms</li> </ol> <p>Investigation:</p> <ul> <li>Analyze Docker API logs</li> <li>Review authentication logs</li> <li>Check for modified containers</li> <li>Inspect running processes</li> </ul> <p>Remediation:</p> <ul> <li>Stop compromised container</li> <li>Rebuild from known-good image</li> <li>Rotate all secrets (JWT, API keys)</li> <li>Patch vulnerability if identified</li> <li>Update security policies</li> </ul> <p>Prevention:</p> <ul> <li>Implement socket proxy if not present</li> <li>Tighten rate limits</li> <li>Enable additional monitoring</li> <li>Conduct security training</li> <li>Document lessons learned</li> </ul>","tags":["documentation","security","docker","monitoring"]},{"location":"security/docker-socket/overview/","title":"Overview","text":"<ul> <li>docker</li> <li>security</li> <li>overview description: Docker socket security guide overview and risk assessment \u2014\\n# Docker Socket Security Overview</li> </ul> <p>The Docker socket (<code>/var/run/docker.sock</code>) provides complete control over the Docker daemon. Mounting in containers grants powerful capabilities but introduces significant security risks.</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/overview/#security-risks","title":"Security Risks","text":"<p>High-Risk Scenarios:</p> <ol> <li>Container Escape - Privileged containers can break containment \u2192 full host compromise</li> <li>Arbitrary Code Execution - Execute commands on host via Docker API</li> <li>Data Exfiltration - Read volumes, secrets, environment variables from all containers</li> <li>Denial of Service - Stop/remove critical containers, consume host resources</li> </ol>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/overview/#current-implementation","title":"Current Implementation","text":"<p>API Server: <code>api/server.js</code> mounts socket read-only</p> YAML<pre><code>services:\n  api:\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n</code></pre> <p>Security Controls:</p> <ul> <li>Read-only mount (<code>:ro</code> flag)</li> <li>JWT authentication (optional, <code>AUTH_ENABLED</code>)</li> <li>Rate limiting (100 req/15min general, 10 req/15min stats)</li> <li>Input validation (container ID format)</li> </ul> <p>Limitation: Read-only mount does NOT restrict Docker API write operations.</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/overview/#recommended-approach","title":"Recommended Approach","text":"<p>Use socket proxy (<code>tecnativa/docker-socket-proxy</code>) to whitelist specific endpoints and deny dangerous operations.</p> <p>See subdocs for details on threat models, best practices, alternatives, and monitoring.</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/socket-proxy/","title":"Socket proxy","text":"<ul> <li>docker</li> <li>security</li> <li>reference description: Docker socket proxy implementation guide \u2014\\n# Docker Socket Proxy Implementation</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/socket-proxy/#recommended-tecnativadocker-socket-proxy","title":"Recommended: tecnativa/docker-socket-proxy","text":"<p>Whitelists specific API endpoints and denies dangerous operations by default.</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/socket-proxy/#configuration","title":"Configuration","text":"YAML<pre><code># docker-compose.yml\nservices:\n  docker-socket-proxy:\n    image: tecnativa/docker-socket-proxy:latest\n    environment:\n      CONTAINERS: 1  # Allow container listing\n      IMAGES: 1      # Allow image listing\n      INFO: 1        # Allow system info\n      VOLUMES: 0     # Deny volume operations\n      NETWORKS: 0    # Deny network operations\n      BUILD: 0       # Deny image building\n      COMMIT: 0      # Deny container commits\n      EXEC: 0        # Deny exec operations\n      POST: 0        # Deny all POST operations\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    networks:\n      - docker-proxy\n\n  api:\n    environment:\n      DOCKER_HOST: tcp://docker-socket-proxy:2375\n    depends_on:\n      - docker-socket-proxy\n    networks:\n      - docker-proxy\n\nnetworks:\n  docker-proxy:\n    internal: true\n</code></pre>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/socket-proxy/#security-benefits","title":"Security Benefits","text":"<ul> <li>API cannot perform dangerous operations</li> <li>Socket access audited and restricted</li> <li>Clear security boundary</li> <li>Defense in depth</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/socket-proxy/#alternative-docker-api-over-tls","title":"Alternative: Docker API over TLS","text":"<p>Mutual TLS authentication without socket mounting. See <code>alternatives.md</code> for full setup.</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/threat-model/","title":"Threat model","text":"<ul> <li>docker</li> <li>security description: Docker socket threat model and attack vector analysis \u2014\\n# Docker Socket Threat Model</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/threat-model/#attack-vectors","title":"Attack Vectors","text":"","tags":["documentation","security","docker"]},{"location":"security/docker-socket/threat-model/#1-compromised-api-container","title":"1. Compromised API Container","text":"<p>Scenario: Attacker gains code execution in API container</p> <p>Capabilities: - Read all container configurations and secrets - Stop/start any container - Create new privileged containers - Mount host filesystem - Execute commands on host</p> <p>Impact: Complete host compromise</p> <p>Mitigation: Socket proxy, network segmentation, runtime security</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/threat-model/#2-api-vulnerability-exploitation","title":"2. API Vulnerability Exploitation","text":"<p>Scenario: Attacker exploits vulnerability in Express.js or dependencies</p> <p>Capabilities: - Bypass authentication/rate limiting - Direct Docker API access - Container manipulation</p> <p>Impact: Service disruption, data breach</p> <p>Mitigation: Security scanning, dependency updates, WAF</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/threat-model/#3-insider-threat","title":"3. Insider Threat","text":"<p>Scenario: Malicious developer with API access</p> <p>Capabilities: - Same as compromised container - Can modify codebase to create backdoors</p> <p>Impact: Long-term persistent access</p> <p>Mitigation: Code review, audit logging, least privilege</p>","tags":["documentation","security","docker"]},{"location":"security/docker-socket/threat-model/#key-indicators-of-compromise","title":"Key Indicators of Compromise","text":"<ul> <li>Privileged container creation (<code>--privileged</code> flag)</li> <li>Unusual container mount points (<code>-v /:/host</code>)</li> <li>High volume API calls (rate limit exceeded)</li> <li>Failed authentication attempts</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/","title":"Authentication","text":"<ul> <li>security</li> <li>authentication</li> <li>api description: API authentication and authorization policies \u2014\\n# Authentication &amp; Authorization</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/#jwt-authentication","title":"JWT Authentication","text":"<p>Production: <code>AUTH_ENABLED=true</code> (required) Development: <code>AUTH_ENABLED=false</code> (optional)</p> <p>Token Configuration: </p>Bash<pre><code>JWT_SECRET=$(openssl rand -hex 32)  # 64 characters\nJWT_EXPIRES_IN=8h\nJWT_REFRESH_EXPIRES_IN=7d\n</code></pre><p></p>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/#user-roles","title":"User Roles","text":"<ul> <li>Admin - Full access to all endpoints</li> <li>User - Read-only access to monitoring data</li> <li>Service - Limited access for service-to-service communication</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/#protected-endpoints","title":"Protected Endpoints","text":"<p>All <code>/api/*</code> endpoints require authentication when <code>AUTH_ENABLED=true</code>:</p> <ul> <li><code>GET /api/containers</code> - List containers</li> <li><code>GET /api/containers/:id</code> - Container details</li> <li><code>GET /api/containers/:id/stats</code> - Container statistics</li> <li><code>GET /api/health</code> - Health check (public)</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/#api-keys","title":"API Keys","text":"<p>For service-to-service communication, use API keys in headers:</p> HTTP<pre><code>Authorization: Bearer &lt;JWT_TOKEN&gt;\nX-API-Key: &lt;SERVICE_API_KEY&gt;\n</code></pre>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/#session-management","title":"Session Management","text":"<ul> <li>Access tokens expire after 8 hours</li> <li>Refresh tokens expire after 7 days</li> <li>Implement token rotation on refresh</li> <li>Blacklist tokens on logout</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/authentication/#password-requirements","title":"Password Requirements","text":"<ul> <li>Minimum 12 characters</li> <li>Mix of uppercase, lowercase, numbers, symbols</li> <li>No common passwords</li> <li>Password hashing with bcrypt (10 rounds)</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/compliance/","title":"Compliance","text":"<ul> <li>security description: Security compliance and auditing procedures \u2014\\n# Security Compliance</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/compliance/#compliance-standards","title":"Compliance Standards","text":"<p>OWASP Top 10 - Web application security risks mitigation</p> <p>CIS Docker Benchmark - Docker security configuration guidelines</p> <p>GDPR - Data protection and privacy (if applicable)</p>","tags":["documentation","security","docker"]},{"location":"security/policies/compliance/#regular-audits","title":"Regular Audits","text":"<p>Weekly: - Dependency vulnerability scans (Dependabot) - Image security scans (Trivy/Grype) - Log review for suspicious activity</p> <p>Monthly: - Access control review - Secret rotation - Security policy updates</p> <p>Quarterly: - Penetration testing - Security training - Incident response drill</p>","tags":["documentation","security","docker"]},{"location":"security/policies/compliance/#audit-logging","title":"Audit Logging","text":"YAML<pre><code># Enable audit logging\nservices:\n  api:\n    environment:\n      AUDIT_LOG_ENABLED: \"true\"\n      AUDIT_LOG_LEVEL: \"info\"\n    volumes:\n      - ./logs/audit:/var/log/audit\n</code></pre> <p>Log Events: - Authentication attempts (success/failure) - API endpoint access - Docker socket operations - Configuration changes - Privilege escalations</p>","tags":["documentation","security","docker"]},{"location":"security/policies/compliance/#security-monitoring","title":"Security Monitoring","text":"<ul> <li>Prometheus - Metrics collection</li> <li>Grafana - Security dashboards</li> <li>Falco - Runtime security monitoring</li> <li>Elasticsearch - Log aggregation and analysis</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/compliance/#incident-response","title":"Incident Response","text":"<ol> <li>Detect - Automated alerts trigger investigation</li> <li>Contain - Isolate affected systems</li> <li>Eradicate - Remove threat, patch vulnerabilities</li> <li>Recover - Restore from known-good backups</li> <li>Lessons Learned - Document and improve</li> </ol>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/","title":"Docker","text":"<ul> <li>security</li> <li>docker description: Docker container security policies and best practices \u2014\\n# Docker Security</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/#container-isolation","title":"Container Isolation","text":"<ul> <li>User namespaces - Run containers as non-root</li> <li>Read-only filesystem - Prevent unauthorized writes</li> <li>No privileged containers - Never use <code>--privileged</code> flag</li> <li>Resource limits - Set CPU/memory limits</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/#image-security","title":"Image Security","text":"YAML<pre><code>services:\n  api:\n    image: api:latest\n    security_opt:\n      - no-new-privileges:true\n    read_only: true\n    tmpfs:\n      - /tmp\n    deploy:\n      resources:\n        limits:\n          cpus: '1.0'\n          memory: 512M\n</code></pre>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/#docker-socket-access","title":"Docker Socket Access","text":"<ul> <li>Mount as read-only: <code>/var/run/docker.sock:/var/run/docker.sock:ro</code></li> <li>Use socket proxy (<code>tecnativa/docker-socket-proxy</code>)</li> <li>Whitelist allowed API endpoints</li> <li>Monitor socket access in logs</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/#network-security","title":"Network Security","text":"<ul> <li>Internal networks for service communication</li> <li>Traefik reverse proxy for external access</li> <li>No direct container port exposure</li> <li>TLS for all external communication</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/#secrets-management","title":"Secrets Management","text":"<ul> <li>Use Docker secrets (Swarm) or environment variables</li> <li>Never hardcode secrets in Dockerfiles</li> <li>Rotate secrets regularly</li> <li>Use <code>.env</code> file excluded from git</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/docker/#image-scanning","title":"Image Scanning","text":"Bash<pre><code># Scan with Trivy\ntrivy image api:latest\n\n# Scan with Grype\ngrype api:latest\n</code></pre> <p>Run scans in CI/CD pipeline before deployment.</p>","tags":["documentation","security","docker"]},{"location":"security/policies/overview/","title":"Overview","text":"<ul> <li>security</li> <li>overview description: Project security policy and vulnerability reporting \u2014\\n# Security Policy Overview</li> </ul> <p>Security policies and vulnerability reporting procedures for Modern Data Platform.</p>","tags":["documentation","security","docker"]},{"location":"security/policies/overview/#supported-versions","title":"Supported Versions","text":"<p>Currently supported versions for security updates:</p> Version Supported 4.x \u2705 Yes 3.x \u26a0\ufe0f Critical fixes only &lt; 3.0 \u274c No","tags":["documentation","security","docker"]},{"location":"security/policies/overview/#reporting-vulnerabilities","title":"Reporting Vulnerabilities","text":"<p>DO NOT create public GitHub issues for security vulnerabilities.</p> <p>Email: security@your-domain.com (or repository maintainer)</p> <p>Include: - Description of vulnerability - Steps to reproduce - Potential impact - Suggested fix (if any)</p>","tags":["documentation","security","docker"]},{"location":"security/policies/overview/#response-timeline","title":"Response Timeline","text":"<ul> <li>Acknowledgment: Within 48 hours</li> <li>Initial Assessment: Within 7 days</li> <li>Fix &amp; Disclosure: Within 30 days (severity dependent)</li> </ul>","tags":["documentation","security","docker"]},{"location":"security/policies/overview/#security-features","title":"Security Features","text":"<ul> <li>JWT authentication for API</li> <li>Docker socket access controls</li> <li>HTTPS with Let\u2019s Encrypt</li> <li>Secret scanning in CI/CD</li> <li>Dependabot security updates</li> <li>Rate limiting and CORS</li> </ul> <p>See <code>policies/</code> subdocs for detailed security implementation guides.</p>","tags":["documentation","security","docker"]},{"location":"setup/guides/docker-setup/","title":"Docker setup","text":"<ul> <li>setup</li> <li>docker</li> <li>docker-compose description: Docker setup and service deployment \u2014\\n# Docker Setup</li> </ul>","tags":["documentation","setup","installation","docker"]},{"location":"setup/guides/docker-setup/#build-images","title":"Build Images","text":"Bash<pre><code># Build all services\ndocker-compose build\n\n# Build specific service\ndocker-compose build api nginx\n</code></pre>","tags":["documentation","setup","installation","docker"]},{"location":"setup/guides/docker-setup/#start-services","title":"Start Services","text":"Bash<pre><code># Start all services (detached)\ndocker-compose up -d\n\n# Start specific services\ndocker-compose up -d postgres redis\n\n# View logs\ndocker-compose logs -f\n\n# Follow specific service logs\ndocker-compose logs -f api\n</code></pre>","tags":["documentation","setup","installation","docker"]},{"location":"setup/guides/docker-setup/#verify-deployment","title":"Verify Deployment","text":"Bash<pre><code># Check service status\ndocker-compose ps\n\n# Check service health\ndocker-compose exec api curl http://localhost:3000/health\n\n# Access services\n# - Dashboard: http://localhost\n# - API: http://localhost:3000\n# - Grafana: http://localhost:3001\n# - Prometheus: http://localhost:9090\n</code></pre>","tags":["documentation","setup","installation","docker"]},{"location":"setup/guides/docker-setup/#manage-services","title":"Manage Services","text":"Bash<pre><code># Stop all services\ndocker-compose stop\n\n# Stop specific service\ndocker-compose stop api\n\n# Restart service\ndocker-compose restart api\n\n# Remove all containers\ndocker-compose down\n\n# Remove with volumes\ndocker-compose down -v\n</code></pre>","tags":["documentation","setup","installation","docker"]},{"location":"setup/guides/docker-setup/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Port conflicts: Check if ports already in use</li> <li>Build failures: Clear cache with <code>docker-compose build --no-cache</code></li> <li>Network issues: Restart Docker daemon</li> </ul>","tags":["documentation","setup","installation","docker"]},{"location":"setup/guides/environment/","title":"Environment","text":"<ul> <li>setup</li> <li>environment</li> <li>configuration description: Environment configuration and .env file setup \u2014\\n# Environment Configuration</li> </ul>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#configuration-approach","title":"Configuration Approach","text":"<p>Local Development: Single <code>.env</code> file (created from template) CI/CD Pipeline: GitHub repository secrets (already configured) Naming Convention: All service passwords use <code>DOCKER_</code> prefix</p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#verify-github-secrets-cicd","title":"Verify GitHub Secrets (CI/CD)","text":"<p>Check configured secrets for CI/CD pipelines: </p>Bash<pre><code>gh secret list --repo DeanLuus22021994/docker_dotfiles\n</code></pre><p></p> <p>Current secrets configured: - \u2713 <code>DOCKER_POSTGRES_PASSWORD</code> - \u2713 <code>DOCKER_MARIADB_ROOT_PASSWORD</code> - \u2713 <code>DOCKER_MARIADB_PASSWORD</code> - \u2713 <code>DOCKER_REDIS_PASSWORD</code> - \u2713 <code>DOCKER_MINIO_ROOT_USER</code> - \u2713 <code>DOCKER_MINIO_ROOT_PASSWORD</code> - \u2713 <code>DOCKER_GRAFANA_ADMIN_PASSWORD</code> - \u2713 <code>DOCKER_JUPYTER_TOKEN</code> - \u2713 <code>DOCKER_PGADMIN_PASSWORD</code> - \u2713 <code>GH_PAT</code> - \u2713 <code>DOCKER_ACCESS_TOKEN</code> - \u2713 <code>CODECOV_TOKEN</code></p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#create-local-env-file","title":"Create Local .env File","text":"<p>For local development, copy the template: </p>Bash<pre><code>cp .env.example .env\nnano .env  # Or use your preferred editor\n</code></pre><p></p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#required-variables","title":"Required Variables","text":"<p>Domain &amp; HTTPS: </p>Bash<pre><code>DOMAIN=localhost  # Or your domain\nACME_EMAIL=admin@localhost\n</code></pre><p></p> <p>Authentication (Development): </p>Bash<pre><code>AUTH_ENABLED=false  # Disable for dev\nJWT_SECRET=development_secret_change_in_production\n</code></pre><p></p> <p>Database Passwords: </p>Bash<pre><code>DOCKER_POSTGRES_PASSWORD=postgres_dev\nDOCKER_MARIADB_ROOT_PASSWORD=mariadb_root_dev\nDOCKER_MARIADB_PASSWORD=mariadb_dev\nDOCKER_REDIS_PASSWORD=redis_dev\nDOCKER_MINIO_ROOT_PASSWORD=minio_dev\nDOCKER_GRAFANA_ADMIN_PASSWORD=grafana_dev\nDOCKER_JUPYTER_TOKEN=jupyter_dev\nDOCKER_PGADMIN_PASSWORD=pgadmin_dev\n</code></pre><p></p> <p>GitHub Integration (Optional): </p>Bash<pre><code>GITHUB_OWNER=your-username\nGH_PAT=ghp_your_personal_access_token\n</code></pre><p></p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#validation","title":"Validation","text":"Bash<pre><code># Validate environment variables\npython scripts/python/validation/validate_env.py\n</code></pre>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#security-notes","title":"Security Notes","text":"<ul> <li>Never commit <code>.env</code> to version control (gitignored by <code>.env.*</code> pattern)</li> <li>Single source: Use <code>.env.example</code> as the only template (no separate dev/prod files)</li> <li>CI/CD secrets: Managed via GitHub repository secrets (use <code>gh secret</code> commands)</li> <li>Strong passwords: Use minimum 16 characters in production</li> <li>Generate JWT secrets: <code>openssl rand -hex 32</code> or <code>node -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\"</code></li> <li>Rotate regularly: Change credentials periodically, especially after team changes</li> </ul>","tags":["documentation","setup","installation"]},{"location":"setup/guides/environment/#environment-variable-management","title":"Environment Variable Management","text":"<p>Add new secret to GitHub: </p>Bash<pre><code>gh secret set SECRET_NAME --repo DeanLuus22021994/docker_dotfiles\n</code></pre><p></p> <p>Update existing secret: </p>Bash<pre><code>gh secret set SECRET_NAME --repo DeanLuus22021994/docker_dotfiles\n</code></pre><p></p> <p>Remove secret: </p>Bash<pre><code>gh secret remove SECRET_NAME --repo DeanLuus22021994/docker_dotfiles\n</code></pre><p></p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/overview/","title":"Overview","text":"<ul> <li>setup</li> <li>installation</li> <li>overview</li> <li>quickstart description: Project setup and installation overview \u2014\\n# Setup Overview</li> </ul> <p>Complete setup guide for Modern Data Platform local development environment.</p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/overview/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker 24.0+ with Docker Compose v2</li> <li>Python 3.14+ (via UV package manager)</li> <li>Node.js 22+ LTS</li> <li>Git 2.40+</li> <li>8GB RAM minimum, 16GB recommended</li> <li>20GB free disk space</li> </ul>","tags":["documentation","setup","installation"]},{"location":"setup/guides/overview/#quick-start-5-minutes","title":"Quick Start (5 minutes)","text":"Bash<pre><code># 1. Clone repository\ngit clone https://github.com/DeanLuus22021994/docker_dotfiles.git\ncd docker_dotfiles\n\n# 2. Copy environment file\ncp .env.example .env\n\n# 3. Start services\ndocker-compose up -d\n\n# 4. Verify services\ndocker-compose ps\n</code></pre>","tags":["documentation","setup","installation"]},{"location":"setup/guides/overview/#setup-steps","title":"Setup Steps","text":"<ol> <li>Prerequisites - Install required software</li> <li>Clone Repository - Get project code</li> <li>Environment Configuration - Set up .env file</li> <li>Python Setup - Configure Python environment</li> <li>Docker Setup - Start container stack</li> <li>Verification - Confirm all services running</li> </ol> <p>See <code>guides/</code> subdocs for detailed step-by-step instructions.</p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/prerequisites/","title":"Prerequisites","text":"<ul> <li>setup</li> <li>installation description: Software prerequisites and system requirements \u2014\\n# Prerequisites</li> </ul>","tags":["documentation","setup","installation"]},{"location":"setup/guides/prerequisites/#required-software","title":"Required Software","text":"<p>Docker 24.0+ </p>Bash<pre><code># Verify installation\ndocker --version\ndocker-compose --version\n</code></pre><p></p> <p>Python 3.14+ </p>Bash<pre><code># Install via UV\ncurl -LsSf https://astral.sh/uv/install.sh | sh\nuv python install 3.14\n</code></pre><p></p> <p>Node.js 22+ LTS </p>Bash<pre><code># Verify installation\nnode --version\nnpm --version\n</code></pre><p></p> <p>Git 2.40+ </p>Bash<pre><code>git --version\n</code></pre><p></p>","tags":["documentation","setup","installation"]},{"location":"setup/guides/prerequisites/#system-requirements","title":"System Requirements","text":"<ul> <li>OS: Windows 10/11, Ubuntu 22.04+, macOS 12+</li> <li>RAM: 8GB minimum, 16GB recommended</li> <li>Storage: 20GB free disk space (50GB for production)</li> <li>CPU: 4 cores minimum, 8 cores recommended</li> <li>Network: Internet connection for image downloads</li> </ul>","tags":["documentation","setup","installation"]},{"location":"setup/guides/prerequisites/#optional-tools","title":"Optional Tools","text":"<ul> <li>GitHub CLI (<code>gh</code>) - For repository management</li> <li>Make - For Makefile commands</li> <li>VS Code - Recommended IDE with extensions</li> </ul>","tags":["documentation","setup","installation"]},{"location":"setup/guides/prerequisites/#firewall-configuration","title":"Firewall Configuration","text":"<p>Open ports for local development: - 80/443 - HTTP/HTTPS (Traefik) - 3000 - API server - 5432 - PostgreSQL - 3306 - MariaDB - 6379 - Redis - 9000 - MinIO - 3001 - Grafana - 9090 - Prometheus</p>","tags":["documentation","setup","installation"]},{"location":"setup/python/python-314-install/","title":"Python 314 install","text":"<ul> <li>python</li> <li>installation</li> <li>troubleshooting description: Python 3.14 installation issues and fixes \u2014\\n# Python 3.14 Installation Issues</li> </ul>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/python-314-install/#windows-installation","title":"Windows Installation","text":"<p>Issue: Python 3.14 not available in official installer</p> <p>Solution: Use UV to install Python 3.14</p> PowerShell<pre><code># Install UV first\nirm https://astral.sh/uv/install.ps1 | iex\n\n# Install Python 3.14\nuv python install 3.14\n\n# Verify\nuv python list\npython --version\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/python-314-install/#linux-installation","title":"Linux Installation","text":"<p>Issue: Python 3.14 not in apt/yum repositories</p> <p>Solution: Build from source or use UV</p> Bash<pre><code># Option 1: UV (recommended)\nuv python install 3.14\n\n# Option 2: Build from source\nwget https://www.python.org/ftp/python/3.14.0/Python-3.14.0.tgz\ntar -xf Python-3.14.0.tgz\ncd Python-3.14.0\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/python-314-install/#macos-installation","title":"macOS Installation","text":"<p>Issue: Homebrew doesn\u2019t have Python 3.14 yet</p> <p>Solution: Use UV or pyenv</p> Bash<pre><code># Option 1: UV\nuv python install 3.14\n\n# Option 2: pyenv\nbrew install pyenv\npyenv install 3.14.0\npyenv global 3.14.0\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/python-314-install/#common-errors","title":"Common Errors","text":"<p>SSL certificate errors: </p>Bash<pre><code>pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org package\n</code></pre><p></p> <p>Permission denied: </p>Bash<pre><code># Use virtual environment instead of system Python\nuv venv\nsource .venv/bin/activate\n</code></pre><p></p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>python</li> <li>troubleshooting</li> <li>setup description: Python setup troubleshooting guide overview \u2014\\n# Python Setup Troubleshooting</li> </ul> <p>Common Python 3.14 setup issues and solutions.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/troubleshooting/#common-issues","title":"Common Issues","text":"<p>1. Python 3.14 not found - Install via UV: <code>uv python install 3.14</code> - Verify: <code>python --version</code></p> <p>2. UV installation fails - Try alternative: <code>curl -LsSf https://astral.sh/uv/install.sh | sh</code> - Windows: Download from astral.sh/uv</p> <p>3. Package installation errors - Clear cache: <code>uv cache clean</code> - Reinstall: <code>uv pip install -e \".[dev]\" --reinstall</code></p> <p>4. Import errors - Check Python path: <code>python -c \"import sys; print(sys.path)\"</code> - Add parent directory to path in scripts</p> <p>5. Type checking failures - Update mypy: <code>uv pip install --upgrade mypy</code> - Use Python 3.14 type hints (PEP 585)</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/troubleshooting/#quick-fixes","title":"Quick Fixes","text":"Bash<pre><code># Reinstall Python environment\nrm -rf .venv\nuv venv\nuv pip install -e \".[dev]\"\n\n# Verify installation\npython --version\npytest --version\n</code></pre> <p>See subdocs for detailed troubleshooting steps and platform-specific issues.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/type-hints/","title":"Type hints","text":"<ul> <li>python</li> <li>development description: Python 3.14 type hints and PEP 585 built-in generics \u2014\\n# Python 3.14 Type Hints</li> </ul> <p>Modern type hints using PEP 585 built-in generics.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/type-hints/#old-vs-new-syntax","title":"Old vs New Syntax","text":"<p>Old (Python 3.8, deprecated): </p>Python<pre><code>from typing import List, Dict, Tuple, Optional\n\ndef process(items: List[str]) -&gt; Dict[str, int]:\n    result: Dict[str, int] = {}\n    optional: Optional[str] = None\n</code></pre><p></p> <p>New (Python 3.14, preferred): </p>Python<pre><code>def process(items: list[str]) -&gt; dict[str, int]:\n    result: dict[str, int] = {}\n    optional: str | None = None\n</code></pre><p></p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/type-hints/#built-in-generic-types","title":"Built-in Generic Types","text":"<ul> <li><code>list[T]</code> instead of <code>List[T]</code></li> <li><code>dict[K, V]</code> instead of <code>Dict[K, V]</code></li> <li><code>tuple[T, ...]</code> instead of <code>Tuple[T, ...]</code></li> <li><code>set[T]</code> instead of <code>Set[T]</code></li> <li><code>frozenset[T]</code> instead of <code>FrozenSet[T]</code></li> <li><code>type[T]</code> instead of <code>Type[T]</code></li> </ul>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/type-hints/#union-types","title":"Union Types","text":"Python<pre><code># Old\nfrom typing import Union\nvalue: Union[int, str] = 42\n\n# New\nvalue: int | str = 42\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/type-hints/#optional-types","title":"Optional Types","text":"Python<pre><code># Old\nfrom typing import Optional\nname: Optional[str] = None\n\n# New\nname: str | None = None\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/type-hints/#migration","title":"Migration","text":"<p>Run automated conversion: </p>Bash<pre><code>pyupgrade --py314-plus **/*.py\n</code></pre><p></p> <p>Update imports: </p>Python<pre><code># Remove deprecated imports\n# from typing import List, Dict, Tuple, Optional\n\n# Keep for advanced types\nfrom typing import Protocol, TypedDict, Literal\n</code></pre><p></p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/uv-guide/","title":"Uv guide","text":"<ul> <li>python</li> <li>installation description: UV package manager installation and configuration \u2014\\n# UV Package Manager</li> </ul> <p>Modern Python package manager for fast, reliable dependency management.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/uv-guide/#installation","title":"Installation","text":"<p>Linux/macOS: </p>Bash<pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre><p></p> <p>Windows (PowerShell): </p>PowerShell<pre><code>irm https://astral.sh/uv/install.ps1 | iex\n</code></pre><p></p> <p>Via pip: </p>Bash<pre><code>pip install uv\n</code></pre><p></p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/uv-guide/#setup-project","title":"Setup Project","text":"Bash<pre><code># Create virtual environment\nuv venv\n\n# Activate (Linux/macOS)\nsource .venv/bin/activate\n\n# Activate (Windows)\n.venv\\Scripts\\activate\n\n# Install dependencies\nuv pip install -e \".[dev]\"\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/uv-guide/#common-commands","title":"Common Commands","text":"Bash<pre><code># Install packages\nuv pip install package-name\n\n# Upgrade package\nuv pip install --upgrade package-name\n\n# List installed packages\nuv pip list\n\n# Show package info\nuv pip show package-name\n\n# Clear cache\nuv cache clean\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/uv-guide/#benefits","title":"Benefits","text":"<ul> <li>Fast - 10-100x faster than pip</li> <li>Reliable - Consistent resolution</li> <li>Compatible - Drop-in pip replacement</li> <li>Modern - Built in Rust</li> </ul>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/uv-guide/#troubleshooting","title":"Troubleshooting","text":"<p>Issue: <code>uv: command not found</code> - Add to PATH: <code>export PATH=\"$HOME/.cargo/bin:$PATH\"</code> - Restart shell</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/alternatives/","title":"Alternatives","text":"<ul> <li>python</li> <li>installation</li> <li>reference description: Alternative Python installation methods \u2014\\n# Installation Alternatives</li> </ul> <p>Four alternative solutions to Python 3.14.0 installation issues.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/alternatives/#option-1-python-313-recommended","title":"Option 1: Python 3.13 \u2b50\u2b50\u2b50\u2b50\u2b50 (RECOMMENDED)","text":"<p>Stable, tested, easy installation:</p> PowerShell<pre><code>.\\scripts\\powershell\\cleanup\\remove-broken-python.ps1\nwinget install --id Python.Python.3.13 --exact\npython --version  # Verify\n</code></pre> <p>Impact: Update 37 repository references (3.14.0 \u2192 3.13.1)</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/alternatives/#option-2-miniconda","title":"Option 2: Miniconda \u2b50\u2b50\u2b50\u2b50","text":"<p>Already installed at <code>C:\\Users\\deanl.MSI\\miniconda3</code>:</p> PowerShell<pre><code>conda update conda -y\nconda create -n docker_project python=3.13 -y\nconda activate docker_project\npip install uv black ruff mypy yamllint pytest\n</code></pre> <p>Pros: Isolated, already installed Cons: Conda overhead</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/alternatives/#option-3-portable-python","title":"Option 3: Portable Python \u2b50\u2b50\u2b50","text":"<p>No admin required, no Windows Installer:</p> PowerShell<pre><code># Download embedded version\n$url = \"https://www.python.org/ftp/python/3.14.0/python-3.14.0-embed-amd64.zip\"\nInvoke-WebRequest -Uri $url -OutFile \"$env:TEMP\\python-3.14-embed.zip\"\n\n# Extract\nExpand-Archive \"$env:TEMP\\python-3.14-embed.zip\" -DestinationPath \"C:\\Python314-Portable\"\n\n# Install pip\nInvoke-WebRequest -Uri \"https://bootstrap.pypa.io/get-pip.py\" -OutFile \"C:\\Python314-Portable\\get-pip.py\"\n&amp; \"C:\\Python314-Portable\\python.exe\" \"C:\\Python314-Portable\\get-pip.py\"\n</code></pre> <p>Pros: No installer issues Cons: Manual pip setup</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/alternatives/#option-4-full-repair-last-resort","title":"Option 4: Full Repair \u2b50\u2b50 (LAST RESORT)","text":"<p>Complete Windows Installer cleanup (requires restart):</p> PowerShell<pre><code># 1. Uninstall all Python versions\nGet-WmiObject -Class Win32_Product | Where-Object { $_.Name -like \"*Python*\" } | ForEach-Object { $_.Uninstall() }\n\n# 2. Clean installer cache\nStop-Service msiserver\nRemove-Item \"$env:WINDIR\\Installer\\*.msi\" -Force -ErrorAction SilentlyContinue\nStart-Service msiserver\n\n# 3. Clean registry\nRemove-Item \"HKCU:\\Software\\Python\" -Recurse -Force -ErrorAction SilentlyContinue\n\n# 4. Restart &amp; install\nRestart-Computer\nwinget install --id Python.Python.3.14 --exact\n</code></pre> <p>Warning: Risky, may affect other applications</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/issue-overview/","title":"Issue overview","text":"<ul> <li>python</li> <li>installation</li> <li>setup</li> <li>troubleshooting description: Python 3.14.0 Windows installation issue summary \u2014\\n# Python 3.14.0 Installation Issue</li> </ul> <p>Windows Installer error 1603 preventing Python 3.14.0 installation.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/issue-overview/#problem-summary","title":"Problem Summary","text":"<ul> <li>Error: Windows Installer exit code 1603</li> <li>Platform: Windows 10/11</li> <li>Impact: Cannot install Python 3.14.0 via any method</li> </ul>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/issue-overview/#root-causes","title":"Root Causes","text":"<ol> <li> <p>Registry Corruption    - 58 Python-related MSI components found    - Partial installations from Python 3.8-3.13    - Conflicting registry entries</p> </li> <li> <p>Windows Installer Issues    - Component already registered with different version    - Installer cache corruption    - Python 3.14.0 registry entries present but executable missing</p> </li> </ol>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/issue-overview/#failed-attempts","title":"Failed Attempts","text":"<p>All installation methods failed with error 1603: - \u2717 winget install Python.Python.3.14 - \u2717 Python.org installer (/quiet, /passive modes) - \u2717 Chocolatey (choco install python314) - \u2717 Manual MSI extraction</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/issue-overview/#recommended-solution","title":"Recommended Solution","text":"<p>Use Python 3.13.1 instead (stable, widely supported):</p> PowerShell<pre><code># Clean existing installations\n.\\scripts\\powershell\\cleanup\\remove-broken-python.ps1 -Verbose\n\n# Install Python 3.13.1\nwinget install --id Python.Python.3.13 --exact\n\n# Verify\npython --version  # Should show 3.13.x\n</code></pre> <p>Then update repository references: 3.14.0 \u2192 3.13.1</p> <p>See subdocs for detailed solutions and alternatives.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/repository-migration/","title":"Repository migration","text":"<ul> <li>python</li> <li>migration description: Updating repository from Python 3.14 to 3.13 \u2014\\n# Repository Migration (3.14 \u2192 3.13)</li> </ul> <p>Update repository references from Python 3.14.0 to 3.13.1.</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/repository-migration/#files-to-update-37-references","title":"Files to Update (37 references)","text":"<p>CI/CD: - <code>.github/workflows/validate.yml</code> (3 references)</p> <p>Configuration: - <code>pyproject.toml</code> (2 references) - <code>.pre-commit-config.yaml</code> (1 reference) - <code>.config/cluster/cluster.config.yml</code> (1 reference)</p> <p>Containerization: - <code>dockerfile/devcontainer.Dockerfile</code> (6 references)</p> <p>Documentation: - <code>README.md</code> (7 references) - <code>AGENT.md</code> (4 references) - <code>docs/python-setup-troubleshooting.md</code> (6 references) - <code>TODO.md</code> (3 references) - Scripts documentation (various)</p>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/repository-migration/#search-command","title":"Search Command","text":"PowerShell<pre><code># Find all Python 3.14 references\nrg \"3\\.14\\.0|Python 3\\.14|python-3\\.14|py314|Python314\" --type-add 'config:*.{yml,yaml,toml,md,txt}' -t config\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/repository-migration/#update-process","title":"Update Process","text":"<ol> <li> <p>Search and Review </p>PowerShell<pre><code>rg \"3\\.14\" -l  # List files\nrg \"3\\.14\" -A 2 -B 2  # Show context\n</code></pre><p></p> </li> <li> <p>Manual Updates (recommended for accuracy):    - Version strings: <code>3.14.0</code> \u2192 <code>3.13.1</code>    - Docker tags: <code>python:3.14</code> \u2192 <code>python:3.13</code>    - Actions versions: <code>python-version: 3.14</code> \u2192 <code>python-version: 3.13</code></p> </li> <li> <p>Verify Changes </p>PowerShell<pre><code># Check no 3.14 references remain\nrg \"3\\.14\" --type-add 'config:*.{yml,yaml,toml,md}' -t config\n\n# Validate Python version\npython --version  # Should show 3.13.x\n</code></pre><p></p> </li> <li> <p>Test Repository </p>Bash<pre><code># Run validation\npython scripts/orchestrator.py validate env\npython scripts/orchestrator.py validate configs\n\n# Run tests\npytest\n\n# Build Docker images\ndocker-compose build\n</code></pre><p></p> </li> </ol>","tags":["documentation","setup","installation","python"]},{"location":"setup/python/installation/repository-migration/#commit-message","title":"Commit Message","text":"Text Only<pre><code>chore: migrate from Python 3.14.0 to 3.13.1\n\n- Update all references across 37 files\n- Modify CI/CD workflows, Dockerfiles, configs\n- Update documentation and scripts\n- Reason: Python 3.14.0 Windows Installer issues\n\nRefs: docs/setup/python/installation/issue-overview.md\n</code></pre>","tags":["documentation","setup","installation","python"]},{"location":"testing/framework/fixtures-mocking/","title":"Fixtures mocking","text":"<ul> <li>testing</li> <li>pytest</li> <li>mocking</li> <li>fixtures description: Using pytest fixtures and mocking strategies \u2014\\n# Fixtures and Mocking</li> </ul> <p>Pytest fixtures and unittest.mock best practices.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/fixtures-mocking/#fixtures","title":"Fixtures","text":"Python<pre><code>import pytest\n\n@pytest.fixture\ndef sample_data() -&gt; dict[str, str]:\n    \"\"\"Provide sample test data.\"\"\"\n    return {\"key\": \"value\"}\n\ndef test_with_fixture(sample_data: dict[str, str]) -&gt; None:\n    \"\"\"Test using fixture.\"\"\"\n    assert sample_data[\"key\"] == \"value\"\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/fixtures-mocking/#mocking-with-unittestmock","title":"Mocking with unittest.mock","text":"Python<pre><code>from unittest.mock import Mock, patch\n\n@patch('module.external_function')\ndef test_with_mock(mock_func: Mock) -&gt; None:\n    mock_func.return_value = \"mocked\"\n    # Test code here\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/fixtures-mocking/#mock-external-commands","title":"Mock External Commands","text":"Python<pre><code>@patch('subprocess.run')\ndef test_subprocess(mock_run: Mock) -&gt; None:\n    mock_run.return_value = Mock(\n        returncode=0,\n        stdout=\"output\"\n    )\n    # Test code that calls subprocess.run\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/fixtures-mocking/#mock-file-system","title":"Mock File System","text":"Python<pre><code>import tempfile\nfrom pathlib import Path\n\ndef test_file_operations() -&gt; None:\n    with tempfile.TemporaryDirectory() as tmpdir:\n        test_file = Path(tmpdir) / \"test.txt\"\n        test_file.write_text(\"content\")\n        # Test file operations\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/fixtures-mocking/#shared-fixtures","title":"Shared Fixtures","text":"<p>Defined in <code>conftest.py</code>: - <code>tmp_path</code>: Temporary directory - <code>monkeypatch</code>: Modify environment - <code>capsys</code>: Capture stdout/stderr - Custom fixtures for project needs</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/fixtures-mocking/#mocking-guidelines","title":"Mocking Guidelines","text":"<ul> <li>Mock external dependencies (files, network, subprocess)</li> <li>Use <code>patch</code> decorator for function-level mocks</li> <li>Return Mock objects with specific attributes</li> <li>Verify mock calls with <code>assert_called_with</code></li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/overview/","title":"Overview","text":"<ul> <li>testing</li> <li>pytest</li> <li>overview description: Test suite structure and organization \u2014\\n# Test Suite Overview</li> </ul> <p>Comprehensive pytest-based test suite for Python modules.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/overview/#directory-structure","title":"Directory Structure","text":"Text Only<pre><code>tests/\n\u251c\u2500\u2500 conftest.py              # Shared fixtures\n\u251c\u2500\u2500 fixtures/                # Test data\n\u2514\u2500\u2500 python/\n    \u251c\u2500\u2500 audit/              # Code quality tests\n    \u2502   \u251c\u2500\u2500 test_code_quality.py\n    \u2502   \u2514\u2500\u2500 test_dependencies.py\n    \u251c\u2500\u2500 utils/              # Utility tests\n    \u2502   \u251c\u2500\u2500 test_colors.py\n    \u2502   \u251c\u2500\u2500 test_file_utils.py\n    \u2502   \u2514\u2500\u2500 test_logging_utils.py\n    \u2514\u2500\u2500 validation/         # Config validation tests\n        \u251c\u2500\u2500 test_validate_env.py\n        \u2514\u2500\u2500 test_validate_configs.py\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/overview/#test-categories","title":"Test Categories","text":"<p>Unit Tests (<code>@pytest.mark.unit</code>): - Individual function/method isolation - Mocked dependencies - Fast execution (&lt;1s)</p> <p>Integration Tests (<code>@pytest.mark.integration</code>): - Component interaction testing - Real file system/subprocess - Longer execution allowed</p> <p>Slow Tests (<code>@pytest.mark.slow</code>): - Tests taking &gt;5 seconds - Skip in development: <code>pytest -m \"not slow\"</code></p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/overview/#coverage-goals","title":"Coverage Goals","text":"<ul> <li>Overall: &gt;80% (enforced)</li> <li>Utils: &gt;90%</li> <li>Validation: &gt;85%</li> <li>Audit: &gt;85%</li> </ul> <p>See subdocs for detailed testing guides.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/running-tests/","title":"Running tests","text":"<ul> <li>testing</li> <li>pytest</li> <li>commands description: Running tests with pytest \u2014\\n# Running Tests</li> </ul> <p>Execute pytest tests with various configurations and filters.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/running-tests/#basic-commands","title":"Basic Commands","text":"Bash<pre><code># Run all tests with coverage\npytest\n\n# Verbose output\npytest -v\n\n# Coverage report (HTML)\npytest --cov=scripts/python --cov-report=html\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/running-tests/#specific-test-execution","title":"Specific Test Execution","text":"Bash<pre><code># Run single module\npytest tests/python/utils/\n\n# Run single file\npytest tests/python/utils/test_colors.py\n\n# Run single class\npytest tests/python/utils/test_colors.py::TestColorize\n\n# Run single test\npytest tests/python/utils/test_colors.py::TestColorize::test_colorize_basic\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/running-tests/#filter-by-marker","title":"Filter by Marker","text":"Bash<pre><code># Unit tests only\npytest -m unit\n\n# Integration tests only\npytest -m integration\n\n# Skip slow tests\npytest -m \"not slow\"\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/running-tests/#coverage-reports","title":"Coverage Reports","text":"Bash<pre><code># Terminal with missing lines\npytest --cov=scripts/python --cov-report=term-missing\n\n# HTML report (open in browser)\npytest --cov=scripts/python --cov-report=html\nstart htmlcov/index.html  # Windows\n\n# XML report (for CI/CD)\npytest --cov=scripts/python --cov-report=xml\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/running-tests/#parallel-execution","title":"Parallel Execution","text":"Bash<pre><code># Run tests in parallel (requires pytest-xdist)\npytest -n auto\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>testing</li> <li>troubleshooting</li> <li>debugging description: Common testing issues and solutions \u2014\\n# Testing Troubleshooting</li> </ul> <p>Solutions for common pytest issues.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/#import-errors","title":"Import Errors","text":"<p>Issue: <code>Import \"python.module\" could not be resolved</code></p> <p>Solutions: 1. Run from project root directory 2. Check <code>conftest.py</code> adds scripts to path 3. Verify Python path: </p>Bash<pre><code>python -c \"import sys; print(sys.path)\"\n</code></pre><p></p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/#coverage-not-meeting-threshold","title":"Coverage Not Meeting Threshold","text":"<p>Issue: Tests fail due to &lt;80% coverage</p> <p>Solutions: </p>Bash<pre><code># See missing lines\npytest --cov=scripts/python --cov-report=term-missing\n\n# HTML report for details\npytest --cov=scripts/python --cov-report=html\nstart htmlcov/index.html  # Windows\n</code></pre><p></p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/#slow-test-suite","title":"Slow Test Suite","text":"<p>Issue: Tests take too long during development</p> <p>Solutions: </p>Bash<pre><code># Skip slow tests\npytest -m \"not slow\"\n\n# Run in parallel (requires pytest-xdist)\npytest -n auto\n\n# Run specific module only\npytest tests/python/utils/\n</code></pre><p></p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/#fixture-not-found","title":"Fixture Not Found","text":"<p>Issue: <code>fixture 'name' not found</code></p> <p>Solutions: 1. Check fixture is defined in <code>conftest.py</code> 2. Verify fixture scope matches test scope 3. Import fixture if defined in another module</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/#mock-not-working","title":"Mock Not Working","text":"<p>Issue: Mock not intercepting calls</p> <p>Solutions: 1. Patch the correct import path (where it\u2019s used, not where it\u2019s defined) 2. Use <code>@patch</code> decorator above function 3. Verify mock is applied before function call</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/troubleshooting/#test-isolation-issues","title":"Test Isolation Issues","text":"<p>Issue: Tests fail when run together but pass individually</p> <p>Solutions: 1. Use fixtures with proper scope (<code>function</code>, not <code>module</code>) 2. Clean up side effects in teardown 3. Avoid global state modifications 4. Use <code>monkeypatch</code> for environment variables</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/writing-tests/","title":"Writing tests","text":"<ul> <li>testing</li> <li>pytest</li> <li>best-practices description: Guidelines for writing effective pytest tests \u2014\\n# Writing Tests</li> </ul> <p>Best practices and conventions for pytest tests.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/writing-tests/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Test files: <code>test_&lt;module_name&gt;.py</code></li> <li>Test classes: <code>Test&lt;ClassName&gt;</code></li> <li>Test methods: <code>test_&lt;functionality&gt;_&lt;scenario&gt;</code></li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/writing-tests/#test-structure","title":"Test Structure","text":"Python<pre><code>\"\"\"Tests for example_module.\"\"\"\n\nimport pytest\nfrom python.module import function_to_test\n\nclass TestFunctionName:\n    \"\"\"Test function_to_test function.\"\"\"\n\n    def test_basic_functionality(self) -&gt; None:\n        \"\"\"Test basic use case.\"\"\"\n        result = function_to_test(\"input\")\n        assert result == \"expected\"\n\n    def test_edge_case(self) -&gt; None:\n        \"\"\"Test edge case handling.\"\"\"\n        with pytest.raises(ValueError):\n            function_to_test(None)\n\n    @pytest.mark.parametrize(\"input,expected\", [\n        (\"a\", \"result_a\"),\n        (\"b\", \"result_b\"),\n    ])\n    def test_multiple_inputs(self, input: str, expected: str) -&gt; None:\n        \"\"\"Test multiple inputs.\"\"\"\n        assert function_to_test(input) == expected\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/framework/writing-tests/#best-practices","title":"Best Practices","text":"<ol> <li>One assertion per test (when possible)</li> <li>Clear test names describing what is tested</li> <li>Arrange-Act-Assert pattern</li> <li>Mock external dependencies</li> <li>Use parametrize for multiple inputs</li> <li>Test edge cases (None, empty, large values)</li> <li>Test error handling</li> <li>Keep tests fast (&lt;100ms per unit test)</li> <li>Independent tests (no shared state)</li> <li>Meaningful assertions</li> </ol>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/","title":"Ci cd","text":"<ul> <li>testing</li> <li>ci-cd</li> <li>github-actions</li> <li>automation description: CI/CD pipeline configuration for automated testing \u2014\\n# CI/CD Pipeline</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#github-actions-workflow","title":"GitHub Actions Workflow","text":"<p>File: <code>.github/workflows/test.yml</code></p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#test-job-matrix-strategy","title":"Test Job (Matrix Strategy)","text":"<p>Platforms: Ubuntu, Windows, macOS Python: 3.14</p> <p>Steps: 1. Checkout code 2. Setup Python with pip cache 3. Install UV package manager 4. Install dependencies: <code>uv pip install -e \".[dev]\"</code> 5. Run pytest: <code>pytest --cov=scripts/python --cov-report=xml</code> 6. Upload coverage to Codecov 7. Upload test artifacts</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#lint-job","title":"Lint Job","text":"<ul> <li>Black: Format check (line-length=100)</li> <li>Ruff: Linting with strict mode</li> <li>mypy: Type checking (strict mode)</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#validation-job","title":"Validation Job","text":"<ul> <li>YAML validation with yamllint</li> <li>JSON validation via Python script</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#summary-job","title":"Summary Job","text":"<ul> <li>Depends on: test, lint, validation</li> <li>Reports overall status</li> <li>Fails if any job fails</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#triggers","title":"Triggers","text":"<ul> <li>Push to <code>main</code>, <code>develop</code> branches</li> <li>Pull requests to <code>main</code></li> <li>Manual workflow dispatch</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#secrets-required","title":"Secrets Required","text":"<ul> <li><code>CODECOV_TOKEN</code> - For coverage upload</li> <li><code>GH_PAT</code> - GitHub Personal Access Token</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/ci-cd/#coverage-threshold","title":"Coverage Threshold","text":"<p>Minimum 80% coverage enforced via <code>--cov-fail-under=80</code>.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/overview/","title":"Overview","text":"<ul> <li>testing</li> <li>implementation</li> <li>overview</li> <li>pytest description: Testing infrastructure implementation overview \u2014\\n# Testing Implementation Overview</li> </ul> <p>Comprehensive testing infrastructure for Python scripts (Phase 4.1 complete).</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/overview/#accomplishments","title":"Accomplishments","text":"<p>1. Pytest Framework - Configured with plugins (pytest-cov, pytest-mock, pytest-asyncio), &gt;80% coverage threshold</p> <p>2. Test Structure - 382 comprehensive unit tests across 7 test modules</p> <p>3. CI/CD Pipeline - Matrix testing on Ubuntu/Windows/macOS with Python 3.14</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/overview/#test-modules","title":"Test Modules","text":"<ul> <li><code>tests/python/utils/</code> - Colors, file utils, logging (160 tests)</li> <li><code>tests/python/validation/</code> - Env and config validation (129 tests)</li> <li><code>tests/python/audit/</code> - Code quality and dependency checks (93 tests)</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/overview/#coverage-results","title":"Coverage Results","text":"<ul> <li>Utils Module: &gt;90% coverage</li> <li>Validation Module: &gt;85% coverage</li> <li>Audit Module: &gt;85% coverage</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/overview/#quick-start","title":"Quick Start","text":"Bash<pre><code># Run all tests\npytest\n\n# With coverage report\npytest --cov=scripts/python --cov-report=html\n\n# Specific module\npytest tests/python/utils/\n</code></pre> <p>See subdocs for detailed implementation guides.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/pytest-config/","title":"Pytest config","text":"<ul> <li>testing</li> <li>pytest</li> <li>configuration</li> <li>setup description: Pytest framework configuration and setup details \u2014\\n# Pytest Configuration</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/pytest-config/#pyprojecttoml-setup","title":"pyproject.toml Setup","text":"<p>Dependencies: </p>TOML<pre><code>[project.optional-dependencies]\ndev = [\n    \"pytest&gt;=8.3\",\n    \"pytest-cov&gt;=6.0\",\n    \"pytest-mock&gt;=3.14\",\n    \"pytest-asyncio&gt;=0.24\"\n]\n</code></pre><p></p> <p>Pytest Configuration: </p>TOML<pre><code>[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\npython_files = [\"test_*.py\"]\npython_classes = [\"Test*\"]\npython_functions = [\"test_*\"]\naddopts = \"--strict-markers --cov-fail-under=80\"\n</code></pre><p></p> <p>Coverage Configuration: </p>TOML<pre><code>[tool.coverage.run]\nsource = [\"scripts/python\"]\nomit = [\"*/tests/*\", \"*/__pycache__/*\"]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"def __repr__\",\n    \"raise AssertionError\",\n    \"if __name__ == .__main__.:\"\n]\n</code></pre><p></p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/pytest-config/#additional-settings","title":"Additional Settings","text":"<p>Additional pytest configuration located in <code>.config/python/pytest.ini</code>:</p> <ul> <li>Async mode: <code>asyncio_mode = auto</code></li> <li>Log level: DEBUG for test output</li> <li>Console output: short format</li> </ul> <p>Root <code>pytest.ini</code> redirects to <code>.config/python/pytest.ini</code>.</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/pytest-config/#installation","title":"Installation","text":"Bash<pre><code># Via UV (recommended)\nuv pip install -e \".[dev]\"\n\n# Via pip\npip install -e \".[dev]\"\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/test-modules/","title":"Test modules","text":"<ul> <li>testing</li> <li>test-modules</li> <li>coverage</li> <li>unit-tests description: Detailed breakdown of test modules and coverage \u2014\\n# Test Modules Breakdown</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/test-modules/#utils-tests-160-tests-90-coverage","title":"Utils Tests (160 tests, &gt;90% coverage)","text":"<p>test_colors.py (42 tests) - Color code definitions and colorize function - Message formatting (success, error, warning, info) - Bold/header formatting and separators - Edge cases: special characters, multiline text</p> <p>test_file_utils.py (67 tests) - JSON read/write operations with error handling - File line reading, existence checking - Directory creation (including nested) - File searching by extension - Edge cases: empty files, encoding issues</p> <p>test_logging_utils.py (51 tests) - ColoredFormatter for all log levels - Logger setup with various configurations - Custom formatters and color handling</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/test-modules/#validation-tests-129-tests-85-coverage","title":"Validation Tests (129 tests, &gt;85% coverage)","text":"<p>test_validate_env.py (58 tests) - Environment variable validation scenarios - Required vs optional variable handling - Value masking for security - Main function exit codes</p> <p>test_validate_configs.py (71 tests) - YAML validation with yamllint - JSON validation with exclusions - Nginx/PostgreSQL/MariaDB config validation via Docker - Mock subprocess calls</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/test-modules/#audit-tests-93-tests-85-coverage","title":"Audit Tests (93 tests, &gt;85% coverage)","text":"<p>test_code_quality.py (48 tests) - Black, Ruff, mypy checker functions - Command construction and error handling</p> <p>test_dependencies.py (45 tests) - Outdated package checking - pyproject.toml dependency validation</p>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/","title":"Usage","text":"<ul> <li>testing</li> <li>usage</li> <li>commands</li> <li>coverage description: Testing commands and usage examples \u2014\\n# Testing Usage Guide</li> </ul>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/#run-all-tests","title":"Run All Tests","text":"Bash<pre><code># Basic run\npytest\n\n# With verbose output\npytest -v\n\n# With coverage\npytest --cov=scripts/python --cov-report=html\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/#run-specific-tests","title":"Run Specific Tests","text":"Bash<pre><code># Single module\npytest tests/python/utils/\n\n# Single file\npytest tests/python/utils/test_colors.py\n\n# Single test function\npytest tests/python/utils/test_colors.py::test_color_codes\n\n# Pattern matching\npytest -k \"color\"\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/#coverage-reports","title":"Coverage Reports","text":"Bash<pre><code># HTML report\npytest --cov=scripts/python --cov-report=html\n# Open: htmlcov/index.html\n\n# Terminal report\npytest --cov=scripts/python --cov-report=term\n\n# XML for CI/CD\npytest --cov=scripts/python --cov-report=xml\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/#debugging","title":"Debugging","text":"Bash<pre><code># Show print statements\npytest -s\n\n# Stop on first failure\npytest -x\n\n# Show locals on failure\npytest -l\n\n# PDB on failure\npytest --pdb\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/#parallel-execution","title":"Parallel Execution","text":"Bash<pre><code># Install plugin\npip install pytest-xdist\n\n# Run with 4 workers\npytest -n 4\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"testing/guides/usage/#watch-mode","title":"Watch Mode","text":"Bash<pre><code># Install plugin\npip install pytest-watch\n\n# Auto-run on changes\nptw\n</code></pre>","tags":["documentation","testing","pytest"]},{"location":"web-content/installation/","title":"Installation","text":"<ul> <li>web-content</li> <li>installation</li> <li>documentation description: Documentation for installation in web-content \u2014\\n# Cluster Dashboard - Installation &amp; Usage Guide</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#quick-start","title":"Quick Start","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#windows","title":"Windows","text":"Text Only<pre><code># Install dependencies\ninstall.bat\n\n# Start development server\nstart.bat\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#powershelllinuxmac","title":"PowerShell/Linux/Mac","text":"Bash<pre><code># Install dependencies\nnpm install --legacy-peer-deps\n\n# Start development server\nnpm run dev\n</code></pre> <p>The dashboard will be available at: http://localhost:3000</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#docker-integration","title":"Docker Integration","text":"<p>To serve this dashboard through the docker-compose stack, you can:</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#option-1-development-mode-recommended-for-development","title":"Option 1: Development Mode (Recommended for development)","text":"Bash<pre><code>cd web-content\nnpm run dev\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#option-2-production-build","title":"Option 2: Production Build","text":"Bash<pre><code># Build production assets\nnpm run build\n\n# Preview production build\nnpm run preview\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#option-3-nginx-container-production","title":"Option 3: Nginx Container (Production)","text":"YAML<pre><code># Add to docker-compose.yml\nweb-dashboard:\n  image: nginx:alpine\n  container_name: cluster-dashboard\n  volumes:\n    - ./web-content/dist:/usr/share/nginx/html:ro\n    - ./web-content/nginx.conf:/etc/nginx/conf.d/default.conf:ro\n  ports:\n    - \"3000:80\"\n  networks:\n    - platform_network\n  healthcheck:\n    test: [\"CMD\", \"wget\", \"--quiet\", \"--tries=1\", \"--spider\", \"http://localhost/\"]\n    interval: 30s\n    timeout: 10s\n    retries: 3\n  restart: unless-stopped\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#available-scripts","title":"Available Scripts","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#npm-run-dev","title":"<code>npm run dev</code>","text":"<p>Starts the development server with hot-reload at http://localhost:3000</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#npm-run-build","title":"<code>npm run build</code>","text":"<p>Creates an optimized production build in the <code>dist/</code> directory</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#npm-run-preview","title":"<code>npm run preview</code>","text":"<p>Preview the production build locally</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#npm-run-lint","title":"<code>npm run lint</code>","text":"<p>Run ESLint to check code quality</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#npm-run-type-check","title":"<code>npm run type-check</code>","text":"<p>Run TypeScript compiler to check for type errors</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#troubleshooting","title":"Troubleshooting","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#dependencies-installation-issues","title":"Dependencies Installation Issues","text":"<p>If you encounter issues with <code>npm install</code>:</p> <ol> <li> <p>Clear cache and retry: </p>Bash<pre><code>npm cache clean --force\nrm -rf node_modules package-lock.json\nnpm install --legacy-peer-deps\n</code></pre><p></p> </li> <li> <p>Node version:    Ensure you\u2019re using Node.js 18 or higher: </p>Bash<pre><code>node --version\n</code></pre><p></p> </li> <li> <p>Permission issues:    On Windows, run as Administrator    On Linux/Mac, don\u2019t use sudo with npm</p> </li> </ol>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#port-already-in-use","title":"Port Already in Use","text":"<p>If port 3000 is already in use, you can change it in <code>vite.config.ts</code>: </p>TypeScript<pre><code>server: {\n  port: 3001, // Change to any available port\n}\n</code></pre><p></p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#cors-issues","title":"CORS Issues","text":"<p>If services aren\u2019t reachable for health checks, ensure: - Services are running on expected ports - No firewall blocking localhost connections - Docker containers are using <code>network_mode: host</code> or proper port mapping</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#build-errors","title":"Build Errors","text":"<p>If you encounter TypeScript or build errors: </p>Bash<pre><code># Clean build artifacts\nrm -rf dist\n\n# Rebuild\nnpm run type-check\nnpm run build\n</code></pre><p></p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#customization","title":"Customization","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#adding-new-services","title":"Adding New Services","text":"<p>Edit <code>src/services/clusterService.ts</code> and add your service to <code>SERVICES_CONFIG</code>:</p> TypeScript<pre><code>{\n  id: 'my-service',\n  name: 'My Service',\n  category: 'web',\n  port: 8080,\n  healthEndpoint: 'http://localhost:8080/health',\n  description: 'My custom service',\n  icon: '\ud83d\ude80',\n}\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#changing-polling-intervals","title":"Changing Polling Intervals","text":"<p>Edit hook files in <code>src/hooks/</code>: - Health checks: <code>useClusterHealth.ts</code> (line 30000 ms) - Metrics: <code>useClusterMetrics.ts</code> (line 15000 ms)</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#styling","title":"Styling","text":"<p>Modify <code>tailwind.config.js</code> for theme customization: </p>JavaScript<pre><code>theme: {\n  extend: {\n    colors: {\n      primary: { /* your colors */ }\n    }\n  }\n}\n</code></pre><p></p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#production-deployment","title":"Production Deployment","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#build-for-production","title":"Build for Production","text":"Bash<pre><code>npm run build\n</code></pre> <p>This creates optimized files in <code>dist/</code> with: - Minified JavaScript - Optimized CSS - Source maps for debugging - Code splitting for faster loading</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#serve-with-nginx","title":"Serve with Nginx","text":"Bash<pre><code># Copy dist/ contents to nginx html directory\ncp -r dist/* /usr/share/nginx/html/\n</code></pre> <p>Or use the docker-compose integration (Option 3 above).</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#performance-notes","title":"Performance Notes","text":"<ul> <li>Health checks use <code>no-cors</code> mode to avoid CORS preflight requests</li> <li>Metrics update every 15 seconds to reduce server load</li> <li>Service health checks every 30 seconds</li> <li>Chart data limited to last 20 points to prevent memory leaks</li> <li>Code splitting reduces initial bundle size</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#browser-support","title":"Browser Support","text":"<p>Requires a modern browser with: - ES2022 support - CSS Grid - Flexbox - fetch API</p> <p>Recommended browsers: - Chrome/Edge 90+ - Firefox 88+ - Safari 14+</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#security-considerations","title":"Security Considerations","text":"<p>\u26a0\ufe0f Important: This dashboard is designed for local/internal use and includes: - No authentication - Direct service access URLs - Exposed port information</p> <p>For production deployments: 1. Add authentication layer (OAuth, JWT, etc.) 2. Use reverse proxy for service access 3. Implement rate limiting 4. Use HTTPS 5. Restrict network access</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#support","title":"Support","text":"<p>For issues or questions: 1. Check this guide first 2. Review browser console for errors 3. Check service health endpoints manually 4. Verify Docker containers are running</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/installation/#license","title":"License","text":"<p>Part of the Modern Data Platform v2.0 project.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/","title":"Overview","text":"<ul> <li>web-content</li> <li>overview</li> <li>documentation description: Documentation for overview in web-content \u2014\\n# Cluster Dashboard</li> </ul> <p>A comprehensive React-based monitoring dashboard for the Modern Data Platform v2.0, providing real-time cluster status, service health monitoring, and system metrics visualization.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Real-time Service Monitoring - Track 20+ services including databases, caches, load balancers, and monitoring tools</li> <li>System Health Overview - At-a-glance cluster health with color-coded status indicators</li> <li>Cluster Metrics - Live metrics tracking for services, volumes, and network latency</li> <li>Volume Status - Monitor Docker volume usage across all services</li> <li>Network Topology - Visualize service connections and network architecture</li> <li>Dark Mode - Full dark/light theme support with system preference detection</li> <li>Responsive Design - Optimized for desktop and mobile viewing</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#tech-stack","title":"\ud83d\udee0\ufe0f Tech Stack","text":"<ul> <li>React 18 - Modern React with hooks and concurrent features</li> <li>TypeScript - Type-safe development</li> <li>Vite 6 - Lightning-fast build tool and dev server</li> <li>Tailwind CSS - Utility-first CSS framework</li> <li>Recharts - Composable charting library for metrics visualization</li> <li>Lucide React - Beautiful, consistent icon set</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#installation","title":"\ud83d\udce6 Installation","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#development-mode-recommended","title":"Development Mode (Recommended)","text":"Bash<pre><code>cd web-content\nnpm install\nnpm run dev\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#production-mode-docker","title":"Production Mode (Docker)","text":"<p>The dashboard is integrated into the main cluster docker-compose.yml: </p>Bash<pre><code>docker-compose up -d cluster-dashboard\n</code></pre><p></p> <p>See QUICKSTART.md for detailed instructions.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#development","title":"\ud83d\udd27 Development","text":"Bash<pre><code># Type checking\nnpm run type-check\n\n# Lint code\nnpm run lint\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#services-monitored","title":"\ud83c\udf10 Services Monitored","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#infrastructure-4","title":"Infrastructure (4)","text":"<ul> <li>Load Balancer (Nginx)</li> <li>Web Server 1-3 (Nginx)</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#databases-2","title":"Databases (2)","text":"<ul> <li>PostgreSQL 13</li> <li>MariaDB 11</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#cache-storage-2","title":"Cache &amp; Storage (2)","text":"<ul> <li>Redis 7</li> <li>MinIO (S3-compatible)</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#compute-3","title":"Compute (3)","text":"<ul> <li>Jupyter Lab (GPU-accelerated)</li> <li>GitHub MCP</li> <li>k9s</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#monitoring-2","title":"Monitoring (2)","text":"<ul> <li>Grafana</li> <li>Prometheus</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#development-tools-7","title":"Development Tools (7)","text":"<ul> <li>BuildKit</li> <li>LocalStack</li> <li>MailHog</li> <li>pgAdmin</li> <li>Redis Commander</li> <li>And more\u2026</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#dashboard-sections","title":"\ud83d\udcca Dashboard Sections","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#system-health","title":"System Health","text":"<ul> <li>Overall cluster health status</li> <li>Health score percentage</li> <li>Healthy/degraded/unhealthy service counts</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#cluster-metrics","title":"Cluster Metrics","text":"<ul> <li>Total services count</li> <li>Healthy services count</li> <li>Volume statistics</li> <li>Real-time network latency graph</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#service-grid","title":"Service Grid","text":"<ul> <li>Individual service cards with:</li> <li>Status indicators</li> <li>CPU and memory metrics</li> <li>Quick access links</li> <li>Port information</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#volume-status","title":"Volume Status","text":"<ul> <li>Docker volume usage tracking</li> <li>Storage allocation per service</li> <li>Visual progress bars</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#network-topology","title":"Network Topology","text":"<ul> <li>Service connection mapping</li> <li>Port information</li> <li>Connection status indicators</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#customization","title":"\ud83c\udfa8 Customization","text":"<p>The dashboard is highly customizable through:</p> <ul> <li>Tailwind Config - Modify colors, spacing, and theme in <code>tailwind.config.js</code></li> <li>Service Configuration - Update service list in <code>src/services/layers/</code> (organized by cluster layer)</li> <li>Metrics - Adjust polling intervals in hooks (<code>src/hooks/</code>)</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#adding-new-services","title":"Adding New Services","text":"<p>Services are organized into architectural layers matching docker-compose.yml: 1. Choose layer: <code>infrastructure</code>, <code>data</code>, <code>compute</code>, <code>monitoring</code>, or <code>development</code> 2. Edit corresponding file in <code>src/services/layers/</code> 3. Add service configuration with container name 4. Service automatically appears in dashboard</p> <p>See <code>src/services/layers/README.md</code> for detailed architecture documentation.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#health-check-endpoints","title":"\ud83d\udea6 Health Check Endpoints","text":"<p>The dashboard performs health checks on services with exposed endpoints: - Load Balancer: <code>http://localhost:8080</code> - PostgreSQL: Port 5432 - MariaDB: Port 3306 - Redis: Port 6379 - MinIO: <code>http://localhost:9000/minio/health/live</code> - Grafana: <code>http://localhost:3002/api/health</code> - Prometheus: <code>http://localhost:9090/-/healthy</code></p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#configuration","title":"\ud83d\udcdd Configuration","text":"","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#environment-variables","title":"Environment Variables","text":"<p>No environment variables required - all configuration is in code for simplicity.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#service-polling","title":"Service Polling","text":"<ul> <li>Health checks: Every 30 seconds</li> <li>Metrics updates: Every 15 seconds</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#security-notes","title":"\ud83d\udd10 Security Notes","text":"<ul> <li>Dashboard runs on port 3000 by default</li> <li>No authentication implemented (intended for local/private network use)</li> <li>All health checks use <code>no-cors</code> mode for cross-origin requests</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#browser-support","title":"\ud83d\udcf1 Browser Support","text":"<ul> <li>Chrome/Edge (latest)</li> <li>Firefox (latest)</li> <li>Safari (latest)</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#contributing","title":"\ud83e\udd1d Contributing","text":"<p>This dashboard is part of the Modern Data Platform v2.0 project. To contribute:</p> <ol> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Make your changes</li> <li>Submit a pull request</li> </ol>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#license","title":"\ud83d\udcc4 License","text":"<p>Part of the Modern Data Platform v2.0 project.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/overview/#acknowledgments","title":"\ud83d\ude4f Acknowledgments","text":"<p>Built with modern React patterns and best practices, leveraging: - Vite for blazing-fast development - TypeScript for type safety - Tailwind CSS for rapid UI development - Recharts for beautiful data visualization</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/","title":"Quickstart","text":"<ul> <li>web-content</li> <li>quickstart</li> <li>documentation description: Documentation for quickstart in web-content \u2014\\n# Cluster Dashboard - Quick Start</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#development-mode-hot-reload","title":"Development Mode (Hot Reload)","text":"Bash<pre><code>cd web-content\nnpm install\nnpm run dev\n</code></pre> <p>Dashboard will be available at: http://localhost:3000</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#production-mode-docker","title":"Production Mode (Docker)","text":"<p>The dashboard is automatically built and deployed as part of the main cluster:</p> Bash<pre><code># From project root\ndocker-compose up -d cluster-dashboard\n\n# View logs\ndocker-compose logs -f cluster-dashboard\n\n# Rebuild after changes\ndocker-compose build cluster-dashboard\ndocker-compose up -d cluster-dashboard\n</code></pre> <p>Dashboard will be available at: http://localhost:3000</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#features","title":"Features","text":"<ul> <li>Real-time Monitoring: 20+ services tracked with health status</li> <li>System Health: Overall cluster health with metrics</li> <li>Docker Stats: Container, image, volume, and network tracking</li> <li>Resource Usage: CPU, Memory, and Disk visualization</li> <li>Service Grid: Individual service cards with quick access</li> <li>Volume Status: Storage usage across all volumes</li> <li>Network Topology: Service connection mapping</li> <li>Dark Mode: Automatic theme switching</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#architecture","title":"Architecture","text":"<ul> <li>Frontend: React 18 + TypeScript + Vite 6</li> <li>Styling: Tailwind CSS v3</li> <li>Charts: Recharts for data visualization</li> <li>Icons: Lucide React</li> <li>Build: Multi-stage Docker build with Nginx</li> <li>Integration: Part of main docker-compose.yml cluster</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#monitored-services","title":"Monitored Services","text":"<p>All 20 cluster services are pre-configured: - Load Balancer + 3 Web Servers - PostgreSQL, MariaDB, Redis - MinIO, Jupyter Lab - Grafana, Prometheus - BuildKit, LocalStack, MailHog - pgAdmin, Redis Commander - GitHub MCP, k9s</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#service-integration","title":"Service Integration","text":"<p>The dashboard is connected to the cluster network and can: - Check health endpoints of all services - Display real-time metrics - Show Docker infrastructure stats - Visualize network topology</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#configuration","title":"Configuration","text":"<p>Service definitions are in: - <code>src/services/clusterService.ts</code> - Service configuration - <code>src/hooks/useClusterHealth.ts</code> - Health check polling (30s) - <code>src/hooks/useClusterMetrics.ts</code> - Metrics updates (15s) - <code>src/hooks/useDockerStats.ts</code> - Docker stats (10s)</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#tech-stack","title":"Tech Stack","text":"<ul> <li>React 18.3.1</li> <li>TypeScript 5.7.2</li> <li>Vite 6.0.1</li> <li>Tailwind CSS 3.4.15</li> <li>Recharts 2.13.3</li> <li>Lucide React 0.453.0</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#build-output","title":"Build Output","text":"<p>Production build includes: - Minified JS/CSS bundles - Code splitting (react-vendor, charts, icons) - Optimized images and assets - Source maps for debugging - Gzip compression via Nginx - Health check endpoint at <code>/health</code></p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#browser-support","title":"Browser Support","text":"<ul> <li>Chrome/Edge 90+</li> <li>Firefox 88+</li> <li>Safari 14+</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/quickstart/#notes","title":"Notes","text":"<ul> <li>No authentication (designed for internal use)</li> <li>Health checks use no-cors mode</li> <li>All services use container names for networking</li> <li>Dashboard connects to cluster-network bridge</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/","title":"Index","text":"<ul> <li>web-content</li> <li>architecture</li> <li>index description: Web dashboard architecture documentation index \u2014\\n# Web Dashboard Architecture</li> </ul> <p>React 18 + TypeScript + Vite dashboard for Modern Data Platform monitoring.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/#components","title":"Components","text":"<p>Overview: Core application structure and entry points File: <code>components/overview.md</code></p> <p>Structure: Project organization and directory layout File: <code>components/structure.md</code></p> <p>Services: API integration and data services File: <code>components/services.md</code></p> <p>State Management: React hooks and state patterns File: <code>components/state-management.md</code></p> <p>Types: TypeScript interfaces and type definitions File: <code>components/types.md</code></p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/#technology-stack","title":"Technology Stack","text":"<ul> <li>React 18: UI framework</li> <li>TypeScript: Type safety</li> <li>Vite: Build tool (HMR, ESM)</li> <li>Tailwind CSS: Styling framework</li> <li>Recharts: Data visualization</li> <li>Docker API: Backend integration</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/#quick-links","title":"Quick Links","text":"<ul> <li>Installation: <code>docs/web-content/installation.md</code></li> <li>Quickstart: <code>docs/web-content/quickstart.md</code></li> <li>Overview: <code>docs/web-content/overview.md</code></li> </ul> <p>Navigate to <code>components/</code> directory for detailed documentation.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/overview/","title":"Overview","text":"<ul> <li>web-content</li> <li>architecture</li> <li>overview</li> <li>javascript description: Modern Data Platform web dashboard architecture overview \u2014\\n# Architecture Overview</li> </ul> <p>React 18 + TypeScript + Vite dashboard for Docker infrastructure monitoring.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/overview/#tech-stack","title":"Tech Stack","text":"<ul> <li>React 18 - UI framework with hooks</li> <li>TypeScript - Type-safe development</li> <li>Vite - Fast build tool and dev server</li> <li>Tailwind CSS - Utility-first styling</li> <li>Docker API - Real-time container stats</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/overview/#architecture-layers","title":"Architecture Layers","text":"<ol> <li>UI Components - Reusable React components</li> <li>Services Layer - API communication and data transformation</li> <li>State Management - React hooks (useState, useEffect, custom hooks)</li> <li>Type System - TypeScript interfaces for type safety</li> </ol>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/overview/#key-features","title":"Key Features","text":"<ul> <li>Real-time container monitoring</li> <li>Docker stats visualization</li> <li>Service health tracking</li> <li>Network topology display</li> <li>Volume status monitoring</li> <li>Cluster metrics dashboard</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/overview/#directory-structure","title":"Directory Structure","text":"<p>\\\\ src/ \u251c\u2500\u2500 components/  # Reusable UI components \u251c\u2500\u2500 hooks/       # Custom React hooks \u251c\u2500\u2500 services/    # API and data services \u2514\u2500\u2500 types/       # TypeScript type definitions \\\\</p> <p>See subdocs for detailed component breakdown and service architecture.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/services/","title":"Services","text":"<ul> <li>web-content</li> <li>architecture</li> <li>docker-compose</li> <li>api description: Service layer architecture and API communication \u2014\\n# Services Layer</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/services/#service-categories","title":"Service Categories","text":"<p>Docker API Service (<code>services/dockerAPI.ts</code>) - Communicates with Express backend API - Fetches container stats and health data - Handles API errors and retries</p> <p>Cluster Service (<code>services/clusterService.ts</code>) - Aggregates cluster-wide metrics - Calculates health scores - Provides cluster status summaries</p> <p>Compute Layer (<code>services/layers/compute.ts</code>) - Compute resource metrics (CPU, memory)</p> <p>Data Layer (<code>services/layers/data.ts</code>) - Database and storage metrics</p> <p>Additional Layers - Network, monitoring, security, storage layers</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/services/#api-communication-pattern","title":"API Communication Pattern","text":"TypeScript<pre><code>// Example: Fetch container stats\nexport const fetchContainerStats = async (): Promise&lt;ContainerStats[]&gt; =&gt; {\n  const response = await fetch('/api/containers/stats');\n  if (!response.ok) throw new Error('API request failed');\n  return response.json();\n};\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/services/#error-handling","title":"Error Handling","text":"<ul> <li>Automatic retries for failed requests</li> <li>User-friendly error messages</li> <li>Fallback UI for missing data</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/services/#data-transformation","title":"Data Transformation","text":"<p>Services transform raw API responses into typed, usable data structures for components.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/state-management/","title":"State management","text":"<ul> <li>web-content</li> <li>architecture</li> <li>javascript description: State management strategy using React hooks \u2014\\n# State Management</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/state-management/#custom-hooks","title":"Custom Hooks","text":"<p><code>useClusterHealth.ts</code> - Fetches and manages cluster health data - Provides health score and status - Auto-refresh every 30 seconds</p> <p><code>useClusterMetrics.ts</code> - Aggregates cluster-wide metrics - Provides CPU, memory, network stats - Real-time updates</p> <p><code>useDockerStats.ts</code> - Fetches container statistics - Manages polling interval - Handles loading and error states</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/state-management/#hook-pattern","title":"Hook Pattern","text":"TypeScript<pre><code>export const useClusterHealth = () =&gt; {\n  const [health, setHealth] = useState&lt;ClusterHealth | null&gt;(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState&lt;Error | null&gt;(null);\n\n  useEffect(() =&gt; {\n    // Fetch data\n    // Set state\n    // Handle errors\n  }, []);\n\n  return { health, loading, error };\n};\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/state-management/#state-management-principles","title":"State Management Principles","text":"<ol> <li>Local State - Component-specific state with useState</li> <li>Derived State - Computed from props or other state</li> <li>Shared State - Via custom hooks, not global store</li> <li>Async State - Loading, error, data pattern</li> </ol> <p>No Redux - React hooks sufficient for current complexity.</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/structure/","title":"Structure","text":"<ul> <li>web-content</li> <li>architecture</li> <li>javascript description: React component structure and organization \u2014\\n# Component Structure</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/structure/#component-categories","title":"Component Categories","text":"<p>Layout Components (<code>components/layout/</code>) - <code>Header.tsx</code> - App header with navigation and branding</p> <p>Docker Components (<code>components/docker/</code>) - <code>DockerStats.tsx</code> - Real-time container statistics display</p> <p>Health Components (<code>components/health/</code>) - <code>SystemHealth.tsx</code> - System health monitoring dashboard</p> <p>Metrics Components (<code>components/metrics/</code>) - <code>ClusterMetrics.tsx</code> - Cluster-wide metrics visualization</p> <p>Network Components (<code>components/network/</code>) - <code>NetworkTopology.tsx</code> - Network topology visualization</p> <p>Services Components (<code>components/services/</code>) - <code>ServiceCard.tsx</code> - Individual service card display - <code>ServiceGrid.tsx</code> - Grid layout for service cards</p> <p>Storage Components (<code>components/storage/</code>) - <code>VolumeStatus.tsx</code> - Volume status and usage display</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/structure/#component-design-principles","title":"Component Design Principles","text":"<ol> <li>Single Responsibility - Each component has one clear purpose</li> <li>Reusability - Components can be composed and reused</li> <li>Type Safety - All props typed with TypeScript interfaces</li> <li>Custom Hooks - Business logic extracted to hooks</li> <li>Tailwind Styling - Utility-first CSS for consistent design</li> </ol>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/structure/#example-component-pattern","title":"Example Component Pattern","text":"TSX<pre><code>interface Props {\n  data: ContainerData;\n  onUpdate: () =&gt; void;\n}\n\nexport const Component: React.FC&lt;Props&gt; = ({ data, onUpdate }) =&gt; {\n  return &lt;div&gt;...&lt;/div&gt;;\n};\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/types/","title":"Types","text":"<ul> <li>web-content</li> <li>architecture</li> <li>typescript description: TypeScript type system and type definitions \u2014\\n# Type System</li> </ul>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/types/#type-definitions-srctypes","title":"Type Definitions (<code>src/types/</code>)","text":"<p><code>cluster.ts</code> - ClusterHealth, ClusterMetrics, ClusterStatus interfaces - Service health types - Node status types</p> <p>Additional Type Files - Container types (ContainerStats, ContainerInfo) - Network types (NetworkTopology, NetworkNode) - Volume types (VolumeStatus, VolumeUsage) - Metrics types (MetricData, MetricSeries)</p>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/types/#type-safety-benefits","title":"Type Safety Benefits","text":"<ol> <li>Compile-Time Errors - Catch bugs before runtime</li> <li>IntelliSense - Auto-complete and documentation</li> <li>Refactoring Safety - Type errors guide changes</li> <li>Self-Documenting - Types serve as documentation</li> </ol>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/types/#example-type-definition","title":"Example Type Definition","text":"TypeScript<pre><code>export interface ClusterHealth {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  score: number; // 0-100\n  services: ServiceHealth[];\n  lastUpdated: Date;\n}\n\nexport interface ServiceHealth {\n  name: string;\n  status: 'running' | 'stopped' | 'error';\n  cpu: number;\n  memory: number;\n}\n</code></pre>","tags":["documentation","web-content","architecture"]},{"location":"web-content/architecture/components/types/#type-conventions","title":"Type Conventions","text":"<ul> <li>Interface for object shapes</li> <li>Type alias for unions/intersections</li> <li>Enums for fixed sets of values</li> <li>Readonly for immutable data</li> </ul>","tags":["documentation","web-content","architecture"]}]}