services:
  python:
    build:
      context: ../../../..
      dockerfile: .docker-compose/mcp/python_utils/dockerfiles/python.Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    volumes:
      - ./.docker-compose/mcp/python_utils:/app:cached
      - docker_examples_python_venv:/app/.venv
      - docker_examples_python_cache:/root/.cache/pip
      - docker_examples_python_pytest_cache:/tmp/.cache/pytest
      - docker_examples_python_mypy_cache:/tmp/.cache/mypy
      - docker_examples_python_ruff_cache:/tmp/.cache/ruff
    working_dir: /app
    command: sh -c "pip install -e python_utils && python -m docker_examples_utils.api"
    ports:
      - "8001:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/python_utils:/app
      - PYTHONOPTIMIZE=1
      - PYTHONDONTWRITEBYTECODE=1
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mcp-python-network
    healthcheck:
      test:
        ["CMD", "python", "-c", "import sys; print('Python OK'); sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  test-runner:
    build:
      context: ../../../..
      dockerfile: .docker-compose/mcp/python_utils/dockerfiles/python.Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    volumes:
      - ./.docker-compose/mcp/python_utils:/app:cached
      - docker_examples_python_venv:/app/.venv
      - docker_examples_python_cache:/root/.cache/pip
      - docker_examples_python_pytest_cache:/tmp/.cache/pytest
      - docker_examples_python_mypy_cache:/tmp/.cache/mypy
      - docker_examples_python_ruff_cache:/tmp/.cache/ruff
      - docker_examples_test_coverage:/app/htmlcov
    working_dir: /app
    command: sh -c "pip install -e python_utils && python -m pytest tests/ -v --cov=docker_examples_utils --cov-report=html --cov-report=term"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/python_utils:/app
      - PYTHONOPTIMIZE=1
      - PYTHONDONTWRITEBYTECODE=1
    networks:
      - mcp-python-network
    profiles:
      - test
    depends_on:
      python:
        condition: service_healthy

  db:
    build:
      context: ../../../..
      dockerfile: .docker-compose/mcp/python_utils/dockerfiles/postgres.Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    secrets:
      - db_password
    volumes:
      - docker_examples_db_data:/var/lib/postgresql/data
      - docker_examples_db_logs:/var/log/postgresql
    ports:
      - "5432:5432"
    networks:
      - mcp-python-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    build:
      context: ../../../..
      dockerfile: .docker-compose/mcp/python_utils/dockerfiles/redis.Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    volumes:
      - docker_examples_redis_data:/data
      - docker_examples_redis_logs:/var/log/redis
    ports:
      - "6379:6379"
    networks:
      - mcp-python-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  docker_examples_db_data:
    driver: local
  docker_examples_db_logs:
    driver: local
  docker_examples_redis_data:
    driver: local
  docker_examples_redis_logs:
    driver: local
  docker_examples_python_venv:
    driver: local
  docker_examples_python_cache:
    driver: local
  docker_examples_python_pytest_cache:
    driver: local
  docker_examples_python_mypy_cache:
    driver: local
  docker_examples_python_ruff_cache:
    driver: local
  docker_examples_test_coverage:
    driver: local

networks:
  mcp-python-network:
    driver: bridge

secrets:
  db_password:
    file: ../../../secrets/db_password.txt
