# Docker Compose Override for PostgreSQL Optimizations
# Use: docker-compose -f docker-compose.yml -f docker-compose.postgres.yml up

services:
  cluster-postgres:
    # Mount custom PostgreSQL configuration
    volumes:
      - cluster_postgres_data:/var/lib/postgresql/data
      - ./.config/database/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    
    # Use custom configuration file
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    
    # Enhanced resource allocation for high-performance workloads
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 8G
        reservations:
          cpus: '4.0'
          memory: 4G
    
    # PostgreSQL-specific environment optimizations
    environment:
      POSTGRES_DB: clusterdb
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      # Performance tuning via environment
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --lc-collate=C --lc-ctype=C'
      # Enable additional PostgreSQL features
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    
    # PostgreSQL-specific health check with custom config
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U \$\ -d clusterdb']
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    
    # PostgreSQL-specific logging
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'
        labels: 'service=postgresql,tier=data'
