# Docker - Environment Variables Template
# Copy this file to secrets.env and fill in your actual values
# NEVER commit secrets.env to version control!

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Password
# Generate with: openssl rand -base64 32
docker_DB_PASSWORD=your_secure_database_password_here

# PostgreSQL Database User
docker_DB_USER=postgres

# PostgreSQL Database Name
docker_DB_NAME=docker

# PostgreSQL Host (usually 'db' for docker-compose)
docker_DB_HOST=db

# PostgreSQL Port
docker_DB_PORT=5432

# =============================================================================
# API SECURITY
# =============================================================================

# API Key for external API authentication
# Generate with: openssl rand -hex 32
docker_API_KEY=your_api_key_here

# JWT Secret for token signing
# Generate with: openssl rand -base64 64
docker_JWT_SECRET=your_jwt_secret_here

# API Rate Limiting - Requests per window
docker_RATE_LIMIT_REQUESTS=100

# API Rate Limiting - Time window in seconds
docker_RATE_LIMIT_WINDOW=60

# CORS Origins (comma-separated)
docker_CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# GitHub Token for API access
# Get from: https://github.com/settings/tokens
docker_GITHUB_TOKEN=your_github_token_here

# Redis Password (optional)
# Generate with: openssl rand -base64 32
docker_REDIS_PASSWORD=

# Redis URL
docker_REDIS_URL=redis://redis:6379

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
docker_ENVIRONMENT=development

# Debug Mode
docker_DEBUG=true

# Log Level
docker_LOG_LEVEL=INFO

# Server Host
docker_HOST=0.0.0.0

# Server Port
docker_PORT=8000

# =============================================================================
# MONITORING & METRICS
# =============================================================================

# Enable Prometheus Metrics
docker_METRICS_ENABLED=true

# Metrics Endpoint
docker_METRICS_ENDPOINT=/metrics

# Health Check Endpoint
docker_HEALTH_ENDPOINT=/health

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Hot Reload (development only)
docker_HOT_RELOAD=true

# Auto Restart (development only)
docker_AUTO_RESTART=true

# Verbose Logging (development only)
docker_VERBOSE_LOGGING=true

# =============================================================================
# SECURITY HEADERS
# =============================================================================

# Enable Security Headers
docker_SECURITY_HEADERS_ENABLED=true

# Content Security Policy
docker_CSP_ENABLED=true

# HSTS Enabled
docker_HSTS_ENABLED=true

# X-Frame-Options
docker_X_FRAME_OPTIONS=DENY

# =============================================================================
# INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to secrets.env:
#    cp .secrets/.env.template .secrets/secrets.env
#
# 2. Replace all placeholder values with actual secrets
#
# 3. Generate secure passwords:
#    openssl rand -base64 32  # For passwords
#    openssl rand -hex 32     # For API keys
#    openssl rand -base64 64  # For JWT secrets
#
# 4. Load in your shell:
#    export $(cat .secrets/secrets.env | xargs)
#
# 5. Verify:
#    env | grep docker_
#
# 6. NEVER commit secrets.env to version control!</content>
<parameter name="filePath">c:\global\docker\.secrets\.env.template