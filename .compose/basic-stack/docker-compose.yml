---
# Docker Compose - Basic Stack
# Generated: 2025-10-24
# Description: Complete configuration for basic development stack

services:
  python:
    image: "docker_python:latest"
    build:
      context: "../.dockerfiles"
      dockerfile: "python.Dockerfile"
      args:
        ENVIRONMENT: development
        SERVICE_TYPE: app
        WORKERS: 1
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    volumes:
      - docker_python_app:/app
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  node:
    image: "docker_node:latest"
    build:
      context: "../.dockerfiles"
      dockerfile: "node.Dockerfile"
      args:
        ENVIRONMENT: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - docker_node_app:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  db:
    image: "postgres:15"
    environment:
      POSTGRES_DB: ${docker_DB_NAME:-mydb}
      POSTGRES_USER: ${docker_DB_USER:-user}
      POSTGRES_PASSWORD: ${docker_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - docker_db_data:/var/lib/postgresql/data
      - docker_db_logs:/var/lib/postgresql/data/log
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${docker_DB_USER:-user} -d ${docker_DB_NAME:-mydb}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  redis:
    image: "redis:7-alpine"
    ports:
      - "6379:6379"
    volumes:
      - docker_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  volumes:
  docker_db_data:
    driver: local
  docker_db_logs:
    driver: local
  docker_redis_data:
    driver: local
  docker_python_app:
    driver: local
  docker_node_app:
    driver: local

networks:
  default:
    name: docker_basic_stack_network
    driver: bridge